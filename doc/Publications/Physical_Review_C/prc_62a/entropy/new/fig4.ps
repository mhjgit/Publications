%!PS-Adobe-2.0
%%Creator: dvips(k) 5.78 Copyright 1998 Radical Eye Software (www.radicaleye.com)
%%Title: read.dvi
%%Pages: 1
%%PageOrder: Ascend
%%BoundingBox: 0 0 596 842
%%EndComments
%DVIPSCommandLine: /local/TEX/bin.linux/dvips -o fig4.ps read.dvi
%DVIPSParameters: dpi=300
%DVIPSSource:  TeX output 1999.12.07:1330
%%BeginProcSet: tex.pro
%!
/TeXDict 300 dict def TeXDict begin /N{def}def /B{bind def}N /S{exch}N
/X{S N}B /TR{translate}N /isls false N /vsize 11 72 mul N /hsize 8.5 72
mul N /landplus90{false}def /@rigin{isls{[0 landplus90{1 -1}{-1 1}
ifelse 0 0 0]concat}if 72 Resolution div 72 VResolution div neg scale
isls{landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div
hsize mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul
TR[matrix currentmatrix{dup dup round sub abs 0.00001 lt{round}if}
forall round exch round exch]setmatrix}N /@landscape{/isls true N}B
/@manualfeed{statusdict /manualfeed true put}B /@copies{/#copies X}B
/FMat[1 0 0 -1 0 0]N /FBB[0 0 0 0]N /nn 0 N /IE 0 N /ctr 0 N /df-tail{
/nn 8 dict N nn begin /FontType 3 N /FontMatrix fntrx N /FontBBox FBB N
string /base X array /BitMaps X /BuildChar{CharBuilder}N /Encoding IE N
end dup{/foo setfont}2 array copy cvx N load 0 nn put /ctr 0 N[}B /df{
/sf 1 N /fntrx FMat N df-tail}B /dfs{div /sf X /fntrx[sf 0 0 sf neg 0 0]
N df-tail}B /E{pop nn dup definefont setfont}B /ch-width{ch-data dup
length 5 sub get}B /ch-height{ch-data dup length 4 sub get}B /ch-xoff{
128 ch-data dup length 3 sub get sub}B /ch-yoff{ch-data dup length 2 sub
get 127 sub}B /ch-dx{ch-data dup length 1 sub get}B /ch-image{ch-data
dup type /stringtype ne{ctr get /ctr ctr 1 add N}if}B /id 0 N /rw 0 N
/rc 0 N /gp 0 N /cp 0 N /G 0 N /sf 0 N /CharBuilder{save 3 1 roll S dup
/base get 2 index get S /BitMaps get S get /ch-data X pop /ctr 0 N ch-dx
0 ch-xoff ch-yoff ch-height sub ch-xoff ch-width add ch-yoff
setcachedevice ch-width ch-height true[1 0 0 -1 -.1 ch-xoff sub ch-yoff
.1 sub]{ch-image}imagemask restore}B /D{/cc X dup type /stringtype ne{]}
if nn /base get cc ctr put nn /BitMaps get S ctr S sf 1 ne{dup dup
length 1 sub dup 2 index S get sf div put}if put /ctr ctr 1 add N}B /I{
cc 1 add D}B /bop{userdict /bop-hook known{bop-hook}if /SI save N @rigin
0 0 moveto /V matrix currentmatrix dup 1 get dup mul exch 0 get dup mul
add .99 lt{/QV}{/RV}ifelse load def pop pop}N /eop{SI restore userdict
/eop-hook known{eop-hook}if showpage}N /@start{userdict /start-hook
known{start-hook}if pop /VResolution X /Resolution X 1000 div /DVImag X
/IE 256 array N 2 string 0 1 255{IE S dup 360 add 36 4 index cvrs cvn
put}for pop 65781.76 div /vsize X 65781.76 div /hsize X}N /p{show}N
/RMat[1 0 0 -1 0 0]N /BDot 260 string N /rulex 0 N /ruley 0 N /v{/ruley
X /rulex X V}B /V{}B /RV statusdict begin /product where{pop false[
(Display)(NeXT)(LaserWriter 16/600)]{dup length product length le{dup
length product exch 0 exch getinterval eq{pop true exit}if}{pop}ifelse}
forall}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale rulex ruley false
RMat{BDot}imagemask grestore}}{{gsave TR -.1 .1 TR rulex ruley scale 1 1
false RMat{BDot}imagemask grestore}}ifelse B /QV{gsave newpath transform
round exch round exch itransform moveto rulex 0 rlineto 0 ruley neg
rlineto rulex neg 0 rlineto fill grestore}B /a{moveto}B /delta 0 N /tail
{dup /delta X 0 rmoveto}B /M{S p delta add tail}B /b{S p tail}B /c{-4 M}
B /d{-3 M}B /e{-2 M}B /f{-1 M}B /g{0 M}B /h{1 M}B /i{2 M}B /j{3 M}B /k{
4 M}B /w{0 rmoveto}B /l{p -4 w}B /m{p -3 w}B /n{p -2 w}B /o{p -1 w}B /q{
p 1 w}B /r{p 2 w}B /s{p 3 w}B /t{p 4 w}B /x{0 S rmoveto}B /y{3 2 roll p
a}B /bos{/SS save N}B /eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: special.pro
%!
TeXDict begin /SDict 200 dict N SDict begin /@SpecialDefaults{/hs 612 N
/vs 792 N /ho 0 N /vo 0 N /hsc 1 N /vsc 1 N /ang 0 N /CLIP 0 N /rwiSeen
false N /rhiSeen false N /letter{}N /note{}N /a4{}N /legal{}N}B
/@scaleunit 100 N /@hscale{@scaleunit div /hsc X}B /@vscale{@scaleunit
div /vsc X}B /@hsize{/hs X /CLIP 1 N}B /@vsize{/vs X /CLIP 1 N}B /@clip{
/CLIP 2 N}B /@hoffset{/ho X}B /@voffset{/vo X}B /@angle{/ang X}B /@rwi{
10 div /rwi X /rwiSeen true N}B /@rhi{10 div /rhi X /rhiSeen true N}B
/@llx{/llx X}B /@lly{/lly X}B /@urx{/urx X}B /@ury{/ury X}B /magscale
true def end /@MacSetUp{userdict /md known{userdict /md get type
/dicttype eq{userdict begin md length 10 add md maxlength ge{/md md dup
length 20 add dict copy def}if end md begin /letter{}N /note{}N /legal{}
N /od{txpose 1 0 mtx defaultmatrix dtransform S atan/pa X newpath
clippath mark{transform{itransform moveto}}{transform{itransform lineto}
}{6 -2 roll transform 6 -2 roll transform 6 -2 roll transform{
itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll curveto}}{{
closepath}}pathforall newpath counttomark array astore /gc xdf pop ct 39
0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}if}N
/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1 -1
scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3 get
ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip yflip
not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub neg 0
TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{noflips{TR
pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop 90 rotate 1
-1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg
TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr 1 get neg
sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr 2 get ppr
0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4 -1 roll add
2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S TR}if}N /cp
{pop pop showpage pm restore}N end}if}if}N /normalscale{Resolution 72
div VResolution 72 div neg scale magscale{DVImag dup scale}if 0 setgray}
N /psfts{S 65781.76 div N}N /startTexFig{/psf$SavedState save N userdict
maxlength dict begin /magscale true def normalscale currentpoint TR
/psf$ury psfts /psf$urx psfts /psf$lly psfts /psf$llx psfts /psf$y psfts
/psf$x psfts currentpoint /psf$cy X /psf$cx X /psf$sx psf$x psf$urx
psf$llx sub div N /psf$sy psf$y psf$ury psf$lly sub div N psf$sx psf$sy
scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub TR
/showpage{}N /erasepage{}N /copypage{}N /p 3 def @MacSetUp}N /doclip{
psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll newpath 4 copy 4 2
roll moveto 6 -1 roll S lineto S lineto S lineto closepath clip newpath
moveto}N /endTexFig{end psf$SavedState restore}N /@beginspecial{SDict
begin /SpecialSave save N gsave normalscale currentpoint TR
@SpecialDefaults count /ocount X /dcount countdictstack N}N /@setspecial
{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto
closepath clip}if ho vo TR hsc vsc scale ang rotate rwiSeen{rwi urx llx
sub div rhiSeen{rhi ury lly sub div}{dup}ifelse scale llx neg lly neg TR
}{rhiSeen{rhi ury lly sub div dup scale llx neg lly neg TR}if}ifelse
CLIP 2 eq{newpath llx lly moveto urx lly lineto urx ury lineto llx ury
lineto closepath clip}if /showpage{}N /erasepage{}N /copypage{}N newpath
}N /@endspecial{count ocount sub{pop}repeat countdictstack dcount sub{
end}repeat grestore SpecialSave restore end}N /@defspecial{SDict begin}
N /@fedspecial{end}B /li{lineto}B /rl{rlineto}B /rc{rcurveto}B /np{
/SaveX currentpoint /SaveY X N 1 setlinecap newpath}N /st{stroke SaveX
SaveY moveto}N /fil{fill SaveX SaveY moveto}N /ellipse{/endangle X
/startangle X /yrad X /xrad X /savematrix matrix currentmatrix N TR xrad
yrad scale 0 0 1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
TeXDict begin @defspecial

 /gnudict 256 dict def gnudict begin /Color false def /Solid false
def /gnulinewidth 5.000 def /userlinewidth gnulinewidth def /vshift
-33 def /dl {10 mul} def /hpt_ 31.5 def /vpt_ 31.5 def /hpt hpt_ def
/vpt vpt_ def /M {moveto} bind def /L {lineto} bind def /R {rmoveto}
bind def /V {rlineto} bind def /vpt2 vpt 2 mul def /hpt2 hpt 2 mul
def /Lshow { currentpoint stroke M   0 vshift R show } def /Rshow {
currentpoint stroke M   dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M   dup stringwidth pop -2 div vshift
R show } def /UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def /DL { Color {setrgbcolor
Solid {pop []} if 0 setdash }  {pop pop pop Solid {pop []} if 0 setdash}
ifelse } def /BL { stroke userlinewidth 2 mul setlinewidth } def /AL
{ stroke userlinewidth 2 div setlinewidth } def /UL { dup gnulinewidth
mul /userlinewidth exch def       10 mul /udl exch def } def /PL {
stroke userlinewidth setlinewidth } def /LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def /LT0
{ PL [] 1 0 0 DL } def /LT1 { PL [4 dl 2 dl] 0 1 0 DL } def /LT2 {
PL [2 dl 3 dl] 0 0 1 DL } def /LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def /LT5 { PL [4 dl 3 dl
1 dl 3 dl] 1 1 0 DL } def /LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL
} def /LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def /LT8
{ PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash    gsave 1 setlinecap M 0 0 V stroke grestore
} def /Dia { stroke [] 0 setdash 2 copy vpt add M   hpt neg vpt neg
V hpt vpt neg V   hpt vpt V hpt neg vpt V closepath stroke   Pnt }
def /Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V   currentpoint stroke
M   hpt neg vpt neg R hpt2 0 V stroke   } def /Box { stroke [] 0 setdash
2 copy exch hpt sub exch vpt add M   0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke   Pnt } def /Crs { stroke [] 0 setdash
exch hpt sub exch vpt add M   hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def /TriU { stroke [] 0 setdash
2 copy vpt 1.12 mul add M   hpt neg vpt -1.62 mul V   hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke   Pnt  } def /Star { 2 copy
Pls Crs } def /BoxF { stroke [] 0 setdash exch hpt sub exch vpt add
M   0 vpt2 neg V  hpt2 0 V  0 vpt2 V   hpt2 neg 0 V  closepath fill
} def /TriUF { stroke [] 0 setdash vpt 1.12 mul add M   hpt neg vpt
-1.62 mul V   hpt 2 mul 0 V   hpt neg vpt 1.62 mul V closepath fill
} def /TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M   hpt neg
vpt 1.62 mul V   hpt 2 mul 0 V   hpt neg vpt -1.62 mul V closepath
stroke   Pnt  } def /TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V   hpt 2 mul 0 V   hpt neg vpt -1.62 mul V
closepath fill} def /DiaF { stroke [] 0 setdash vpt add M   hpt neg
vpt neg V hpt vpt neg V   hpt vpt V hpt neg vpt V closepath fill }
def /Pent { stroke [] 0 setdash 2 copy gsave   translate 0 hpt M 4
{72 rotate 0 hpt L} repeat   closepath stroke grestore Pnt } def /PentF
{ stroke [] 0 setdash gsave   translate 0 hpt M 4 {72 rotate 0 hpt
L} repeat   closepath fill grestore } def /Circle { stroke [] 0 setdash
2 copy   hpt 0 360 arc stroke Pnt } def /CircleF { stroke [] 0 setdash
hpt 0 360 arc fill } def /C0 { BL [] 0 setdash 2 copy moveto vpt 90
450  arc } bind def /C1 { BL [] 0 setdash 2 copy        moveto    
   2 copy  vpt 0 90 arc closepath fill                vpt 0 360 arc
closepath } bind def /C2 { BL [] 0 setdash 2 copy moveto        2 copy
 vpt 90 180 arc closepath fill                vpt 0 360 arc closepath
} bind def /C3 { BL [] 0 setdash 2 copy moveto        2 copy  vpt 0
180 arc closepath fill                vpt 0 360 arc closepath } bind
def /C4 { BL [] 0 setdash 2 copy moveto        2 copy  vpt 180 270
arc closepath fill                vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto        2 copy  vpt 0 90 arc   
    2 copy moveto        2 copy  vpt 180 270 arc closepath fill   
            vpt 0 360 arc } bind def /C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill               vpt 0 360
arc closepath } bind def /C7 { BL [] 0 setdash 2 copy moveto      
2 copy  vpt 0 270 arc closepath fill               vpt 0 360 arc closepath
} bind def /C8 { BL [] 0 setdash 2 copy moveto       2 copy vpt 270
360 arc closepath fill               vpt 0 360 arc closepath } bind
def /C9 { BL [] 0 setdash 2 copy moveto       2 copy  vpt 270 450 arc
closepath fill               vpt 0 360 arc closepath } bind def /C10
{ BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto        2 copy vpt 90 180 arc closepath fill  
             vpt 0 360 arc closepath } bind def /C11 { BL [] 0 setdash
2 copy moveto        2 copy  vpt 0 180 arc closepath fill        2
copy moveto        2 copy  vpt 270 360 arc closepath fill         
      vpt 0 360 arc closepath } bind def /C12 { BL [] 0 setdash 2 copy
moveto        2 copy  vpt 180 360 arc closepath fill              
 vpt 0 360 arc closepath } bind def /C13 { BL [] 0 setdash  2 copy
moveto        2 copy  vpt 0 90 arc closepath fill        2 copy moveto
       2 copy  vpt 180 360 arc closepath fill                vpt 0
360 arc closepath } bind def /C14 { BL [] 0 setdash 2 copy moveto 
      2 copy  vpt 90 360 arc closepath fill                vpt 0 360
arc } bind def /C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath
fill                vpt 0 360 arc closepath } bind def /Rec   { newpath
4 2 roll moveto 1 index 0 rlineto 0 exch rlineto        neg 0 rlineto
closepath } bind def /Square { dup Rec } bind def /Bsquare { vpt sub
exch vpt sub exch vpt2 Square } bind def /S0 { BL [] 0 setdash 2 copy
moveto 0 vpt rlineto BL Bsquare } bind def /S1 { BL [] 0 setdash 2
copy vpt Square fill Bsquare } bind def /S2 { BL [] 0 setdash 2 copy
exch vpt sub exch vpt Square fill Bsquare } bind def /S3 { BL [] 0
setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill
Bsquare } bind def /S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec
fill Bsquare } bind def /S7 { BL [] 0 setdash 2 copy exch vpt sub exch
vpt sub vpt vpt2 Rec fill        2 copy vpt Square fill        Bsquare
} bind def /S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare
} bind def /S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare
} bind def /S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2
copy exch vpt sub exch vpt Square fill        Bsquare } bind def /S11
{ BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub
exch vpt2 vpt Rec fill        Bsquare } bind def /S12 { BL [] 0 setdash
2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec
fill        2 copy vpt Square fill Bsquare } bind def /S14 { BL []
0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill      
 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def /S15 {
BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def /D0 { gsave
translate 45 rotate 0 0 S0 stroke grestore } bind def /D1 { gsave translate
45 rotate 0 0 S1 stroke grestore } bind def /D2 { gsave translate 45
rotate 0 0 S2 stroke grestore } bind def /D3 { gsave translate 45 rotate
0 0 S3 stroke grestore } bind def /D4 { gsave translate 45 rotate 0
0 S4 stroke grestore } bind def /D5 { gsave translate 45 rotate 0 0
S5 stroke grestore } bind def /D6 { gsave translate 45 rotate 0 0 S6
stroke grestore } bind def /D7 { gsave translate 45 rotate 0 0 S7 stroke
grestore } bind def /D8 { gsave translate 45 rotate 0 0 S8 stroke grestore
} bind def /D9 { gsave translate 45 rotate 0 0 S9 stroke grestore }
bind def /D10 { gsave translate 45 rotate 0 0 S10 stroke grestore }
bind def /D11 { gsave translate 45 rotate 0 0 S11 stroke grestore }
bind def /D12 { gsave translate 45 rotate 0 0 S12 stroke grestore }
bind def /D13 { gsave translate 45 rotate 0 0 S13 stroke grestore }
bind def /D14 { gsave translate 45 rotate 0 0 S14 stroke grestore }
bind def /D15 { gsave translate 45 rotate 0 0 S15 stroke grestore }
bind def /DiaE { stroke [] 0 setdash vpt add M   hpt neg vpt neg V
hpt vpt neg V   hpt vpt V hpt neg vpt V closepath stroke } def /BoxE
{ stroke [] 0 setdash exch hpt sub exch vpt add M   0 vpt2 neg V hpt2
0 V 0 vpt2 V   hpt2 neg 0 V closepath stroke } def /TriUE { stroke
[] 0 setdash vpt 1.12 mul add M   hpt neg vpt -1.62 mul V   hpt 2 mul
0 V   hpt neg vpt 1.62 mul V closepath stroke } def /TriDE { stroke
[] 0 setdash vpt 1.12 mul sub M   hpt neg vpt 1.62 mul V   hpt 2 mul
0 V   hpt neg vpt -1.62 mul V closepath stroke } def /PentE { stroke
[] 0 setdash gsave   translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def /CircE { stroke [] 0 setdash   hpt
0 360 arc stroke } def /Opaque { gsave closepath 1 setgray fill grestore
0 setgray closepath } def /DiaW { stroke [] 0 setdash vpt add M   hpt
neg vpt neg V hpt vpt neg V   hpt vpt V hpt neg vpt V Opaque stroke
} def /BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M   0 vpt2
neg V hpt2 0 V 0 vpt2 V   hpt2 neg 0 V Opaque stroke } def /TriUW {
stroke [] 0 setdash vpt 1.12 mul add M   hpt neg vpt -1.62 mul V  
hpt 2 mul 0 V   hpt neg vpt 1.62 mul V Opaque stroke } def /TriDW {
stroke [] 0 setdash vpt 1.12 mul sub M   hpt neg vpt 1.62 mul V   hpt
2 mul 0 V   hpt neg vpt -1.62 mul V Opaque stroke } def /PentW { stroke
[] 0 setdash gsave   translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def /CircW { stroke [] 0 setdash   hpt 0
360 arc Opaque stroke } def /BoxFill { gsave Rec 1 setgray fill grestore
} def end
 
@fedspecial end TeXDict begin
39158280 55380996 1000 300 300 (read.dvi) @start
%DVIPSBitmapFont: Fa cmmi8 8 1
/Fa 1 67 df<07FFF800E00E00E00700E00300E00301C00301C00701C00701C00E03803C
03FFF003FFF003803C07001C07000E07000E07000E0E001C0E001C0E00380E00701C01E0
FFFF0018177F961B>66 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fb cmr12 12 22
/Fb 22 122 df<01F000071C000C06001803003803803803807001C07001C07001C07001
C0F001E0F001E0F001E0F001E0F001E0F001E0F001E0F001E0F001E0F001E0F001E0F001
E0F001E0F001E07001C07001C07001C07803C03803803803801C07000C0600071C0001F0
0013227EA018>48 D<008003800F80F38003800380038003800380038003800380038003
800380038003800380038003800380038003800380038003800380038003800380038007
C0FFFE0F217CA018>I<03F0000C1C001007002007804003C04003C08003E0F003E0F801
E0F801E0F801E02003E00003E00003C00003C0000780000700000E00001C000018000030
0000600000C0000180000100000200200400200800201800603000403FFFC07FFFC0FFFF
C013217EA018>I<03F8000C1E00100F002007804007C07807C07803C07807C03807C000
0780000780000700000F00000C0000380003F000001C00000F000007800007800003C000
03C00003E02003E07003E0F803E0F803E0F003C04003C0400780200780100F000C1C0003
F00013227EA018>I<000300000300000700000700000F00001700001700002700006700
004700008700018700010700020700060700040700080700080700100700200700200700
400700C00700FFFFF8000700000700000700000700000700000700000700000F80007FF0
15217FA018>I<1000801E07001FFF001FFE001FF80017E0001000001000001000001000
0010000010000011F800120C001C07001803801003800001C00001C00001E00001E00001
E00001E07001E0F001E0F001E0E001C08001C04003C04003802007001006000C1C0003F0
0013227EA018>I<007E0001C1000300800601C00C03C01C03C018018038000038000078
0000700000700000F0F800F30C00F40600F40300F80380F801C0F001C0F001E0F001E0F0
01E0F001E0F001E07001E07001E07001E03801C03801C01803801C03000C0600070C0001
F00013227EA018>I<01F800060E000803001001802001806000C06000C06000C07000C0
7000C07801803E01003F02001FC4000FF80003F80001FC00067E00083F00100F803007C0
6003C06000E0C000E0C00060C00060C00060C000606000406000C03000801803000E0E00
03F00013227EA018>56 D<FFFFFFFEFFFFFFFE0000000000000000000000000000000000
000000000000000000000000000000FFFFFFFEFFFFFFFE1F0C7D9126>61
D<FFFFFFC00F8007C0078001C0078000C007800040078000400780006007800020078000
200780002007802020078020000780200007802000078060000780E00007FFE0000780E0
000780600007802000078020000780200007802008078000080780000807800010078000
1007800010078000300780003007800070078000E00F8003E0FFFFFFE01D227EA121>69
D<1FE000303800780C00780E0030070000070000070000070000FF0007C7001E07003C07
00780700700700F00708F00708F00708F00F087817083C23900FC1E015157E9418>97
D<01FE000703000C07801C0780380300780000700000F00000F00000F00000F00000F000
00F00000F000007000007800403800401C00800C010007060001F80012157E9416>99
D<01FC000707000C03801C01C03801C07801E07000E0F000E0FFFFE0F00000F00000F000
00F00000F000007000007800203800201C00400E008007030000FC0013157F9416>101
D<00007003F1980E1E181C0E183807003807007807807807807807807807803807003807
001C0E001E1C0033F0002000002000003000003800003FFE001FFFC00FFFE03000F06000
30C00018C00018C00018C000186000306000303800E00E038003FE0015217F9518>103
D<1C003E003E003E001C00000000000000000000000000000000000E007E001E000E000E
000E000E000E000E000E000E000E000E000E000E000E000E000E000E000E00FFC00A227F
A10E>105 D<0E1F80FE60C01E80E00F00700F00700E00700E00700E00700E00700E0070
0E00700E00700E00700E00700E00700E00700E00700E00700E00700E0070FFE7FF18157F
941B>110 D<01FC000707000C01801800C03800E0700070700070F00078F00078F00078
F00078F00078F00078F000787000707800F03800E01C01C00E038007070001FC0015157F
9418>I<0E1F00FE61C00E80600F00700E00380E003C0E003C0E001E0E001E0E001E0E00
1E0E001E0E001E0E001E0E003C0E003C0E00380F00700E80E00E41C00E3F000E00000E00
000E00000E00000E00000E00000E00000E00000E0000FFE000171F7F941B>I<0E3CFE46
1E8F0F0F0F060F000E000E000E000E000E000E000E000E000E000E000E000E000E000F00
FFF010157F9413>114 D<02000200020002000600060006000E001E003E00FFFC0E000E
000E000E000E000E000E000E000E000E000E000E040E040E040E040E040E040708030801
F00E1F7F9E13>116 D<FF83FE1F00F00E00C007008007810003830001C20000E4000078
00007800003800003C00004E00008F000187000103800201C00401E00C00E03E01F0FF03
FE17157F941A>120 D<FF80FE1E00781E00300E00200E00200700400700400780C00380
8003808001C10001C10000E20000E20000E2000074000074000038000038000038000010
00001000002000002000002000004000F04000F08000F180004300003C0000171F7F941A
>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fc cmmi12 12 6
/Fc 6 108 df<000F80003FF00040F000406000C00000C00000C00000C0000060000060
00007000007000003800003800001C00003E0000CE00038F000607000C07001C07803807
80380380700380700380700380E00300E00700E00700E00600600E00600C00300C003018
001C300007C00014247EA316>14 D<70F8F8F87005057C840E>58
D<000080000180000180000300000300000300000600000600000600000C00000C00000C
0000180000180000180000300000300000300000600000600000600000C00000C00000C0
000180000180000180000180000300000300000300000600000600000600000C00000C00
000C0000180000180000180000300000300000300000600000600000600000C00000C000
00C0000011317DA418>61 D<00FFFFFF80000F000780000F000180000F000180001E0001
80001E000180001E000100001E000100003C000100003C000100003C010100003C010000
00780200000078020000007806000000780E000000FFFC000000F00C000000F00C000000
F00C000001E008000001E008000001E008020001E000040003C000040003C000040003C0
00080003C0001800078000100007800030000780006000078000E0000F8007E000FFFFFF
C00021227DA124>69 D<0003F810000E042000180260002001E0004000E000C000C00080
00C0018000C0018000C00380008003800080038000000380000003C0000001F0000001FE
000000FFE000007FF000001FF8000001FC0000003C0000001C0000000E0000000E000000
0E0020000C0020000C0020000C002000080060001800600010007000200070004000C800
8000C603000081FC00001C247DA21E>83 D<00F0000FE00000E00000E00000E00001C000
01C00001C00001C00003800003800003800003800007000007007807018407021C0E0C3C
0E103C0E20180E40001C80001F00001FE0001C3800381C00381C00380E00380E08701C10
701C10701C10700C20E006206003C016237EA219>107 D E
%EndDVIPSBitmapFont
end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 300dpi
TeXDict begin
%%PaperSize: a4

%%EndSetup
%%Page: 1 1
1 0 bop 223 1824 a @beginspecial @setspecial
 gnudict begin gsave 0 0 translate 0.100 0.100 scale 0 setgray newpath
1.000 UL LTb 350 300 M 63 0 V 3037 0 R -63 0 V 350 520 M 63 0 V 3037
0 R -63 0 V 350 740 M 63 0 V 3037 0 R -63 0 V 350 960 M 63 0 V 3037
0 R -63 0 V 350 1180 M 63 0 V 3037 0 R -63 0 V 350 1400 M 63 0 V 3037
0 R -63 0 V 350 1620 M 63 0 V 3037 0 R -63 0 V 350 1840 M 63 0 V 3037
0 R -63 0 V 350 2060 M 63 0 V 3037 0 R -63 0 V 350 300 M 0 63 V 0 1697
R 0 -63 V 660 300 M 0 63 V 0 1697 R 0 -63 V 970 300 M 0 63 V 0 1697
R 0 -63 V 1280 300 M 0 63 V 0 1697 R 0 -63 V 1590 300 M 0 63 V 0 1697
R 0 -63 V 1900 300 M 0 63 V 0 1697 R 0 -63 V 2210 300 M 0 63 V 0 1697
R 0 -63 V 2520 300 M 0 63 V 0 1697 R 0 -63 V 2830 300 M 0 63 V 0 1697
R 0 -63 V 3140 300 M 0 63 V 0 1697 R 0 -63 V 3450 300 M 0 63 V 0 1697
R 0 -63 V 1.000 UL LTb 350 300 M 3100 0 V 0 1760 V -3100 0 V 350 300
L 1.000 UP 1.000 UL LT0 350 300 Pls 1092 812 Pls 1095 864 Pls 1098
376 Pls 1709 864 Pls 1712 1191 Pls 1715 1238 Pls 1717 1119 Pls 1720
808 Pls 2200 807 Pls 2203 1215 Pls 2206 1377 Pls 2208 1458 Pls 2211
1458 Pls 2214 1396 Pls 2217 1243 Pls 2219 979 Pls 2222 667 Pls 2555
477 Pls 2558 719 Pls 2560 884 Pls 2563 1036 Pls 2566 1165 Pls 2568
1275 Pls 2571 1352 Pls 2574 1479 Pls 2577 1557 Pls 2580 1559 Pls 2582
1562 Pls 2585 1565 Pls 2588 1550 Pls 2591 1481 Pls 2593 1339 Pls 2596
1219 Pls 2599 1063 Pls 2601 893 Pls 2604 730 Pls 2607 553 Pls 2792
940 Pls 2795 1142 Pls 2798 1265 Pls 2801 1329 Pls 2803 1401 Pls 2806
1453 Pls 2809 1437 Pls 2811 1466 Pls 2815 1442 Pls 2817 1459 Pls 2819
1480 Pls 2823 1446 Pls 2825 1479 Pls 2828 1497 Pls 2831 1509 Pls 2833
1534 Pls 2836 1594 Pls 2839 1663 Pls 2842 1600 Pls 2844 1534 Pls 2847
1480 Pls 2850 1431 Pls 2852 1378 Pls 2855 1319 Pls 2858 1250 Pls 2860
1200 Pls 2863 1114 Pls 2866 1059 Pls 2869 992 Pls 2872 861 Pls 2874
782 Pls 2877 730 Pls 2880 529 Pls 2883 376 Pls 2961 1437 Pls 2965 1567
Pls 2967 1555 Pls 2970 1533 Pls 2973 1509 Pls 2975 1495 Pls 2978 1456
Pls 2981 1458 Pls 2983 1441 Pls 2986 1425 Pls 2989 1441 Pls 2992 1418
Pls 2994 1413 Pls 2997 1409 Pls 3000 1379 Pls 3002 1343 Pls 3005 1345
Pls 3008 1314 Pls 3010 1276 Pls 3014 1286 Pls 3016 1257 Pls 3019 1207
Pls 3022 1208 Pls 3024 1186 Pls 3027 1144 Pls 3030 1143 Pls 3033 1088
Pls 3035 1025 Pls 3038 1073 Pls 3041 949 Pls 3043 955 Pls 3046 940
Pls 3049 882 Pls 3051 874 Pls 3054 792 Pls 3057 726 Pls 3060 711 Pls
3063 681 Pls 3065 630 Pls 3068 300 Pls 3071 529 Pls 3074 452 Pls 3076
300 Pls 3218 1947 Pls stroke grestore end showpage
 
@endspecial
1337 1030 a Fc(\016)16 b Fb(=)e(0)p Fc(:)p Fb(1)799 1828
y(Excitation)i(energy)f Fc(E)265 1332 y
 gsave currentpoint currentpoint translate 270 rotate neg exch neg
exch translate
 265 1332 a -150
w Fb(En)o(trop)o(y)h Fc(S=k)383 1339 y Fa(B)265 1332
y
 currentpoint grestore moveto
 265 1332 a 1637 1757 a Fb(50)-178 b(45)h(40)g(35)g(30)g(25)g(20)f(15)
h(10)-165 b(5)-153 b(0)300 982 y(16)300 1073 y(14)300
1165 y(12)300 1257 y(10)324 1348 y(8)324 1440 y(6)324
1532 y(4)324 1623 y(2)324 1715 y(0)p eop
%%Trailer
end
userdict /end-hook known{end-hook}if
%%EOF
