      PROGRAM TRIMOD
C  ====================================
C     (OUTPUT,TAPE6=OUTPUT)
C
C   PARAMETERS:
C   NQ = NUMBER OF Q POINTS IN THE INTERVAL[0,QMAX] WITH
C        Q0 BEEING THE MIDDLE
C   NP1 = NUMBER OF P POINTS IN THE INTERVAL [0,PMAX] WITH
C         P0 BEEING THE MIDDLE
C   NP2 = NUMBER OF P POINTS IN THE INTERVAL [PMAX,PCUT] WITH
C         PM BEEING THE MIDDLE
C   NPTOT = TOTAL NUMBER OF P POINTS AS NEEDED FOR THE SOLUTION
C           OF THE LIPPMANN SCHWINGER EQUATION IN TMAT
C   NP  = NUMBER OF P POINTS FOR THE SPLINE INTERPOLATION
C   NX  = NUMBER OF X POINTS IN THE INTERVAL [-1.,1.]
C   M   = NUCLEON MASS IN MEV
C   MF  = NUCLEON MASS IN FM-1
C   E0  = STARTING ENERGY IN MEV
C   DE  = ENERGY STEP IN MEV
C   IPF,IQF  INDICES FOR ARBITRARILY CHOSEN P AND Q POINTS FOR THE
C            VECTOR ITERATION PROCEDURE
C
C
C   PRINCIPAL GLOBAL VARIABLES
C
C   Q   ARRAY OF Q POINTS
C   P   ARRAY OF P POINTS
C   S1,S2   SPLINE ELEMENTS
C   PSI0  STARTING VECTOR AT EACH ENERGY
C   X1,X2  VECTORS,X2 RESULTS FROM APPLICATION OF THE FADDEEV KERNEL
C                  TO X1
C   ROLD,RNEW   RATIOS OF X2 AND X1
C   E    ENERGY VALUES DURING THE ENERGY SEARCH
C   ETA  EIGENVALUE OF THE FADDEEV KERNEL
C   T    THE TWO-BODY OFF-SHELL T-MATRIX
C   RATMAX,RATMIN   THE MAXIMAL AND MINIMUM RATIOS OF X2 AND X1
C                   WITH RESPECT TO P AND Q VARIATIONS
C
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      REAL M,MF
C
      PARAMETER(NQ=10,Q0=1.,QMAX=4.)
C
C     PARAMETER(NP1=18,P0=1.,PMAX=1.5*QMAX+0.3,
C    1          NP2=20,PM=10.,PCUT=50.,
      PARAMETER(NP1=16,P0=1.,PMAX=1.5*QMAX+0.3,
     1          NP2=18,PM=10.,PCUT=50.,
     2          NPTOT=1+NP1+NP2,NP=NP1+1)
C
      PARAMETER(NX=10)
C
      PARAMETER(M=938.903,HBARC=197.3289,MF=M/HBARC)
C
      PARAMETER(E0=-7.4,DE=-0.1)
C
      PARAMETER(IPF=8,IQF=5)
C
      common/qpoint/Q(NQ),Q2(NQ),WQ(NQ)
C
      common/ppoint/P(NPTOT),P2(NPTOT),WP(NPTOT)
C
      COMMON/SPLIN/WX(NX),X(NX),S1(NX,NP,NQ,NQ),S2(NX,NP,NQ,NQ)
C
      COMMON/TM/TH(NPTOT,NPTOT)
C
      DIMENSION PSI0(NP,NQ),X1(NP,NQ),X2(NP,NQ),ROLD(NP,NQ),RNEW(NP,NQ)
C
      DIMENSION E(10),ETA(10),EIG(10)
C
      DIMENSION H(NP),T(NPTOT,NPTOT,NQ)
C
C
C
      WRITE(6,600)NP1,NP2,NPTOT
      WRITE(6,610)NQ,QMAX,NX
      WRITE(6,620)P0,PMAX,PM,PCUT
  600 FORMAT(/5X,' NP1 =',I3,5X,' NP2 =',I3,5X,' NPTOT =',I3/)
  610 FORMAT(/5X,' NQ =',I3,5X,' QMAX =',E9.3,5X,' NX =',I3/)
  620 FORMAT(/5X,' P0 =',E9.3,5X,' PMAX =',E9.3,5X,' PM =',
     1E9.3,5X,' PCUT =',E9.3/)
C
C
C    GAUSSIAN QUADRATURE POINTS IN Q AND P ARE GENERATED:
C
      CALL GAUSS(0.d0,Q0,QMAX,NQ,Q,Q2,WQ)
      CALL GAUSS(0.d0,P0,PMAX,NP1,P(2),P2(2),WP(2))
      CALL GAUSS(PMAX,PM,PCUT,NP2,P(NP1+2),P2(NP1+2),WP(NP1+2))
      P(1)=0.
      P2(1)=0.
      WP(1)=0.
C
C
C    THE SPLINE ELEMENTS ARE GENERATED:
C
      CALL SPLINE
C
C
C    THE POTENTIAL IN MOMENTUM SPACE IS GENERATED:
C
      CALL POT
C
C
C   THE STARTING ENERGY AND THE STARTING VECTOR ARE GIVEN:
C
      E(1)=(E0/HBARC)*MF
      DO2 IQ=1,NQ
      DO2 IP=1,NP
    2 PSI0(IP,IQ)=1.
C
      IE=0
C
   17 IE=IE+1
      IF(IE.GT.10)STOP
C
      EMEV=E(IE)*HBARC/MF
      WRITE(6,500)EMEV
  500 FORMAT(/'     EMEV =',E12.5/)
C
C   THE TWO-BODY OFF-SHELL T-MATRIX FOR ALL Q-VALUES
C   IS GENERATED:
C
      DO 25 IQ=1,NQ
      E2=E(IE)-0.75*Q2(IQ)
      CALL TMAT(E2)
      DO 26 IP=1,NPTOT
      DO 26 IPP=1,NPTOT
   26 T(IP,IPP,IQ)=TH(IP,IPP)
   25 CONTINUE
C
C    INITIALISATION FOR THE VECTOR ITERATION:
C
      ITER=0
      DO3 IQ=1,NQ
      DO3 IP=1,NP
      X1(IP,IQ)=PSI0(IP,IQ)
    3 ROLD(IP,IQ)=1.
C
   18 ITER=ITER+1
C
      DO4 IQ=1,NQ
      DO5 IP1=1,NP
      SHH=0.
      DO6 IQP=1,NQ
      SH=0.
      DO 7 IP2=1,NP
      S=0.
      DO 8 IX=1,NX
    8 S=S+WX(IX)*S1(IX,IP1,IQP,IQ)*S2(IX,IP2,IQP,IQ)
    7 SH=SH+S*X1(IP2,IQP)
    6 SHH=SHH+SH*WQ(IQP)
    5 H(IP1)=SHH
      DO 9 IP=1,NP
      SHHH=0.
      DO 10 IP1=1,NP
   10 SHHH=SHHH+T(IP,IP1,IQ)*H(IP1)
    9 X2(IP,IQ)=SHHH/(E(IE)-0.75*Q2(IQ)-P2(IP))
    4 CONTINUE
C
C   THE NEW VECTOR X2 HAS BEEN FOUND AFTER APPLICATION OF THE
C   FADDEEV KERNEL TO THE OLD VECTOR X1
C
      DO 11 IP=1,NP
      DO 11 IQ=1,NQ
   11 RNEW(IP,IQ)=X2(IP,IQ)/X1(IP,IQ)
      RATMAX=0.5
      RATMIN=2.
      DO 12 IP=1,NP
      DO 12 IQ=1,NQ
      IF(RNEW(IP,IQ).GT.RATMAX)RATMAX=RNEW(IP,IQ)
      IF(RNEW(IP,IQ).LT.RATMIN)RATMIN=RNEW(IP,IQ)
   12 CONTINUE
      IF(ITER.GT.1)WRITE(6,100)ITER,RATMIN,RNEW(IPF,IQF),RATMAX
  100 FORMAT(I10,3E15.6)
      DF=(RNEW(IPF,IQF)-ROLD(IPF,IQF))/ROLD(IPF,IQF)
C
C   DF IS TAKEN AS A MEASURE FOR THE CONVERGENCE OF THE
C   VECTOR ITERATION AT EACH ENERGY
C
      IF(ABS(DF).LT.1.E-7)GOTO13
      DO 14 IP=1,NP
      DO 14 IQ=1,NQ
      X1(IP,IQ)=X2(IP,IQ)
   14 ROLD(IP,IQ)=RNEW(IP,IQ)
      GOTO18
C
   13 ETA(IE)=RNEW(IPF,IQF)
C
C    ETA IS THE APPROXIMATE EIGENVALUE OF THE FADDEEV KERNEL
C
      WRITE(6,200) IE,E(IE),ETA(IE)
  200 FORMAT(/5X,' IE =',I3,5X,' E(IE) =',E12.5,5X,' ETA(IE) =',E12.5/)
C
C    EIG(IE) VANISHES AT THE BINDING ENERGY
C
      EIG(IE)=ETA(IE)-1.
      WRITE(6,300)EIG(IE)
  300 FORMAT(/10X,'  EIG(IE)  =',E12.5/)
      IF(ABS(EIG(IE)).LT.1.E-6)GOTO15
C
C    ENERGY SEARCH PART:
C

      DO 16 IP=1,NP
      DO 16 IQ=1,NQ
   16 PSI0(IP,IQ)=X2(IP,IQ)
      IF(IE.EQ.1)THEN
      E(IE+1)=E(IE)+(DE/HBARC)*MF
      GOTO17
      ELSE
      CALL SEARCH(EIG(IE-1),EIG(IE),E(IE-1),E(IE),E(IE+1))
      GOTO17
      END IF
C
   15 CONTINUE
      WRITE(6,700) EMEV
  700 FORMAT(//10X,'  3-BODY BINDING ENERGY =',E12.5)
      END
      SUBROUTINE GAUSS(A,B,C,N,X,X2,WX)
C   ==================================
C    THIS SUBROUTINE DETERMINES GAUSSIAN QUADRATURE POINTS
C    FOR THE INTERVAL [A,C] WHERE HALF OF THE POINTS LIE
C    TO THE LEFT AND RIGHT OF B,RESPECTIVELY
C     THE SUBROUTINE D01BCF FROM THE NAG LIBRARY DETERMINES
C     THE N GAUSS-POINTS GP AND THE WEIGHTS GW IN THE
C     INTERVAL  [-1.,1.]
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)

      DIMENSION X(N),X2(N),WX(N),GW(50),GP(50)
C
      IF(N.GT.50)STOP
      IF=0

      CALL D01BCF(0,-1.d0,1.d0,0.d0,0.d0,N,GW,GP,IF)
      B1=2.*A*C-A*B-B*C
      B2=2.*A*(B-C)
      B3=A-2.*B+C
      B4=A-C
      B5=B-C
      B6=B-A
      DO1 I=1,N
      CN=B3*GP(I)+B4
      X(I)=(B1*(1.+GP(I))+B2)/CN
      X2(I)=X(I)*X(I)
    1 WX(I)=X2(I)*2.*B5*B4*B6*GW(I)/CN**2
      RETURN
      END
      SUBROUTINE SPLINE
C    ===================
C
C    THIS SUBROUTINE DETERMINES THE SPLINE ELEMENTS
C
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      PARAMETER(NP1=16,NP2=18,NPTOT=1+NP1+NP2,NP=NP1+1,NQ=10,NX=10)
C
      DIMENSION SPL1(NP),SPL2(NP)
C
      common/qpoint/Q(NQ),Q2(NQ),WQ(NQ)
C
      common/ppoint/P(NPTOT),P2(NPTOT),WP(NPTOT)
C
      COMMON/SPLIN/WX(NX),X(NX),S1(NX,NP,NQ,NQ),S2(NX,NP,NQ,NQ)
C
C

      CALL SPREP(P,NP)
      IF=0
      CALL D01BCF(0,-1.d0,1.d0,0.d0,0.d0,NX,WX,X,IF)


      DO 1 IQ=1,NQ
      DO 1 IQP=1,NQ
      C1=0.25*Q2(IQ)+Q2(IQP)
      C2=Q2(IQ)+0.25*Q2(IQP)
      C3=Q(IQ)*Q(IQP)
      DO 1 IX=1,NX
      C4=C3*X(IX)
      PI1=SQRT(C1+C4)
      PI2=SQRT(C2+C4)
      CALL SELEM(P,NP,PI1,SPL1)
      CALL SELEM(P,NP,PI2,SPL2)
      DO 2 IP=1,NP
      S1(IX,IP,IQP,IQ)=SPL1(IP)
    2 S2(IX,IP,IQP,IQ)=SPL2(IP)
    1 CONTINUE
      END
      SUBROUTINE TMAT(E)
C     ===================
C
C    THIS SUBROUTINE DETERMINES THE OFF-SHELL TWO-BODY T-MATRIX
C    AT THE ENERGY E
C      THE SUBROUTINE F04AEF FROM THE NAG LIBRARY SOLVES THE
C      ALGEBRAIC SYSTEM  AKERN * T = V
C
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      PARAMETER(NP1=16,NP2=18,NPTOT=1+NP1+NP2)
C
      DIMENSION AKERN(NPTOT,NPTOT),WKSPCE(NPTOT),
     2AA(NPTOT,NPTOT),BB(NPTOT,NPTOT)
C
      common/ppoint/P(NPTOT),P2(NPTOT),WP(NPTOT)
C
      COMMON/TM/T(NPTOT,NPTOT)
C
      COMMON/VPOT/V(NPTOT,NPTOT)
C
      DO 3 I=1,NPTOT
      DO 3 IP=1,NPTOT
      AKERN(I,IP)=-V(I,IP)*WP(IP)/(E-P2(IP))
      IF(I.EQ.IP)AKERN(I,I)=AKERN(I,I)+1.
    3 CONTINUE
      IFAIL=1
      CALL F04AEF(AKERN,NPTOT,V,NPTOT,NPTOT,NPTOT,T,NPTOT,
     1WKSPCE,AA,NPTOT,BB,NPTOT,IFAIL)
      if (ifail.ne.2) stop
      RETURN
      END
       SUBROUTINE POT
C  ===================
C
C    THIS SUBROUTINE DETERMINES A MALFLIET-TJION POTENTIAL
C    IN MOMENTUM SPACE
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      REAL M,MF
C
      PARAMETER(HBARC=197.3289,M=938.903,MF=M/HBARC)
C
      PARAMETER(NP1=16,NP2=18,NPTOT=1+NP1+NP2)
C
      common/ppoint/P(NPTOT),P2(NPTOT),WP(NPTOT)
C
      COMMON/VPOT/V(NPTOT,NPTOT)
C
      DIMENSION V0(2),A(2),V0M(2)
C
      DATA V0/-570.316,1438.4812/,A/1.55,3.11/
C
      PI=3.1415926
      DO 2 I=1,2
    2 V0M(I)=(V0(I)/HBARC)*MF
C
      DO 4 IP=1,NPTOT
      DO 4 IPP=1,IP
      X1=P(IP)
      X2=P(IPP)
      VV=0.
      DO 1 I=1,2
      IF(X1*X2.EQ.0.)THEN
      QV=2./(X1**2+X2**2+A(I)**2)
      ELSE
      Z=(A(I)**2+X1**2+X2**2)/(2.*X1*X2)
      IF(Z.LT.1.E2)THEN
      QV=(ALOG(Z+1.)-ALOG(Z-1.))/(2.*X1*X2)
      ELSE
      X=1./Z
      QV=(X+X**3/3.+X**5/5.+X**7/7.)*2./(2.*X1*X2)
      END IF
      END IF
      VV=VV+QV*V0M(I)/PI
    1 CONTINUE
      V(IP,IPP)=VV
    4 V(IPP,IP)=V(IP,IPP)
      RETURN
      END
      SUBROUTINE SEARCH(F1,F2,E1,E2,E3)
C   ================================
C
C    THIS SUBROUTINE IS A SIMPLE SEARCH ROUTINE FOR A ZERO OF A
C    FUNCTION
C
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      REAL M,MF
C
      PARAMETER(DE=-0.1,HBARC=197.3289,M=938.903,MF=M/HBARC)
C
      DATA IV/0/
C
      IF(IV.EQ.1)GOTO1
      V1=SIGN(1.,F1)
      V2=SIGN(1.,F2)
      IF(V1.NE.V2)GOTO1
      E3=E2+(DE/HBARC)*MF
      RETURN
    1 E3=E2-F2*(E2-E1)/(F2-F1)
      IV=1
      RETURN
      END
      SUBROUTINE SPREP (X,N)
C   =======================
C    THIS SUBROUTINE PREPARES COEFFICIENTS FOR THE SPLINE ELEMENTS
C
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      DIMENSION X(N),HI(40),U(40)
C
      COMMON /FAKTOR/ FAK1(40,40),FAK2(40,40),FAK3(40,40)
     1,Q(40,40),C(40,40)
C
      IF(N.GT.40)STOP
      U(1)=0.
      HI(2)=X(2)-X(1)
      DO 5 I=1,N
    5  Q(1,I)=0.
      DO 10 I=2,N-1
       AX=X(I+1)-X(I)
       HI(I+1)=AX
       BX=X(I+1)-X(I-1)
       CX=X(I)-X(I-1)
       AL=AX/BX
       AM=1.-AL
       PI=1./(2.-AM*U(I-1))
       U(I)=AL*PI
       DO 15 J=1,N
   15   Q(I,J)=-PI*AM*Q(I-1,J)
       Q(I,I-1)=Q(I,I-1)+PI/(CX*BX)
       Q(I,I)=Q(I,I)-PI/(CX*AX)
   10  Q(I,I+1)=Q(I,I+1)+PI/(AX*BX)
      DO 20 J=1,N
       C(N,J)=0.
       FAK1(N,J)=0.
       FAK2(N,J)=0.
   20  FAK3(N,J)=0.
      DO 25 I=N-1,1,-1
       H1=1./HI(I+1)
       DO 30 J=1,N
        C(I,J)=Q(I,J)-C(I+1,J)*U(I)
   30   FAK1(I,J)=-HI(I+1)*(2.*C(I,J)+C(I+1,J))
       FAK1(I,I)=FAK1(I,I)-H1
       FAK1(I,I+1)=FAK1(I,I+1)+H1
       DO 25 J=1,N
        FAK2(I,J)=3*C(I,J)
   25   FAK3(I,J)=(C(I+1,J)-C(I,J))*H1
      END
      SUBROUTINE SELEM(X,N,XA,SPL)
C   ==============================
C
C     THIS SUBROUTINE DETERMINES THE SPLINE ELEMENTS SPL
C
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      DIMENSION X(N),SPL(N)
C
      COMMON /FAKTOR/ FAK1(40,40),FAK2(40,40),FAK3(40,40)
     1,QDUM(40,40),CDUM(40,40)
C
      IF (XA .LT.X(1).OR. XA.GT.X(N))STOP
      I=-1
   10  I=I+1
       IF (XA .GE. X(I+1) .AND. I .LT. N) GOTO 10
      IF (I .EQ. 0) I=1
      DX=XA-X(I)
      DO 20 J=1,N
   20  SPL(J)=((FAK3(I,J)*DX+FAK2(I,J))*DX+FAK1(I,J))*DX
      SPL(I)=SPL(I)+1.
      END
