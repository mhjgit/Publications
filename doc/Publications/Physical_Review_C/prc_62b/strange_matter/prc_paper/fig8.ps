%!PS-Adobe-2.0
%%Creator: dvips(k) 5.78 Copyright 1998 Radical Eye Software (www.radicaleye.com)
%%Title: read.dvi
%%Pages: 1
%%PageOrder: Ascend
%%BoundingBox: 0 0 596 842
%%EndComments
%DVIPSCommandLine: /local/TEX/bin.linux/dvips -o fig7.ps read.dvi
%DVIPSParameters: dpi=300
%DVIPSSource:  TeX output 2000.03.30:1250
%%BeginProcSet: tex.pro
%!
/TeXDict 300 dict def TeXDict begin /N{def}def /B{bind def}N /S{exch}N
/X{S N}B /TR{translate}N /isls false N /vsize 11 72 mul N /hsize 8.5 72
mul N /landplus90{false}def /@rigin{isls{[0 landplus90{1 -1}{-1 1}
ifelse 0 0 0]concat}if 72 Resolution div 72 VResolution div neg scale
isls{landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div
hsize mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul
TR[matrix currentmatrix{dup dup round sub abs 0.00001 lt{round}if}
forall round exch round exch]setmatrix}N /@landscape{/isls true N}B
/@manualfeed{statusdict /manualfeed true put}B /@copies{/#copies X}B
/FMat[1 0 0 -1 0 0]N /FBB[0 0 0 0]N /nn 0 N /IE 0 N /ctr 0 N /df-tail{
/nn 8 dict N nn begin /FontType 3 N /FontMatrix fntrx N /FontBBox FBB N
string /base X array /BitMaps X /BuildChar{CharBuilder}N /Encoding IE N
end dup{/foo setfont}2 array copy cvx N load 0 nn put /ctr 0 N[}B /df{
/sf 1 N /fntrx FMat N df-tail}B /dfs{div /sf X /fntrx[sf 0 0 sf neg 0 0]
N df-tail}B /E{pop nn dup definefont setfont}B /ch-width{ch-data dup
length 5 sub get}B /ch-height{ch-data dup length 4 sub get}B /ch-xoff{
128 ch-data dup length 3 sub get sub}B /ch-yoff{ch-data dup length 2 sub
get 127 sub}B /ch-dx{ch-data dup length 1 sub get}B /ch-image{ch-data
dup type /stringtype ne{ctr get /ctr ctr 1 add N}if}B /id 0 N /rw 0 N
/rc 0 N /gp 0 N /cp 0 N /G 0 N /sf 0 N /CharBuilder{save 3 1 roll S dup
/base get 2 index get S /BitMaps get S get /ch-data X pop /ctr 0 N ch-dx
0 ch-xoff ch-yoff ch-height sub ch-xoff ch-width add ch-yoff
setcachedevice ch-width ch-height true[1 0 0 -1 -.1 ch-xoff sub ch-yoff
.1 sub]{ch-image}imagemask restore}B /D{/cc X dup type /stringtype ne{]}
if nn /base get cc ctr put nn /BitMaps get S ctr S sf 1 ne{dup dup
length 1 sub dup 2 index S get sf div put}if put /ctr ctr 1 add N}B /I{
cc 1 add D}B /bop{userdict /bop-hook known{bop-hook}if /SI save N @rigin
0 0 moveto /V matrix currentmatrix dup 1 get dup mul exch 0 get dup mul
add .99 lt{/QV}{/RV}ifelse load def pop pop}N /eop{SI restore userdict
/eop-hook known{eop-hook}if showpage}N /@start{userdict /start-hook
known{start-hook}if pop /VResolution X /Resolution X 1000 div /DVImag X
/IE 256 array N 2 string 0 1 255{IE S dup 360 add 36 4 index cvrs cvn
put}for pop 65781.76 div /vsize X 65781.76 div /hsize X}N /p{show}N
/RMat[1 0 0 -1 0 0]N /BDot 260 string N /rulex 0 N /ruley 0 N /v{/ruley
X /rulex X V}B /V{}B /RV statusdict begin /product where{pop false[
(Display)(NeXT)(LaserWriter 16/600)]{dup length product length le{dup
length product exch 0 exch getinterval eq{pop true exit}if}{pop}ifelse}
forall}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale rulex ruley false
RMat{BDot}imagemask grestore}}{{gsave TR -.1 .1 TR rulex ruley scale 1 1
false RMat{BDot}imagemask grestore}}ifelse B /QV{gsave newpath transform
round exch round exch itransform moveto rulex 0 rlineto 0 ruley neg
rlineto rulex neg 0 rlineto fill grestore}B /a{moveto}B /delta 0 N /tail
{dup /delta X 0 rmoveto}B /M{S p delta add tail}B /b{S p tail}B /c{-4 M}
B /d{-3 M}B /e{-2 M}B /f{-1 M}B /g{0 M}B /h{1 M}B /i{2 M}B /j{3 M}B /k{
4 M}B /w{0 rmoveto}B /l{p -4 w}B /m{p -3 w}B /n{p -2 w}B /o{p -1 w}B /q{
p 1 w}B /r{p 2 w}B /s{p 3 w}B /t{p 4 w}B /x{0 S rmoveto}B /y{3 2 roll p
a}B /bos{/SS save N}B /eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: special.pro
%!
TeXDict begin /SDict 200 dict N SDict begin /@SpecialDefaults{/hs 612 N
/vs 792 N /ho 0 N /vo 0 N /hsc 1 N /vsc 1 N /ang 0 N /CLIP 0 N /rwiSeen
false N /rhiSeen false N /letter{}N /note{}N /a4{}N /legal{}N}B
/@scaleunit 100 N /@hscale{@scaleunit div /hsc X}B /@vscale{@scaleunit
div /vsc X}B /@hsize{/hs X /CLIP 1 N}B /@vsize{/vs X /CLIP 1 N}B /@clip{
/CLIP 2 N}B /@hoffset{/ho X}B /@voffset{/vo X}B /@angle{/ang X}B /@rwi{
10 div /rwi X /rwiSeen true N}B /@rhi{10 div /rhi X /rhiSeen true N}B
/@llx{/llx X}B /@lly{/lly X}B /@urx{/urx X}B /@ury{/ury X}B /magscale
true def end /@MacSetUp{userdict /md known{userdict /md get type
/dicttype eq{userdict begin md length 10 add md maxlength ge{/md md dup
length 20 add dict copy def}if end md begin /letter{}N /note{}N /legal{}
N /od{txpose 1 0 mtx defaultmatrix dtransform S atan/pa X newpath
clippath mark{transform{itransform moveto}}{transform{itransform lineto}
}{6 -2 roll transform 6 -2 roll transform 6 -2 roll transform{
itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll curveto}}{{
closepath}}pathforall newpath counttomark array astore /gc xdf pop ct 39
0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}if}N
/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1 -1
scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3 get
ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip yflip
not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub neg 0
TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{noflips{TR
pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop 90 rotate 1
-1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg
TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr 1 get neg
sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr 2 get ppr
0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4 -1 roll add
2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S TR}if}N /cp
{pop pop showpage pm restore}N end}if}if}N /normalscale{Resolution 72
div VResolution 72 div neg scale magscale{DVImag dup scale}if 0 setgray}
N /psfts{S 65781.76 div N}N /startTexFig{/psf$SavedState save N userdict
maxlength dict begin /magscale true def normalscale currentpoint TR
/psf$ury psfts /psf$urx psfts /psf$lly psfts /psf$llx psfts /psf$y psfts
/psf$x psfts currentpoint /psf$cy X /psf$cx X /psf$sx psf$x psf$urx
psf$llx sub div N /psf$sy psf$y psf$ury psf$lly sub div N psf$sx psf$sy
scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub TR
/showpage{}N /erasepage{}N /copypage{}N /p 3 def @MacSetUp}N /doclip{
psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll newpath 4 copy 4 2
roll moveto 6 -1 roll S lineto S lineto S lineto closepath clip newpath
moveto}N /endTexFig{end psf$SavedState restore}N /@beginspecial{SDict
begin /SpecialSave save N gsave normalscale currentpoint TR
@SpecialDefaults count /ocount X /dcount countdictstack N}N /@setspecial
{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto
closepath clip}if ho vo TR hsc vsc scale ang rotate rwiSeen{rwi urx llx
sub div rhiSeen{rhi ury lly sub div}{dup}ifelse scale llx neg lly neg TR
}{rhiSeen{rhi ury lly sub div dup scale llx neg lly neg TR}if}ifelse
CLIP 2 eq{newpath llx lly moveto urx lly lineto urx ury lineto llx ury
lineto closepath clip}if /showpage{}N /erasepage{}N /copypage{}N newpath
}N /@endspecial{count ocount sub{pop}repeat countdictstack dcount sub{
end}repeat grestore SpecialSave restore end}N /@defspecial{SDict begin}
N /@fedspecial{end}B /li{lineto}B /rl{rlineto}B /rc{rcurveto}B /np{
/SaveX currentpoint /SaveY X N 1 setlinecap newpath}N /st{stroke SaveX
SaveY moveto}N /fil{fill SaveX SaveY moveto}N /ellipse{/endangle X
/startangle X /yrad X /xrad X /savematrix matrix currentmatrix N TR xrad
yrad scale 0 0 1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
TeXDict begin @defspecial

 /gnudict 256 dict def gnudict begin /Color false def /Solid false
def /gnulinewidth 5.000 def /userlinewidth gnulinewidth def /vshift
-33 def /dl {10 mul} def /hpt_ 31.5 def /vpt_ 31.5 def /hpt hpt_ def
/vpt vpt_ def /M {moveto} bind def /L {lineto} bind def /R {rmoveto}
bind def /V {rlineto} bind def /vpt2 vpt 2 mul def /hpt2 hpt 2 mul
def /Lshow { currentpoint stroke M   0 vshift R show } def /Rshow {
currentpoint stroke M   dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M   dup stringwidth pop -2 div vshift
R show } def /UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def /DL { Color {setrgbcolor
Solid {pop []} if 0 setdash }  {pop pop pop Solid {pop []} if 0 setdash}
ifelse } def /BL { stroke userlinewidth 2 mul setlinewidth } def /AL
{ stroke userlinewidth 2 div setlinewidth } def /UL { dup gnulinewidth
mul /userlinewidth exch def       10 mul /udl exch def } def /PL {
stroke userlinewidth setlinewidth } def /LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def /LT0
{ PL [] 1 0 0 DL } def /LT1 { PL [4 dl 2 dl] 0 1 0 DL } def /LT2 {
PL [2 dl 3 dl] 0 0 1 DL } def /LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def /LT5 { PL [4 dl 3 dl
1 dl 3 dl] 1 1 0 DL } def /LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL
} def /LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def /LT8
{ PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash    gsave 1 setlinecap M 0 0 V stroke grestore
} def /Dia { stroke [] 0 setdash 2 copy vpt add M   hpt neg vpt neg
V hpt vpt neg V   hpt vpt V hpt neg vpt V closepath stroke   Pnt }
def /Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V   currentpoint stroke
M   hpt neg vpt neg R hpt2 0 V stroke   } def /Box { stroke [] 0 setdash
2 copy exch hpt sub exch vpt add M   0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke   Pnt } def /Crs { stroke [] 0 setdash
exch hpt sub exch vpt add M   hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def /TriU { stroke [] 0 setdash
2 copy vpt 1.12 mul add M   hpt neg vpt -1.62 mul V   hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke   Pnt  } def /Star { 2 copy
Pls Crs } def /BoxF { stroke [] 0 setdash exch hpt sub exch vpt add
M   0 vpt2 neg V  hpt2 0 V  0 vpt2 V   hpt2 neg 0 V  closepath fill
} def /TriUF { stroke [] 0 setdash vpt 1.12 mul add M   hpt neg vpt
-1.62 mul V   hpt 2 mul 0 V   hpt neg vpt 1.62 mul V closepath fill
} def /TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M   hpt neg
vpt 1.62 mul V   hpt 2 mul 0 V   hpt neg vpt -1.62 mul V closepath
stroke   Pnt  } def /TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V   hpt 2 mul 0 V   hpt neg vpt -1.62 mul V
closepath fill} def /DiaF { stroke [] 0 setdash vpt add M   hpt neg
vpt neg V hpt vpt neg V   hpt vpt V hpt neg vpt V closepath fill }
def /Pent { stroke [] 0 setdash 2 copy gsave   translate 0 hpt M 4
{72 rotate 0 hpt L} repeat   closepath stroke grestore Pnt } def /PentF
{ stroke [] 0 setdash gsave   translate 0 hpt M 4 {72 rotate 0 hpt
L} repeat   closepath fill grestore } def /Circle { stroke [] 0 setdash
2 copy   hpt 0 360 arc stroke Pnt } def /CircleF { stroke [] 0 setdash
hpt 0 360 arc fill } def /C0 { BL [] 0 setdash 2 copy moveto vpt 90
450  arc } bind def /C1 { BL [] 0 setdash 2 copy        moveto    
   2 copy  vpt 0 90 arc closepath fill                vpt 0 360 arc
closepath } bind def /C2 { BL [] 0 setdash 2 copy moveto        2 copy
 vpt 90 180 arc closepath fill                vpt 0 360 arc closepath
} bind def /C3 { BL [] 0 setdash 2 copy moveto        2 copy  vpt 0
180 arc closepath fill                vpt 0 360 arc closepath } bind
def /C4 { BL [] 0 setdash 2 copy moveto        2 copy  vpt 180 270
arc closepath fill                vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto        2 copy  vpt 0 90 arc   
    2 copy moveto        2 copy  vpt 180 270 arc closepath fill   
            vpt 0 360 arc } bind def /C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill               vpt 0 360
arc closepath } bind def /C7 { BL [] 0 setdash 2 copy moveto      
2 copy  vpt 0 270 arc closepath fill               vpt 0 360 arc closepath
} bind def /C8 { BL [] 0 setdash 2 copy moveto       2 copy vpt 270
360 arc closepath fill               vpt 0 360 arc closepath } bind
def /C9 { BL [] 0 setdash 2 copy moveto       2 copy  vpt 270 450 arc
closepath fill               vpt 0 360 arc closepath } bind def /C10
{ BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto        2 copy vpt 90 180 arc closepath fill  
             vpt 0 360 arc closepath } bind def /C11 { BL [] 0 setdash
2 copy moveto        2 copy  vpt 0 180 arc closepath fill        2
copy moveto        2 copy  vpt 270 360 arc closepath fill         
      vpt 0 360 arc closepath } bind def /C12 { BL [] 0 setdash 2 copy
moveto        2 copy  vpt 180 360 arc closepath fill              
 vpt 0 360 arc closepath } bind def /C13 { BL [] 0 setdash  2 copy
moveto        2 copy  vpt 0 90 arc closepath fill        2 copy moveto
       2 copy  vpt 180 360 arc closepath fill                vpt 0
360 arc closepath } bind def /C14 { BL [] 0 setdash 2 copy moveto 
      2 copy  vpt 90 360 arc closepath fill                vpt 0 360
arc } bind def /C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath
fill                vpt 0 360 arc closepath } bind def /Rec   { newpath
4 2 roll moveto 1 index 0 rlineto 0 exch rlineto        neg 0 rlineto
closepath } bind def /Square { dup Rec } bind def /Bsquare { vpt sub
exch vpt sub exch vpt2 Square } bind def /S0 { BL [] 0 setdash 2 copy
moveto 0 vpt rlineto BL Bsquare } bind def /S1 { BL [] 0 setdash 2
copy vpt Square fill Bsquare } bind def /S2 { BL [] 0 setdash 2 copy
exch vpt sub exch vpt Square fill Bsquare } bind def /S3 { BL [] 0
setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill
Bsquare } bind def /S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec
fill Bsquare } bind def /S7 { BL [] 0 setdash 2 copy exch vpt sub exch
vpt sub vpt vpt2 Rec fill        2 copy vpt Square fill        Bsquare
} bind def /S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare
} bind def /S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare
} bind def /S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2
copy exch vpt sub exch vpt Square fill        Bsquare } bind def /S11
{ BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub
exch vpt2 vpt Rec fill        Bsquare } bind def /S12 { BL [] 0 setdash
2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec
fill        2 copy vpt Square fill Bsquare } bind def /S14 { BL []
0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill      
 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def /S15 {
BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def /D0 { gsave
translate 45 rotate 0 0 S0 stroke grestore } bind def /D1 { gsave translate
45 rotate 0 0 S1 stroke grestore } bind def /D2 { gsave translate 45
rotate 0 0 S2 stroke grestore } bind def /D3 { gsave translate 45 rotate
0 0 S3 stroke grestore } bind def /D4 { gsave translate 45 rotate 0
0 S4 stroke grestore } bind def /D5 { gsave translate 45 rotate 0 0
S5 stroke grestore } bind def /D6 { gsave translate 45 rotate 0 0 S6
stroke grestore } bind def /D7 { gsave translate 45 rotate 0 0 S7 stroke
grestore } bind def /D8 { gsave translate 45 rotate 0 0 S8 stroke grestore
} bind def /D9 { gsave translate 45 rotate 0 0 S9 stroke grestore }
bind def /D10 { gsave translate 45 rotate 0 0 S10 stroke grestore }
bind def /D11 { gsave translate 45 rotate 0 0 S11 stroke grestore }
bind def /D12 { gsave translate 45 rotate 0 0 S12 stroke grestore }
bind def /D13 { gsave translate 45 rotate 0 0 S13 stroke grestore }
bind def /D14 { gsave translate 45 rotate 0 0 S14 stroke grestore }
bind def /D15 { gsave translate 45 rotate 0 0 S15 stroke grestore }
bind def /DiaE { stroke [] 0 setdash vpt add M   hpt neg vpt neg V
hpt vpt neg V   hpt vpt V hpt neg vpt V closepath stroke } def /BoxE
{ stroke [] 0 setdash exch hpt sub exch vpt add M   0 vpt2 neg V hpt2
0 V 0 vpt2 V   hpt2 neg 0 V closepath stroke } def /TriUE { stroke
[] 0 setdash vpt 1.12 mul add M   hpt neg vpt -1.62 mul V   hpt 2 mul
0 V   hpt neg vpt 1.62 mul V closepath stroke } def /TriDE { stroke
[] 0 setdash vpt 1.12 mul sub M   hpt neg vpt 1.62 mul V   hpt 2 mul
0 V   hpt neg vpt -1.62 mul V closepath stroke } def /PentE { stroke
[] 0 setdash gsave   translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def /CircE { stroke [] 0 setdash   hpt
0 360 arc stroke } def /Opaque { gsave closepath 1 setgray fill grestore
0 setgray closepath } def /DiaW { stroke [] 0 setdash vpt add M   hpt
neg vpt neg V hpt vpt neg V   hpt vpt V hpt neg vpt V Opaque stroke
} def /BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M   0 vpt2
neg V hpt2 0 V 0 vpt2 V   hpt2 neg 0 V Opaque stroke } def /TriUW {
stroke [] 0 setdash vpt 1.12 mul add M   hpt neg vpt -1.62 mul V  
hpt 2 mul 0 V   hpt neg vpt 1.62 mul V Opaque stroke } def /TriDW {
stroke [] 0 setdash vpt 1.12 mul sub M   hpt neg vpt 1.62 mul V   hpt
2 mul 0 V   hpt neg vpt -1.62 mul V Opaque stroke } def /PentW { stroke
[] 0 setdash gsave   translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def /CircW { stroke [] 0 setdash   hpt 0
360 arc Opaque stroke } def /BoxFill { gsave Rec 1 setgray fill grestore
} def end
 
@fedspecial end TeXDict begin
39158280 55380996 1000 300 300 (read.dvi) @start
%DVIPSBitmapFont: Fa cmsy7 7 1
/Fa 1 13 df<01F800060600080100100080200040200040400020400020800010806010
80F01080F01080601080001040002040002020004020004010008008010006060001F800
14167E911A>12 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fb cmmi10 10 3
/Fb 3 83 df<00010003000600060006000C000C000C0018001800180030003000300060
006000C000C000C0018001800180030003000300060006000C000C000C00180018001800
300030003000600060006000C000C00010297E9E15>61 D<01FE0000FF003E0000F0002E
0001E0002E0002E0002E0002E0002E0004E0004E0009C0004E0009C000470011C0004700
11C000870023800087004380008700438000870083800107010700010701070001038207
0001038207000203840E000203880E000203880E000203900E000403A01C000403A01C00
0401C01C000C01C01C001C01803C00FF8103FF80281C7E9B28>77
D<01FFFE00003C03C0003800E0003800F00038007000380070007000F0007000F0007000
F0007001E000E001C000E0078000E01E0000FFF00001C0380001C00C0001C00E0001C00E
0003800E0003800E0003800E0003800E0007001E0007001E0807001E0807001E100F000F
10FFE00F20000003C01D1D7E9B20>82 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fc cmr10 10 24
/Fc 24 117 df<60F0F0701010101020204080040C7C830C>44 D<FFE0FFE00B0280890E
>I<60F0F06004047C830C>I<03C00C301818300C300C700E60066006E007E007E007E007
E007E007E007E007E007E007E007E007E00760066006700E300C300C18180C3007E0101D
7E9B15>48 D<010007003F00C70007000700070007000700070007000700070007000700
070007000700070007000700070007000700070007000700FFF80D1C7C9B15>I<07C018
30201C400C400EF00FF80FF807F8077007000F000E000E001C001C00380070006000C001
80030006010C01180110023FFE7FFEFFFE101C7E9B15>I<07E01830201C201C781E780E
781E381E001C001C00180030006007C00030001C001C000E000F000F700FF80FF80FF80F
F00E401C201C183007C0101D7E9B15>I<000C00000C00001C00003C00003C00005C0000
DC00009C00011C00031C00021C00041C000C1C00081C00101C00301C00201C00401C00C0
1C00FFFFC0001C00001C00001C00001C00001C00001C00001C0001FFC0121C7F9B15>I<
00F0030C04040C0E181E301E300C700070006000E3E0E430E818F00CF00EE006E007E007
E007E007E007600760077006300E300C18180C3003E0101D7E9B15>54
D<03E00C301008200C200660066006700670067C0C3E183FB01FE007F007F818FC307E60
1E600FC007C003C003C003C00360026004300C1C1007E0101D7E9B15>56
D<03C00C301818300C700C600EE006E006E007E007E007E007E0076007700F300F18170C
2707C700060006000E300C780C78187018203010C00F80101D7E9B15>I<FF001FF00F80
03800FC001000BC0010009E0010008F0010008F0010008780100083C0100083E0100081E
0100080F0100080F8100080781000803C1000801E1000801F1000800F100080079000800
7D0008003D0008001F0008001F0008000F0008000700080003001C000300FF8001001C1C
7F9B1F>78 D<FFF003FC0F8001E0078000C007C0008003C0010003E0030001E0020000F0
040000F8040000780800007C1800003C1000003E2000001F2000000F4000000FC0000007
800000078000000780000007800000078000000780000007800000078000000780000007
800000078000007FF8001E1C809B1F>89 D<FEFEC0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0
C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0FEFE07297C9E0C>91
D<FEFE060606060606060606060606060606060606060606060606060606060606060606
06060606FEFE0729809E0C>93 D<1FC000307000783800781C00301C00001C00001C0001
FC000F1C00381C00701C00601C00E01C40E01C40E01C40603C40304E801F870012127E91
15>97 D<001F800003800003800003800003800003800003800003800003800003800003
8003F3800E0B80180780300380700380600380E00380E00380E00380E00380E00380E003
806003807003803003801807800E1B8003E3F0141D7F9C17>100
D<07E00C301818300C700E6006E006FFFEE000E000E000E00060007002300218040C1803
E00F127F9112>I<FC00001C00001C00001C00001C00001C00001C00001C00001C00001C
00001C00001C0FE01C07801C06001C0C001C10001C20001C40001CE0001DE0001E70001C
78001C38001C3C001C1C001C0E001C0F001C0F80FF9FE0131D7F9C16>107
D<FC7E07E0001C838838001D019018001E01E01C001C01C01C001C01C01C001C01C01C00
1C01C01C001C01C01C001C01C01C001C01C01C001C01C01C001C01C01C001C01C01C001C
01C01C001C01C01C001C01C01C00FF8FF8FF8021127F9124>109
D<FC7C001C87001D03001E03801C03801C03801C03801C03801C03801C03801C03801C03
801C03801C03801C03801C03801C0380FF9FF014127F9117>I<FC7C001D87001E01801C
01C01C00E01C00E01C00701C00701C00701C00701C00701C00701C00E01C00E01C01C01E
01801D07001CFC001C00001C00001C00001C00001C00001C00001C0000FF8000141A7F91
17>112 D<FCE01D381E781E781C301C001C001C001C001C001C001C001C001C001C001C
001C00FFC00D127F9110>114 D<04000400040004000C000C001C003C00FFE01C001C00
1C001C001C001C001C001C001C001C101C101C101C101C100C100E2003C00C1A7F9910>
116 D E
%EndDVIPSBitmapFont
end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 300dpi
TeXDict begin
%%PaperSize: a4

%%EndSetup
%%Page: 1 1
1 0 bop 324 1166 a @beginspecial @setspecial
 gnudict begin gsave 0 0 translate 0.100 0.100 scale 0 setgray newpath
1.000 UL LTb 400 410 M 63 0 V 2987 0 R -63 0 V 400 630 M 63 0 V 2987
0 R -63 0 V 400 850 M 63 0 V 2987 0 R -63 0 V 400 1070 M 63 0 V 2987
0 R -63 0 V 400 1290 M 63 0 V 2987 0 R -63 0 V 400 1510 M 63 0 V 2987
0 R -63 0 V 400 1730 M 63 0 V 2987 0 R -63 0 V 400 1950 M 63 0 V 2987
0 R -63 0 V 400 300 M 0 63 V 0 1697 R 0 -63 V 1010 300 M 0 63 V 0 1697
R 0 -63 V 1620 300 M 0 63 V 0 1697 R 0 -63 V 2230 300 M 0 63 V 0 1697
R 0 -63 V 2840 300 M 0 63 V 0 1697 R 0 -63 V 3450 300 M 0 63 V 0 1697
R 0 -63 V 1.000 UL LTb 400 300 M 3050 0 V 0 1760 V -3050 0 V 400 300
L 1.000 UL LT0 3087 1947 M 263 0 V 2690 300 M -137 60 V -91 158 V -37
150 V -12 142 V -30 132 V -25 120 V -43 110 V -30 98 V -55 88 V -37
78 V -48 68 V -61 61 V -61 53 V -55 45 V -67 39 V -55 35 V -61 28 V
-49 25 V -55 21 V -67 17 V -37 15 V -73 11 V -30 10 V -67 8 V -55 5
V -55 4 V -49 3 V -43 1 V -24 0 V -67 -1 V -19 -1 V -61 -3 V -48 -3
V -36 -4 V -31 -3 V -24 -6 V -61 -4 V -6 -6 V -43 -5 V -43 -6 V -36
-6 V -25 -7 V -24 -6 V -49 -7 V -24 -7 V -13 -6 V 1.000 UL LT1 3087
1847 M 263 0 V 2620 300 M -12 4 V -122 93 V -91 82 V -67 74 V -74 68
V -61 61 V -61 56 V -61 51 V -61 47 V -67 43 V -61 38 V -49 36 V -60
32 V -68 30 V -54 28 V -55 24 V -55 22 V -49 18 V -43 18 V -36 16 V
-49 14 V -43 12 V -37 11 V -54 9 V -31 8 V -43 7 V -18 5 V -30 5 V
-43 4 V -18 4 V -37 2 V -24 2 V -18 1 V -12 1 V -25 1 V -18 0 V -6
0 V -37 0 V 6 -1 V -24 0 V 6 -1 V -12 0 V -6 -1 V -18 -1 V -13 -1 V
1.000 UL LT2 3087 1747 M 263 0 V 2631 300 M -23 8 V 2474 419 L -91
102 V -68 95 V -54 86 V -55 79 V -49 71 V -61 65 V -55 58 V -43 52
V -67 47 V -43 41 V -48 36 V -61 33 V -43 29 V -55 24 V -49 22 V -36
19 V -43 16 V -43 15 V -42 12 V -55 10 V -31 7 V -30 8 V -25 6 V -36
4 V -31 3 V -37 4 V -12 1 V -18 2 V -18 0 V -37 1 V -12 -1 V -6 -2
V 0 -1 V -12 -1 V 12 1 V 0 1 V 12 1 V -12 1 V 36 1 V 31 -1 V 18 -2
V stroke grestore end showpage
 
@endspecial
1370 452 a Fc(NN)14 b(and)g(YN)1282 406 y(NN,)g(YN)g(and)g(YY)1407
363 y(pn-matter)1063 1168 y Fb(R)g Fc([km])365 674 y
 gsave currentpoint currentpoint translate 270 rotate neg exch neg
exch translate

365 674 a -64 w Fb(M)r(=)n(M)402 680 y Fa(\014)365 674
y
 currentpoint grestore moveto
 365 674 a 1740 1096 a Fc(14)-296 b(13)g(12)g(11)g(10)-286
b(9)449 367 y(2)417 458 y(1.8)417 550 y(1.6)417 642 y(1.4)417
733 y(1.2)449 825 y(1)417 917 y(0.8)417 1008 y(0.6)p
eop
%%Trailer
end
userdict /end-hook known{end-hook}if
%%EOF
