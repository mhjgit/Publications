%!PS-Adobe-2.0
%%Creator: dvips(k) 5.78 Copyright 1998 Radical Eye Software (www.radicaleye.com)
%%Title: read.dvi
%%Pages: 1
%%PageOrder: Ascend
%%BoundingBox: 0 0 596 842
%%EndComments
%DVIPSCommandLine: /local/TEX/bin.linux/dvips -o fig1.ps read.dvi
%DVIPSParameters: dpi=300
%DVIPSSource:  TeX output 1999.05.28:1441
%%BeginProcSet: tex.pro
%!
/TeXDict 300 dict def TeXDict begin /N{def}def /B{bind def}N /S{exch}N
/X{S N}B /TR{translate}N /isls false N /vsize 11 72 mul N /hsize 8.5 72
mul N /landplus90{false}def /@rigin{isls{[0 landplus90{1 -1}{-1 1}
ifelse 0 0 0]concat}if 72 Resolution div 72 VResolution div neg scale
isls{landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div
hsize mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul
TR[matrix currentmatrix{dup dup round sub abs 0.00001 lt{round}if}
forall round exch round exch]setmatrix}N /@landscape{/isls true N}B
/@manualfeed{statusdict /manualfeed true put}B /@copies{/#copies X}B
/FMat[1 0 0 -1 0 0]N /FBB[0 0 0 0]N /nn 0 N /IE 0 N /ctr 0 N /df-tail{
/nn 8 dict N nn begin /FontType 3 N /FontMatrix fntrx N /FontBBox FBB N
string /base X array /BitMaps X /BuildChar{CharBuilder}N /Encoding IE N
end dup{/foo setfont}2 array copy cvx N load 0 nn put /ctr 0 N[}B /df{
/sf 1 N /fntrx FMat N df-tail}B /dfs{div /sf X /fntrx[sf 0 0 sf neg 0 0]
N df-tail}B /E{pop nn dup definefont setfont}B /ch-width{ch-data dup
length 5 sub get}B /ch-height{ch-data dup length 4 sub get}B /ch-xoff{
128 ch-data dup length 3 sub get sub}B /ch-yoff{ch-data dup length 2 sub
get 127 sub}B /ch-dx{ch-data dup length 1 sub get}B /ch-image{ch-data
dup type /stringtype ne{ctr get /ctr ctr 1 add N}if}B /id 0 N /rw 0 N
/rc 0 N /gp 0 N /cp 0 N /G 0 N /sf 0 N /CharBuilder{save 3 1 roll S dup
/base get 2 index get S /BitMaps get S get /ch-data X pop /ctr 0 N ch-dx
0 ch-xoff ch-yoff ch-height sub ch-xoff ch-width add ch-yoff
setcachedevice ch-width ch-height true[1 0 0 -1 -.1 ch-xoff sub ch-yoff
.1 sub]{ch-image}imagemask restore}B /D{/cc X dup type /stringtype ne{]}
if nn /base get cc ctr put nn /BitMaps get S ctr S sf 1 ne{dup dup
length 1 sub dup 2 index S get sf div put}if put /ctr ctr 1 add N}B /I{
cc 1 add D}B /bop{userdict /bop-hook known{bop-hook}if /SI save N @rigin
0 0 moveto /V matrix currentmatrix dup 1 get dup mul exch 0 get dup mul
add .99 lt{/QV}{/RV}ifelse load def pop pop}N /eop{SI restore userdict
/eop-hook known{eop-hook}if showpage}N /@start{userdict /start-hook
known{start-hook}if pop /VResolution X /Resolution X 1000 div /DVImag X
/IE 256 array N 2 string 0 1 255{IE S dup 360 add 36 4 index cvrs cvn
put}for pop 65781.76 div /vsize X 65781.76 div /hsize X}N /p{show}N
/RMat[1 0 0 -1 0 0]N /BDot 260 string N /rulex 0 N /ruley 0 N /v{/ruley
X /rulex X V}B /V{}B /RV statusdict begin /product where{pop false[
(Display)(NeXT)(LaserWriter 16/600)]{dup length product length le{dup
length product exch 0 exch getinterval eq{pop true exit}if}{pop}ifelse}
forall}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale rulex ruley false
RMat{BDot}imagemask grestore}}{{gsave TR -.1 .1 TR rulex ruley scale 1 1
false RMat{BDot}imagemask grestore}}ifelse B /QV{gsave newpath transform
round exch round exch itransform moveto rulex 0 rlineto 0 ruley neg
rlineto rulex neg 0 rlineto fill grestore}B /a{moveto}B /delta 0 N /tail
{dup /delta X 0 rmoveto}B /M{S p delta add tail}B /b{S p tail}B /c{-4 M}
B /d{-3 M}B /e{-2 M}B /f{-1 M}B /g{0 M}B /h{1 M}B /i{2 M}B /j{3 M}B /k{
4 M}B /w{0 rmoveto}B /l{p -4 w}B /m{p -3 w}B /n{p -2 w}B /o{p -1 w}B /q{
p 1 w}B /r{p 2 w}B /s{p 3 w}B /t{p 4 w}B /x{0 S rmoveto}B /y{3 2 roll p
a}B /bos{/SS save N}B /eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: pstricks.pro
%!
% PostScript prologue for pstricks.tex.
% Created 1994/6/23. Source file was pstricks.doc
% Version 0.93a-97 patch 1, 97/11/07
% For use with Rokicki's dvips.
/tx@Dict 200 dict def tx@Dict begin
/ADict 25 dict def
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Atan { /atan load stopped { pop pop 0 } if } def
/Div { dup 0 eq { pop } { div } ifelse } def
/NET { neg exch neg exch T } def
/Pyth { dup mul exch dup mul add sqrt } def
/PtoC { 2 copy cos mul 3 1 roll sin mul } def
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def }
def
/PathLength { flattenpath /z 0 def { /y1 ED /x1 ED /y2 y1 def /x2 x1 def
} { /y ED /x ED PathLength@ } {} { /y y2 def /x x2 def PathLength@ }
/pathforall load stopped { pop pop pop pop } if z } def
/STP { .996264 dup scale } def
/STV { SDict begin normalscale end STP  } def
/DashLine { dup 0 gt { /a .5 def PathLength exch div } { pop /a 1 def
PathLength } ifelse /b ED /x ED /y ED /z y x add def b a .5 sub 2 mul y
mul sub z Div round z mul a .5 sub 2 mul y mul add b exch Div dup y mul
/y ED x mul /x ED x 0 gt y 0 gt and { [ y x ] 1 a sub y mul } { [ 1 0 ]
0 } ifelse setdash stroke } def
/DotLine { /b PathLength def /a ED /z ED /y CLW def /z y z add def a 0 gt
{ /b b a div def } { a 0 eq { /b b y sub def } { a -3 eq { /b b y add
def } if } ifelse } ifelse [ 0 b b z Div round Div dup 0 le { pop 1 } if
] a 0 gt { 0 } { y 2 div a -2 gt { neg } if } ifelse setdash 1
setlinecap stroke } def
/LineFill { gsave abs CLW add /a ED a 0 dtransform round exch round exch
2 copy idtransform exch Atan rotate idtransform pop /a ED .25 .25
itransform translate pathbbox /y2 ED a Div ceiling cvi /x2 ED /y1 ED a
Div cvi /x1 ED /y2 y2 y1 sub def clip newpath 2 setlinecap systemdict
/setstrokeadjust known { true setstrokeadjust } if x2 x1 sub 1 add { x1
a mul y1 moveto 0 y2 rlineto stroke /x1 x1 1 add def } repeat grestore }
def
/BeginArrow { ADict begin /@mtrx CM def gsave 2 copy T 2 index sub neg
exch 3 index sub exch Atan rotate newpath } def
/EndArrow { @mtrx setmatrix CP grestore end } def
/Arrow { CLW mul add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1
scale } if w neg h moveto 0 0 L w h L w neg a neg rlineto gsave fill
grestore } def
/Tbar { CLW mul add /z ED z -2 div CLW 2 div moveto z 0 rlineto stroke 0
CLW moveto } def
/Bracket { CLW mul add dup CLW sub 2 div /x ED mul CLW add /y ED /z CLW 2
div def x neg y moveto x neg CLW 2 div L x CLW 2 div L x y L stroke 0
CLW moveto } def
/RoundBracket { CLW mul add dup 2 div /x ED mul /y ED /mtrx CM def 0 CLW
2 div T x y mul 0 ne { x y scale } if 1 1 moveto .85 .5 .35 0 0 0
curveto -.35 0 -.85 .5 -1 1 curveto mtrx setmatrix stroke 0 CLW moveto }
def
/SD { 0 360 arc fill } def
/EndDot { { /z DS def } { /z 0 def } ifelse /b ED 0 z DS SD b { 0 z DS
CLW sub SD } if 0 DS z add CLW 4 div sub moveto } def
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
/closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
load } if ] cvx newpath 3 1 roll T exec } def
/NArray { aload length 2 div dup dup cvi eq not { exch pop } if /n exch
cvi def } def
/NArray { /f ED counttomark 2 div dup cvi /n ED n eq not { exch pop } if
f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse } def
/Line { NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub
def n { Lineto } repeat CP 4 2 roll ArrowB L pop pop } if } def
/Arcto { /a [ 6 -2 roll ] cvx def a r /arcto load stopped { 5 } { 4 }
ifelse { pop } repeat a } def
/CheckClosed { dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
and { pop pop /n n 1 sub def } if } def
/Polygon { NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n { pop pop }
repeat } { n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED /x0 ED /y1
ED /x1 ED x1 y1 /x1 x0 x1 add 2 div def /y1 y0 y1 add 2 div def x1 y1
moveto /n n 2 sub def n { Lineto } repeat x1 y1 x0 y0 6 4 roll Lineto
Lineto pop pop closepath } ifelse } def
/Diamond { /mtrx CM def T rotate /h ED /w ED dup 0 eq { pop } { CLW mul
neg /d ED /a w h Atan def /h d a sin Div h add def /w d a cos Div w add
def } ifelse mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2
div /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
setmatrix } def
%  Modification Denis GIROU (CNRS/IDRIS - France) <Denis.Girou@idris.fr> - 15 Jan. 1997
% /Triangle { /mtrx CM def translate rotate /h ED 2 div /w ED dup 0 eq {
% pop } { CLW mul /d ED /h h d w h Atan sin Div sub def /w w d h w Atan 2
% div dup cos exch sin Div mul sub def } ifelse mark 0 d w neg d 0 h w d 0
% d /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
% setmatrix } def
/Triangle { /mtrx CM def translate rotate /h ED 2 div /w ED dup
CLW mul /d ED /h h d w h Atan sin Div sub def /w w d h w Atan 2
div dup cos exch sin Div mul sub def mark 0 d w neg d 0 h w d 0
d /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
setmatrix } def
/CCA { /y ED /x ED 2 copy y sub /dy1 ED x sub /dx1 ED /l1 dx1 dy1 Pyth
def } def
/CCA { /y ED /x ED 2 copy y sub /dy1 ED x sub /dx1 ED /l1 dx1 dy1 Pyth
def } def
/CC { /l0 l1 def /x1 x dx sub def /y1 y dy sub def /dx0 dx1 def /dy0 dy1
def CCA /dx dx0 l1 c exp mul dx1 l0 c exp mul add def /dy dy0 l1 c exp
mul dy1 l0 c exp mul add def /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos
abs b exp a mul dx dy Pyth Div 2 div def /x2 x l0 dx mul m mul sub def
/y2 y l0 dy mul m mul sub def /dx l1 dx mul m mul neg def /dy l1 dy mul
m mul neg def } def
/IC { /c c 1 add def c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if }
ifelse /a a 2 mul 3 div 45 cos b exp div def CCA /dx 0 def /dy 0 def }
def
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
/OpenCurve { NArray n 3 lt { n { pop pop } repeat } { BOC /n n 3 sub def
n { NC } repeat EOC } ifelse } def
/AltCurve { { false NArray n 2 mul 2 roll [ n 2 mul 3 sub 1 roll ] aload
/Points ED n 2 mul -2 roll } { false NArray } ifelse n 4 lt { n { pop
pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse } def
/ClosedCurve { NArray n 3 lt { n { pop pop } repeat } { n 3 gt {
CheckClosed } if 6 copy n 2 mul 6 add 6 roll IC CC x y moveto n { NC }
repeat closepath pop pop } ifelse } def
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore }
def
/FontDot { DS 2 mul dup matrix scale matrix concatmatrix exch matrix
rotate matrix concatmatrix exch findfont exch makefont setfont } def
/Rect { x1 y1 y2 add 2 div moveto x1 y2 lineto x2 y2 lineto x2 y1 lineto
x1 y1 lineto closepath } def
/OvalFrame { x1 x2 eq y1 y2 eq or { pop pop x1 y1 moveto x2 y2 L } { y1
y2 sub abs x1 x2 sub abs 2 copy gt { exch pop } { pop } ifelse 2 div
exch { dup 3 1 roll mul exch } if 2 copy lt { pop } { exch pop } ifelse
/b ED x1 y1 y2 add 2 div moveto x1 y2 x2 y2 b arcto x2 y2 x2 y1 b arcto
x2 y1 x1 y1 b arcto x1 y1 x1 y2 b arcto 16 { pop } repeat closepath }
ifelse } def
/Frame { CLW mul /a ED 3 -1 roll 2 copy gt { exch } if a sub /y2 ED a add
/y1 ED 2 copy gt { exch } if a sub /x2 ED a add /x1 ED 1 index 0 eq {
pop pop Rect } { OvalFrame } ifelse } def
/BezierNArray { /f ED counttomark 2 div dup cvi /n ED n eq not { exch pop
} if n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat f { ]
aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse } def
/OpenBezier { BezierNArray n 1 eq { pop pop } { ArrowA n 4 sub 3 idiv { 6
2 roll 4 2 roll curveto } repeat 6 2 roll 4 2 roll ArrowB curveto }
ifelse } def
/ClosedBezier { BezierNArray n 1 eq { pop pop } { moveto n 1 sub 3 idiv {
6 2 roll 4 2 roll curveto } repeat closepath } ifelse } def
/BezierShowPoints { gsave Points aload length 2 div cvi /n ED moveto n 1
sub { lineto } repeat CLW 2 div SLW [ 4 4 ] 0 setdash stroke grestore }
def
/Parab { /y0 exch def /x0 exch def /y1 exch def /x1 exch def /dx x0 x1
sub 3 div def /dy y0 y1 sub 3 div def x0 dx sub y0 dy add x1 y1 ArrowA
x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB curveto /Points [ x1 y1 x0
y0 x0 2 mul x1 sub y1 ] def } def
/Grid { newpath /a 4 string def /b ED /c ED /n ED cvi dup 1 lt { pop 1 }
if /s ED s div dup 0 eq { pop 1 } if /dy ED s div dup 0 eq { pop 1 } if
/dx ED dy div round dy mul /y0 ED dx div round dx mul /x0 ED dy div
round cvi /y2 ED dx div round cvi /x2 ED dy div round cvi /y1 ED dx div
round cvi /x1 ED /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def /w x2 x1 sub
0 gt { 1 } { -1 } ifelse def b 0 gt { /z1 b 4 div CLW 2 div add def
/Helvetica findfont b scalefont setfont /b b .95 mul CLW 2 div add def }
if systemdict /setstrokeadjust known { true setstrokeadjust /t { } def }
{ /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
exch itransform } bind def } ifelse gsave n 0 gt { 1 setlinecap [ 0 dy n
div ] dy n div 2 div setdash } { 2 setlinecap } ifelse /i x1 def /f y1
dy mul n 0 gt { dy n div 2 div h mul sub } if def /g y2 dy mul n 0 gt {
dy n div 2 div h mul add } if def x2 x1 sub w mul 1 add dup 1000 gt {
pop 1000 } if { i dx mul dup y0 moveto b 0 gt { gsave c i a cvs dup
stringwidth pop /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse h 0 gt {b neg}
{z1} ifelse rmoveto show grestore } if dup t f moveto g t L stroke /i i
w add def } repeat grestore gsave n 0 gt
% DG/SR modification begin - Nov. 7, 1997
%    { 1 setlinecap [ 0 dx n div ] dy n div 2 div setdash }
    { 1 setlinecap [ 0 dx n div ] dx n div 2 div setdash }
% DG/SR modification end
{ 2 setlinecap } ifelse /i y1 def /f x1 dx mul
n 0 gt { dx n div 2 div w mul sub } if def /g x2 dx mul n 0 gt { dx n
div 2 div w mul add } if def y2 y1 sub h mul 1 add dup 1000 gt { pop
1000 } if { newpath i dy mul dup x0 exch moveto b 0 gt { gsave c i a cvs
dup stringwidth pop /z2 ED w 0 gt {z1 z2 add neg} {z1} ifelse h 0 gt
{z1} {b neg} ifelse rmoveto show grestore } if dup f exch t moveto g
exch t L stroke /i i h add def } repeat grestore } def
/ArcArrow { /d ED /b ED /a ED gsave newpath 0 -1000 moveto clip newpath 0
1 0 0 b grestore c mul /e ED pop pop pop r a e d PtoC y add exch x add
exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
mul neg d } def
/Ellipse { /mtrx CM def T scale 0 0 1 5 3 roll arc mtrx setmatrix } def
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
/RotBegin { tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 }
def } if /TMatrix [ TMatrix CM ] cvx def /a ED a Rot /RAngle [ RAngle
dup a add ] cvx def } def
/RotEnd { /TMatrix [ TMatrix setmatrix ] cvx def /RAngle [ RAngle pop ]
cvx def } def
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
/Uput { /a ED add 2 div /h ED 2 div /w ED /s a sin def /c a cos def /b s
abs c abs 2 copy gt dup /q ED { pop } { exch pop } ifelse def /w1 c b
div w mul def /h1 s b div h mul def q { w1 abs w sub dup c mul abs } {
h1 abs h sub dup s mul abs } ifelse } def
/UUput { /z ED abs /y ED /x ED q { x s div c mul abs y gt } { x c div s
mul abs y gt } ifelse { x x mul y y mul sub z z mul add sqrt z add } { q
{ x s div } { x c div } ifelse abs } ifelse a PtoC h1 add exch w1 add
exch } def
/BeginOL { dup (all) eq exch TheOL eq or { IfVisible not { Visible
/IfVisible true def } if } { IfVisible { Invisible /IfVisible false def
} if } ifelse } def
/InitOL { /OLUnit [ 3000 3000 matrix defaultmatrix dtransform ] cvx def
/Visible { CP OLUnit idtransform T moveto } def /Invisible { CP OLUnit
neg exch neg exch idtransform T moveto } def /BOL { BeginOL } def
/IfVisible true def } def
end

%%EndProcSet
%%BeginProcSet: pst-dots.pro
%!PS-Adobe-2.0
%%Title: Dot Font for PSTricks
%%Creator: Timothy Van Zandt <tvz@Princeton.EDU>
%%Creation Date: May 7, 1993
10 dict dup begin
  /FontType 3 def
  /FontMatrix [ .001 0 0 .001 0 0 ] def
  /FontBBox [ 0 0 0 0 ] def
  /Encoding 256 array def
  0 1 255 { Encoding exch /.notdef put } for
  Encoding
    dup (b) 0 get /Bullet put
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    (P) 0 get /BoldPentagon put
  /Metrics 13 dict def
  Metrics begin
    /Bullet 1000 def
    /Circle 1000 def
    /BoldCircle 1000 def
    /SolidTriangle 1344 def
    /Triangle 1344 def
    /BoldTriangle 1344 def
    /SolidSquare 886 def
    /Square 886 def
    /BoldSquare 886 def
    /SolidPentagon 1093.2 def
    /Pentagon 1093.2 def
    /BoldPentagon 1093.2 def
    /.notdef 0 def
  end
  /BBoxes 13 dict def
  BBoxes begin
    /Circle { -550 -550 550 550 } def
    /BoldCircle /Circle load def
    /Bullet /Circle load def
    /Triangle { -571.5 -330 571.5 660 } def
    /BoldTriangle /Triangle load def
    /SolidTriangle /Triangle load def
    /Square { -450 -450 450 450 } def
    /BoldSquare /Square load def
    /SolidSquare /Square load def
    /Pentagon { -546.6 -465 546.6 574.7 } def
    /BoldPentagon /Pentagon load def
    /SolidPentagon /Pentagon load def
    /.notdef { 0 0 0 0 } def
  end
  /CharProcs 20 dict def
  CharProcs begin
    /Adjust {
      2 copy dtransform floor .5 add exch floor .5 add exch idtransform
      3 -1 roll div 3 1 roll exch div exch scale
    } def
    /CirclePath { 0 0 500 0 360 arc closepath } def
    /Bullet { 500 500 Adjust CirclePath fill } def
    /Circle { 500 500 Adjust CirclePath .9 .9 scale CirclePath eofill } def
    /BoldCircle { 500 500 Adjust CirclePath .8 .8 scale CirclePath eofill } def
    /BoldCircle { CirclePath .8 .8 scale CirclePath eofill } def
    /TrianglePath {
      0  660 moveto -571.5 -330 lineto 571.5 -330 lineto closepath
    } def
    /SolidTriangle { TrianglePath fill } def
    /Triangle { TrianglePath .85 .85 scale TrianglePath eofill } def
    /BoldTriangle { TrianglePath .7 .7 scale TrianglePath eofill } def
    /SquarePath {
      -450 450 moveto 450 450 lineto 450 -450 lineto -450 -450 lineto
      closepath
    } def
    /SolidSquare { SquarePath fill } def
    /Square { SquarePath .89 .89 scale SquarePath eofill } def
    /BoldSquare { SquarePath .78 .78 scale SquarePath eofill } def
    /PentagonPath {
      -337.8 -465   moveto
       337.8 -465   lineto
       546.6  177.6 lineto
         0    574.7 lineto
      -546.6  177.6 lineto
      closepath
    } def
    /SolidPentagon { PentagonPath fill } def
    /Pentagon { PentagonPath .89 .89 scale PentagonPath eofill } def
    /BoldPentagon { PentagonPath .78 .78 scale PentagonPath eofill } def
    /.notdef { } def
  end
  /BuildGlyph {
    exch
    begin
      Metrics 1 index get exec 0
      BBoxes 3 index get exec
      setcachedevice
      CharProcs begin load exec end
    end
  } def
  /BuildChar {
    1 index /Encoding get exch get
    1 index /BuildGlyph get exec
  } bind def
end
/PSTricksDotFont exch definefont pop

%%EndProcSet
%%BeginProcSet: special.pro
%!
TeXDict begin /SDict 200 dict N SDict begin /@SpecialDefaults{/hs 612 N
/vs 792 N /ho 0 N /vo 0 N /hsc 1 N /vsc 1 N /ang 0 N /CLIP 0 N /rwiSeen
false N /rhiSeen false N /letter{}N /note{}N /a4{}N /legal{}N}B
/@scaleunit 100 N /@hscale{@scaleunit div /hsc X}B /@vscale{@scaleunit
div /vsc X}B /@hsize{/hs X /CLIP 1 N}B /@vsize{/vs X /CLIP 1 N}B /@clip{
/CLIP 2 N}B /@hoffset{/ho X}B /@voffset{/vo X}B /@angle{/ang X}B /@rwi{
10 div /rwi X /rwiSeen true N}B /@rhi{10 div /rhi X /rhiSeen true N}B
/@llx{/llx X}B /@lly{/lly X}B /@urx{/urx X}B /@ury{/ury X}B /magscale
true def end /@MacSetUp{userdict /md known{userdict /md get type
/dicttype eq{userdict begin md length 10 add md maxlength ge{/md md dup
length 20 add dict copy def}if end md begin /letter{}N /note{}N /legal{}
N /od{txpose 1 0 mtx defaultmatrix dtransform S atan/pa X newpath
clippath mark{transform{itransform moveto}}{transform{itransform lineto}
}{6 -2 roll transform 6 -2 roll transform 6 -2 roll transform{
itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll curveto}}{{
closepath}}pathforall newpath counttomark array astore /gc xdf pop ct 39
0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}if}N
/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1 -1
scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3 get
ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip yflip
not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub neg 0
TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{noflips{TR
pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop 90 rotate 1
-1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg
TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr 1 get neg
sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr 2 get ppr
0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4 -1 roll add
2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S TR}if}N /cp
{pop pop showpage pm restore}N end}if}if}N /normalscale{Resolution 72
div VResolution 72 div neg scale magscale{DVImag dup scale}if 0 setgray}
N /psfts{S 65781.76 div N}N /startTexFig{/psf$SavedState save N userdict
maxlength dict begin /magscale true def normalscale currentpoint TR
/psf$ury psfts /psf$urx psfts /psf$lly psfts /psf$llx psfts /psf$y psfts
/psf$x psfts currentpoint /psf$cy X /psf$cx X /psf$sx psf$x psf$urx
psf$llx sub div N /psf$sy psf$y psf$ury psf$lly sub div N psf$sx psf$sy
scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub TR
/showpage{}N /erasepage{}N /copypage{}N /p 3 def @MacSetUp}N /doclip{
psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll newpath 4 copy 4 2
roll moveto 6 -1 roll S lineto S lineto S lineto closepath clip newpath
moveto}N /endTexFig{end psf$SavedState restore}N /@beginspecial{SDict
begin /SpecialSave save N gsave normalscale currentpoint TR
@SpecialDefaults count /ocount X /dcount countdictstack N}N /@setspecial
{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto
closepath clip}if ho vo TR hsc vsc scale ang rotate rwiSeen{rwi urx llx
sub div rhiSeen{rhi ury lly sub div}{dup}ifelse scale llx neg lly neg TR
}{rhiSeen{rhi ury lly sub div dup scale llx neg lly neg TR}if}ifelse
CLIP 2 eq{newpath llx lly moveto urx lly lineto urx ury lineto llx ury
lineto closepath clip}if /showpage{}N /erasepage{}N /copypage{}N newpath
}N /@endspecial{count ocount sub{pop}repeat countdictstack dcount sub{
end}repeat grestore SpecialSave restore end}N /@defspecial{SDict begin}
N /@fedspecial{end}B /li{lineto}B /rl{rlineto}B /rc{rcurveto}B /np{
/SaveX currentpoint /SaveY X N 1 setlinecap newpath}N /st{stroke SaveX
SaveY moveto}N /fil{fill SaveX SaveY moveto}N /ellipse{/endangle X
/startangle X /yrad X /xrad X /savematrix matrix currentmatrix N TR xrad
yrad scale 0 0 1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
TeXDict begin 39158280 55380996 1000 300 300 (read.dvi)
@start
%DVIPSBitmapFont: Fa cmr7 7 1
/Fa 1 44 df<006000006000006000006000006000006000006000006000006000006000
FFFFF0FFFFF0006000006000006000006000006000006000006000006000006000006000
14167E9119>43 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fb cmr10 10 12
/Fb 12 58 df<00800100020006000C000C001800180030003000300060006000600060
00E000E000E000E000E000E000E000E000E000E000E000E0006000600060006000300030
003000180018000C000C000600020001000080092A7C9E10>40 D<800040002000300018
0018000C000C000600060006000300030003000300038003800380038003800380038003
80038003800380038003000300030003000600060006000C000C00180018003000200040
008000092A7E9E10>I<03C00C301818300C300C700E60066006E007E007E007E007E007
E007E007E007E007E007E007E007E00760066006700E300C300C18180C3007E0101D7E9B
15>48 D<010007003F00C700070007000700070007000700070007000700070007000700
07000700070007000700070007000700070007000700FFF80D1C7C9B15>I<07C0183020
1C400C400EF00FF80FF807F8077007000F000E000E001C001C00380070006000C0018003
0006010C01180110023FFE7FFEFFFE101C7E9B15>I<07E01830201C201C781E780E781E
381E001C001C00180030006007C00030001C001C000E000F000F700FF80FF80FF80FF00E
401C201C183007C0101D7E9B15>I<000C00000C00001C00003C00003C00005C0000DC00
009C00011C00031C00021C00041C000C1C00081C00101C00301C00201C00401C00C01C00
FFFFC0001C00001C00001C00001C00001C00001C00001C0001FFC0121C7F9B15>I<300C
3FF83FF03FC020002000200020002000200023E02C303018301C200E000E000F000F000F
600FF00FF00FF00F800E401E401C2038187007C0101D7E9B15>I<00F0030C04040C0E18
1E301E300C700070006000E3E0E430E818F00CF00EE006E007E007E007E007E007600760
077006300E300C18180C3003E0101D7E9B15>I<4000007FFF807FFF007FFF0040020080
040080040080080000100000100000200000600000400000C00000C00001C00001800001
800003800003800003800003800007800007800007800007800007800007800003000011
1D7E9B15>I<03E00C301008200C200660066006700670067C0C3E183FB01FE007F007F8
18FC307E601E600FC007C003C003C003C00360026004300C1C1007E0101D7E9B15>I<03
C00C301818300C700C600EE006E006E007E007E007E007E0076007700F300F18170C2707
C700060006000E300C780C78187018203010C00F80101D7E9B15>I
E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fc cmr12 12 18
/Fc 18 102 df<01F000071C000C06001803003803803803807001C07001C07001C07001
C0F001E0F001E0F001E0F001E0F001E0F001E0F001E0F001E0F001E0F001E0F001E0F001
E0F001E0F001E07001C07001C07001C07803C03803803803801C07000C0600071C0001F0
0013227EA018>48 D<008003800F80F38003800380038003800380038003800380038003
800380038003800380038003800380038003800380038003800380038003800380038007
C0FFFE0F217CA018>I<03F0000C1C001007002007804003C04003C08003E0F003E0F801
E0F801E0F801E02003E00003E00003C00003C0000780000700000E00001C000018000030
0000600000C0000180000100000200200400200800201800603000403FFFC07FFFC0FFFF
C013217EA018>I<03F8000C1E00100F002007804007C07807C07803C07807C03807C000
0780000780000700000F00000C0000380003F000001C00000F000007800007800003C000
03C00003E02003E07003E0F803E0F803E0F003C04003C0400780200780100F000C1C0003
F00013227EA018>I<000300000300000700000700000F00001700001700002700006700
004700008700018700010700020700060700040700080700080700100700200700200700
400700C00700FFFFF8000700000700000700000700000700000700000700000F80007FF0
15217FA018>I<0007E0100038183000E0063001C00170038000F0070000F00E0000701E
0000701C0000303C0000303C0000307C0000107800001078000010F8000000F8000000F8
000000F8000000F8000000F8000000F8000000F800000078000000780000107C0000103C
0000103C0000101C0000201E0000200E000040070000400380008001C0010000E0020000
381C000007E0001C247DA223>67 D<FFFFF0000F801E000780070007800380078001C007
8000E0078000F007800078078000780780007C0780003C0780003C0780003C0780003E07
80003E0780003E0780003E0780003E0780003E0780003E0780003E0780003E0780003C07
80003C0780007C0780007807800078078000F0078000E0078001E0078003C0078007000F
801E00FFFFF0001F227EA125>I<FFFFFFC00F8007C0078001C0078000C0078000400780
004007800060078000200780002007800020078020200780200007802000078020000780
60000780E00007FFE0000780E00007806000078020000780200007802000078020080780
000807800008078000100780001007800010078000300780003007800070078000E00F80
03E0FFFFFFE01D227EA121>I<FFFFFFC00F8007C0078001C0078000C007800040078000
400780006007800020078000200780002007802020078020000780200007802000078060
000780E00007FFE0000780E0000780600007802000078020000780200007802000078000
0007800000078000000780000007800000078000000780000007800000078000000FC000
00FFFE00001B227EA120>I<FFFC001F80000F00000F00000F00000F00000F00000F0000
0F00000F00000F00000F00000F00000F00000F00000F00000F00000F00000F00000F0000
0F00000F00000F00010F00010F00010F00010F00030F00030F00020F00060F00060F001E
1F007EFFFFFE18227DA11E>76 D<FFC00003FF0FC00003F007C00003E005E00005E005E0
0005E004F00009E004F00009E004F00009E004780011E004780011E004780011E0043C00
21E0043C0021E0043C0021E0041E0041E0041E0041E0040F0081E0040F0081E0040F0081
E004078101E004078101E004078101E00403C201E00403C201E00401E401E00401E401E0
0401E401E00400F801E00400F801E00400F801E004007001E00E007001E01F007003F0FF
E0203FFF28227EA12D>I<FFFFF0000F803C0007800F0007800780078007C0078003C007
8003E0078003E0078003E0078003E0078003E0078003E0078003C0078007C00780078007
800F0007803C0007FFF00007800000078000000780000007800000078000000780000007
800000078000000780000007800000078000000780000007800000078000000FC00000FF
FC00001B227EA121>80 D<FFFFE000000F803C000007800E00000780078000078007C000
078003C000078003E000078003E000078003E000078003E000078003E000078003C00007
8007C000078007800007800E000007803C000007FFE00000078070000007803800000780
1C000007801E000007800E000007800F000007800F000007800F000007800F000007800F
800007800F800007800F800007800F808007800FC080078007C0800FC003C100FFFC01E2
000000007C0021237EA124>82 D<7FFFFFF8780780786007801840078008400780084007
8008C007800C800780048007800480078004800780040007800000078000000780000007
800000078000000780000007800000078000000780000007800000078000000780000007
80000007800000078000000780000007800000078000000780000007800000078000000F
C00001FFFE001E227EA123>84 D<FFFC07FF0FC000F80780007007800020078000200780
002007800020078000200780002007800020078000200780002007800020078000200780
002007800020078000200780002007800020078000200780002007800020078000200780
002007800020078000200380004003C0004003C0004001C0008000E00080006001000030
0600001C08000003F00020237EA125>I<FFF0007FC01F80001F000F00000C000F80000C
000780000800078000080003C000100003C000100003C000100001E000200001E0002000
01F000600000F000400000F000400000780080000078008000007C008000003C01000000
3C010000001E020000001E020000001E020000000F040000000F040000000F8C00000007
88000000078800000003D000000003D000000003F000000001E000000001E000000000C0
00000000C000000000C0000022237FA125>I<7FF803FF000FE001F80007C000E00003E0
00C00001E000800001F001800000F80100000078020000007C040000003E040000001E08
0000001F100000000FB000000007A000000007C000000003E000000001E000000001F000
000003F80000000278000000047C0000000C3E000000081E000000101F000000200F8000
0020078000004007C000008003E000008001E000010001F000030000F800070000F8001F
8000FC00FFC003FFC022227FA125>88 D<01FC000707000C03801C01C03801C07801E070
00E0F000E0FFFFE0F00000F00000F00000F00000F000007000007800203800201C00400E
008007030000FC0013157F9416>101 D E
%EndDVIPSBitmapFont
end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 300dpi
TeXDict begin
%%PaperSize: a4

%%EndSetup
%%Page: 1 1
1 0 bop 164 2804 a @beginspecial @setspecial
 tx@Dict begin STP newpath 1.0 SLW 0. setgray  /ArrowA { moveto } def
/ArrowB { BeginArrow false 0.4 1.4 1.5 2. Arrow  EndArrow  } def [
22.76228 426.7913 22.76228 0.0  /Lineto /lineto load def false Line
 gsave 1.0 SLW 0. setgray 0 setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
 tx@Dict begin STP newpath 1.0 SLW 0. setgray  /ArrowA { moveto } def
/ArrowB { } def [ 22.76228 0.0 18.20955 0.0  /Lineto /lineto load def
false Line  gsave 1.0 SLW 0. setgray 0 setlinecap stroke  grestore
end
 
@endspecial @beginspecial
@setspecial
 tx@Dict begin STP newpath 1.0 SLW 0. setgray  /ArrowA { moveto } def
/ArrowB { } def [ 22.76228 85.35826 18.20955 85.35826  /Lineto /lineto
load def false Line  gsave 1.0 SLW 0. setgray 0 setlinecap stroke 
grestore end
 
@endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 1.0 SLW 0. setgray  /ArrowA { moveto } def
/ArrowB { } def [ 22.76228 170.71652 18.20955 170.71652  /Lineto /lineto
load def false Line  gsave 1.0 SLW 0. setgray 0 setlinecap stroke 
grestore end
 
@endspecial
@beginspecial @setspecial
 tx@Dict begin STP newpath 1.0 SLW 0. setgray  /ArrowA { moveto } def
/ArrowB { } def [ 22.76228 256.07478 18.20955 256.07478  /Lineto /lineto
load def false Line  gsave 1.0 SLW 0. setgray 0 setlinecap stroke 
grestore end
 
@endspecial @beginspecial
@setspecial
 tx@Dict begin STP newpath 1.0 SLW 0. setgray  /ArrowA { moveto } def
/ArrowB { } def [ 22.76228 341.43304 18.20955 341.43304  /Lineto /lineto
load def false Line  gsave 1.0 SLW 0. setgray 0 setlinecap stroke 
grestore end
 
@endspecial 164 2804 a
 tx@Dict begin { 5.0 5.87494 7.73332 0.0 0.  Uput UUput } PutCoor PutBegin
 end
 164 2804 a 152 2820
a Fc(0)164 2804 y
 tx@Dict begin PutEnd  end
 164 2804 a 164 2450 a
 tx@Dict begin { 5.0 5.87494 7.73332 0.0 0.  Uput UUput } PutCoor PutBegin
 end
 164 2450 a 152
2466 a Fc(1)164 2450 y
 tx@Dict begin PutEnd  end
 164 2450 a 164 2095 a
 tx@Dict begin { 5.0 5.87494 7.73332 0.0 0.  Uput UUput } PutCoor PutBegin
 end
 164 2095
a 152 2111 a Fc(2)164 2095 y
 tx@Dict begin PutEnd  end
 164 2095 a 164 1741 a
 tx@Dict begin { 5.0 5.87494 7.73332 0.0 0.  Uput UUput } PutCoor PutBegin
 end
 164
1741 a 152 1757 a Fc(3)164 1741 y
 tx@Dict begin PutEnd  end
 164 1741 a 164 1387
a
 tx@Dict begin { 5.0 5.87494 7.73332 0.0 0.  Uput UUput } PutCoor PutBegin
 end
 164 1387 a 152 1403 a Fc(4)164 1387 y
 tx@Dict begin PutEnd  end
 164 1387 a 107
1032 a
 tx@Dict begin { 5.0 24.79697 8.2 0.0 0.  Uput UUput } PutCoor PutBegin
 end
 107 1032 a 56 1049 a Fc(MeV)107 1032 y
 tx@Dict begin PutEnd  end
 107 1032
a 164 2804 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  /ArrowA { moveto } def
/ArrowB { } def [ 91.04916 0.0 45.52458 0.0  /Lineto /lineto load def
false Line  gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore
end
 
@endspecial @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  /ArrowA { moveto } def
/ArrowB { } def [ 91.04916 8.53635 45.52458 8.53635  /Lineto /lineto
load def false Line  gsave 0.8 SLW 0. setgray 0 setlinecap stroke 
grestore end
 
@endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  /ArrowA { moveto } def
/ArrowB { } def [ 91.04916 27.31526 45.52458 27.31526  /Lineto /lineto
load def false Line  gsave 0.8 SLW 0. setgray 0 setlinecap stroke 
grestore end
 
@endspecial
@beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  /ArrowA { moveto } def
/ArrowB { } def [ 91.04916 37.55783 45.52458 37.55783  /Lineto /lineto
load def false Line  gsave 0.8 SLW 0. setgray 0 setlinecap stroke 
grestore end
 
@endspecial @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  /ArrowA { moveto } def
/ArrowB { } def [ 91.04916 75.9688 45.52458 75.9688  /Lineto /lineto
load def false Line  gsave 0.8 SLW 0. setgray 0 setlinecap stroke 
grestore end
 
@endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  /ArrowA { moveto } def
/ArrowB { } def [ 91.04916 130.59802 45.52458 130.59802  /Lineto /lineto
load def false Line  gsave 0.8 SLW 0. setgray 0 setlinecap stroke 
grestore end
 
@endspecial
@beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  /ArrowA { moveto } def
/ArrowB { } def [ 91.04916 166.44833 45.52458 166.44833  /Lineto /lineto
load def false Line  gsave 0.8 SLW 0. setgray 0 setlinecap stroke 
grestore end
 
@endspecial @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  /ArrowA { moveto } def
/ArrowB { } def [ 91.04916 192.9092 45.52458 192.9092  /Lineto /lineto
load def false Line  gsave 0.8 SLW 0. setgray 0 setlinecap stroke 
grestore end
 
@endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  /ArrowA { moveto } def
/ArrowB { } def [ 91.04916 235.58832 45.52458 235.58832  /Lineto /lineto
load def false Line  gsave 0.8 SLW 0. setgray 0 setlinecap stroke 
grestore end
 
@endspecial
@beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  /ArrowA { moveto } def
/ArrowB { } def [ 91.04916 340.57993 45.52458 340.57993  /Lineto /lineto
load def false Line  gsave 0.8 SLW 0. setgray 0 setlinecap stroke 
grestore end
 
@endspecial 636 2804 a
 tx@Dict begin { 5.0 19.41673 7.96227 2.5 0.  Uput UUput } PutCoor
PutBegin  end
 636
2804 a 596 2815 a Fb(\(2)633 2800 y Fa(+)661 2815 y Fb(\))636
2804 y
 tx@Dict begin PutEnd  end
 636 2804 a 636 2769 a
 tx@Dict begin { 5.0 19.41673 7.96227 2.5 0.  Uput UUput } PutCoor
PutBegin  end
 636 2769 a 596 2780 a Fb(\(4)633
2765 y Fa(+)661 2780 y Fb(\))636 2769 y
 tx@Dict begin PutEnd  end
 636 2769 a 636
2691 a
 tx@Dict begin { 5.0 19.41673 7.96227 2.5 0.  Uput UUput } PutCoor
PutBegin  end
 636 2691 a 596 2702 a Fb(\(5)633 2687 y Fa(+)661
2702 y Fb(\))636 2691 y
 tx@Dict begin PutEnd  end
 636 2691 a 636 2648 a
 tx@Dict begin { 5.0 19.41673 7.96227 2.5 0.  Uput UUput } PutCoor
PutBegin  end
 636 2648
a 596 2660 a Fb(\(6)633 2644 y Fa(+)661 2660 y Fb(\))636
2648 y
 tx@Dict begin PutEnd  end
 636 2648 a 636 2489 a
 tx@Dict begin { 5.0 19.41673 7.96227 2.5 0.  Uput UUput } PutCoor
PutBegin  end
 636 2489 a 596 2500 a Fb(\(7)633
2485 y Fa(+)661 2500 y Fb(\))636 2489 y
 tx@Dict begin PutEnd  end
 636 2489 a 636
2262 a
 tx@Dict begin { 5.0 19.41673 7.96227 2.5 0.  Uput UUput } PutCoor
PutBegin  end
 636 2262 a 596 2273 a Fb(\(8)633 2258 y Fa(+)661
2273 y Fb(\))636 2262 y
 tx@Dict begin PutEnd  end
 636 2262 a 636 2003 a
 tx@Dict begin { 5.0 24.41675 7.96227 2.5 0.  Uput UUput } PutCoor
PutBegin  end
 636 2003
a 586 2015 a Fb(\(10)644 2000 y Fa(+)671 2015 y Fb(\))636
2003 y
 tx@Dict begin PutEnd  end
 636 2003 a 164 2804 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  /ArrowA { moveto } def
/ArrowB { } def [ 227.62291 0.0 182.09833 0.0  /Lineto /lineto load
def false Line  gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore
end


@endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  /ArrowA { moveto } def
/ArrowB { } def [ 227.62291 11.9501 182.09833 11.9501  /Lineto /lineto
load def false Line  gsave 0.8 SLW 0. setgray 0 setlinecap stroke 
grestore end
 
@endspecial @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  /ArrowA { moveto } def
/ArrowB { } def [ 227.62291 16.21828 182.09833 16.21828  /Lineto /lineto
load def false Line  gsave 0.8 SLW 0. setgray 0 setlinecap stroke 
grestore end
 
@endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  /ArrowA { moveto } def
/ArrowB { } def [ 227.62291 33.28966 182.09833 33.28966  /Lineto /lineto
load def false Line  gsave 0.8 SLW 0. setgray 0 setlinecap stroke 
grestore end
 
@endspecial
@beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  /ArrowA { moveto } def
/ArrowB { } def [ 227.62291 46.09288 182.09833 46.09288  /Lineto /lineto
load def false Line  gsave 0.8 SLW 0. setgray 0 setlinecap stroke 
grestore end
 
@endspecial @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  /ArrowA { moveto } def
/ArrowB { } def [ 227.62291 56.33676 182.09833 56.33676  /Lineto /lineto
load def false Line  gsave 0.8 SLW 0. setgray 0 setlinecap stroke 
grestore end
 
@endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  /ArrowA { moveto } def
/ArrowB { } def [ 227.62291 114.37975 182.09833 114.37975  /Lineto
/lineto load def false Line  gsave 0.8 SLW 0. setgray 0 setlinecap
stroke  grestore end
 
@endspecial
@beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  /ArrowA { moveto } def
/ArrowB { } def [ 227.62291 151.93759 182.09833 151.93759  /Lineto
/lineto load def false Line  gsave 0.8 SLW 0. setgray 0 setlinecap
stroke  grestore end
 
@endspecial @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  /ArrowA { moveto } def
/ArrowB { } def [ 227.62291 199.738 182.09833 199.738  /Lineto /lineto
load def false Line  gsave 0.8 SLW 0. setgray 0 setlinecap stroke 
grestore end
 
@endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  /ArrowA { moveto } def
/ArrowB { } def [ 227.62291 219.37135 182.09833 219.37135  /Lineto
/lineto load def false Line  gsave 0.8 SLW 0. setgray 0 setlinecap
stroke  grestore end
 
@endspecial
@beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  /ArrowA { moveto } def
/ArrowB { } def [ 227.62291 264.61113 182.09833 264.61113  /Lineto
/lineto load def false Line  gsave 0.8 SLW 0. setgray 0 setlinecap
stroke  grestore end
 
@endspecial @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  /ArrowA { moveto } def
/ArrowB { } def [ 227.62291 307.29025 182.09833 307.29025  /Lineto
/lineto load def false Line  gsave 0.8 SLW 0. setgray 0 setlinecap
stroke  grestore end
 
@endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  /ArrowA { moveto } def
/ArrowB { } def [ 227.62291 358.50443 182.09833 358.50443  /Lineto
/lineto load def false Line  gsave 0.8 SLW 0. setgray 0 setlinecap
stroke  grestore end
 
@endspecial
1203 2804 a
 tx@Dict begin { 5.0 11.63893 7.96227 0.0 0.  Uput UUput } PutCoor
PutBegin  end
 1203 2804 a 1179 2821 a Fb(2)1200 2806 y
Fa(+)1203 2804 y
 tx@Dict begin PutEnd  end
 1203 2804 a 1203 2754 a
 tx@Dict begin { 5.0 11.63893 7.96227 0.0 0.  Uput UUput } PutCoor
PutBegin  end
 1203 2754 a
1179 2771 a Fb(1)1200 2756 y Fa(+)1203 2754 y
 tx@Dict begin PutEnd  end
 1203 2754
a 1203 2716 a
 tx@Dict begin { 5.0 11.63893 7.96227 0.0 0.  Uput UUput } PutCoor
PutBegin  end
 1203 2716 a 1179 2732 a Fb(4)1200 2717
y Fa(+)1203 2716 y
 tx@Dict begin PutEnd  end
 1203 2716 a 1203 2666 a
 tx@Dict begin { 5.0 11.63893 7.96227 0.0 0.  Uput UUput } PutCoor
PutBegin  end
 1203 2666
a 1179 2682 a Fb(3)1200 2667 y Fa(+)1203 2666 y
 tx@Dict begin PutEnd  end
 1203
2666 a 1203 2613 a
 tx@Dict begin { 5.0 11.63893 7.96227 0.0 0.  Uput UUput } PutCoor
PutBegin  end
 1203 2613 a 1179 2629 a Fb(5)1200
2614 y Fa(+)1203 2613 y
 tx@Dict begin PutEnd  end
 1203 2613 a 1203 2570 a
 tx@Dict begin { 5.0 11.63893 7.96227 0.0 0.  Uput UUput } PutCoor
PutBegin  end
 1203
2570 a 1179 2587 a Fb(6)1200 2572 y Fa(+)1203 2570 y
 tx@Dict begin PutEnd  end

1203 2570 a 1203 2329 a
 tx@Dict begin { 5.0 11.63893 7.96227 0.0 0.  Uput UUput } PutCoor
PutBegin  end
 1203 2329 a 1179 2346 a Fb(7)1200
2331 y Fa(+)1203 2329 y
 tx@Dict begin PutEnd  end
 1203 2329 a 1203 2173 a
 tx@Dict begin { 5.0 11.63893 7.96227 0.0 0.  Uput UUput } PutCoor
PutBegin  end
 1203
2173 a 1179 2190 a Fb(8)1200 2175 y Fa(+)1203 2173 y
 tx@Dict begin PutEnd  end

1203 2173 a 1203 1975 a
 tx@Dict begin { 5.0 11.63893 7.96227 0.0 0.  Uput UUput } PutCoor
PutBegin  end
 1203 1975 a 1179 1991 a Fb(9)1200
1976 y Fa(+)1203 1975 y
 tx@Dict begin PutEnd  end
 1203 1975 a 1203 1893 a
 tx@Dict begin { 5.0 16.63895 7.96227 0.0 0.  Uput UUput } PutCoor
PutBegin  end
 1203
1893 a 1169 1910 a Fb(10)1211 1895 y Fa(+)1203 1893 y
 tx@Dict begin PutEnd  end

1203 1893 a 1203 1706 a
 tx@Dict begin { 5.0 16.63895 7.96227 0.0 0.  Uput UUput } PutCoor
PutBegin  end
 1203 1706 a 1169 1722 a Fb(11)1211
1707 y Fa(+)1203 1706 y
 tx@Dict begin PutEnd  end
 1203 1706 a 1203 1529 a
 tx@Dict begin { 5.0 16.63895 7.96227 0.0 0.  Uput UUput } PutCoor
PutBegin  end
 1203
1529 a 1169 1545 a Fb(12)1211 1530 y Fa(+)1203 1529 y
 tx@Dict begin PutEnd  end

1203 1529 a 1203 1316 a
 tx@Dict begin { 5.0 16.63895 7.96227 0.0 0.  Uput UUput } PutCoor
PutBegin  end
 1203 1316 a 1169 1332 a Fb(13)1211
1317 y Fa(+)1203 1316 y
 tx@Dict begin PutEnd  end
 1203 1316 a 164 2804 a @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  /ArrowA { moveto } def
/ArrowB { } def [ 364.19666 0.0 318.67207 0.0  /Lineto /lineto load
def false Line  gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore
end
 
@endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  /ArrowA { moveto } def
/ArrowB { } def [ 364.19666 11.9501 318.67207 11.9501  /Lineto /lineto
load def false Line  gsave 0.8 SLW 0. setgray 0 setlinecap stroke 
grestore end
 
@endspecial
@beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  /ArrowA { moveto } def
/ArrowB { } def [ 364.19666 20.48645 318.67207 20.48645  /Lineto /lineto
load def false Line  gsave 0.8 SLW 0. setgray 0 setlinecap stroke 
grestore end
 
@endspecial @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  /ArrowA { moveto } def
/ArrowB { } def [ 364.19666 34.14278 318.67207 34.14278  /Lineto /lineto
load def false Line  gsave 0.8 SLW 0. setgray 0 setlinecap stroke 
grestore end
 
@endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  /ArrowA { moveto } def
/ArrowB { } def [ 364.19666 39.26537 318.67207 39.26537  /Lineto /lineto
load def false Line  gsave 0.8 SLW 0. setgray 0 setlinecap stroke 
grestore end
 
@endspecial
@beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  /ArrowA { moveto } def
/ArrowB { } def [ 364.19666 63.16557 318.67207 63.16557  /Lineto /lineto
load def false Line  gsave 0.8 SLW 0. setgray 0 setlinecap stroke 
grestore end
 
@endspecial @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  /ArrowA { moveto } def
/ArrowB { } def [ 364.19666 93.8946 318.67207 93.8946  /Lineto /lineto
load def false Line  gsave 0.8 SLW 0. setgray 0 setlinecap stroke 
grestore end
 
@endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  /ArrowA { moveto } def
/ArrowB { } def [ 364.19666 131.45114 318.67207 131.45114  /Lineto
/lineto load def false Line  gsave 0.8 SLW 0. setgray 0 setlinecap
stroke  grestore end
 
@endspecial
@beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  /ArrowA { moveto } def
/ArrowB { } def [ 364.19666 158.7664 318.67207 158.7664  /Lineto /lineto
load def false Line  gsave 0.8 SLW 0. setgray 0 setlinecap stroke 
grestore end
 
@endspecial @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  /ArrowA { moveto } def
/ArrowB { } def [ 364.19666 190.34856 318.67207 190.34856  /Lineto
/lineto load def false Line  gsave 0.8 SLW 0. setgray 0 setlinecap
stroke  grestore end
 
@endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  /ArrowA { moveto } def
/ArrowB { } def [ 364.19666 221.07758 318.67207 221.07758  /Lineto
/lineto load def false Line  gsave 0.8 SLW 0. setgray 0 setlinecap
stroke  grestore end
 
@endspecial
@beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  /ArrowA { moveto } def
/ArrowB { } def [ 364.19666 329.48293 318.67207 329.48293  /Lineto
/lineto load def false Line  gsave 0.8 SLW 0. setgray 0 setlinecap
stroke  grestore end
 
@endspecial @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  /ArrowA { moveto } def
/ArrowB { } def [ 364.19666 368.7483 318.67207 368.7483  /Lineto /lineto
load def false Line  gsave 0.8 SLW 0. setgray 0 setlinecap stroke 
grestore end
 
@endspecial 1770 2804 a
 tx@Dict begin { 5.0 11.63893 7.96227 0.0 0.  Uput UUput } PutCoor
PutBegin  end
 1770 2804 a 1746
2821 a Fb(1)1767 2806 y Fa(+)1770 2804 y
 tx@Dict begin PutEnd  end
 1770 2804 a
1770 2754 a
 tx@Dict begin { 5.0 11.63893 7.96227 0.0 0.  Uput UUput } PutCoor
PutBegin  end
 1770 2754 a 1746 2771 a Fb(2)1767 2756 y
Fa(+)1770 2754 y
 tx@Dict begin PutEnd  end
 1770 2754 a 1770 2719 a
 tx@Dict begin { 5.0 11.63893 7.96227 0.0 0.  Uput UUput } PutCoor
PutBegin  end
 1770 2719 a
1746 2736 a Fb(4)1767 2721 y Fa(+)1770 2719 y
 tx@Dict begin PutEnd  end
 1770 2719
a 1770 2662 a
 tx@Dict begin { 5.0 11.63893 7.96227 0.0 0.  Uput UUput } PutCoor
PutBegin  end
 1770 2662 a 1746 2679 a Fb(3)1767 2664
y Fa(+)1770 2662 y
 tx@Dict begin PutEnd  end
 1770 2662 a 1770 2620 a
 tx@Dict begin { 5.0 11.63893 7.96227 0.0 0.  Uput UUput } PutCoor
PutBegin  end
 1770 2620
a 1746 2636 a Fb(5)1767 2621 y Fa(+)1770 2620 y
 tx@Dict begin PutEnd  end
 1770
2620 a 1770 2542 a
 tx@Dict begin { 5.0 11.63893 7.96227 0.0 0.  Uput UUput } PutCoor
PutBegin  end
 1770 2542 a 1746 2558 a Fb(6)1767
2543 y Fa(+)1770 2542 y
 tx@Dict begin PutEnd  end
 1770 2542 a 1770 2414 a
 tx@Dict begin { 5.0 11.63893 7.96227 0.0 0.  Uput UUput } PutCoor
PutBegin  end
 1770
2414 a 1746 2431 a Fb(7)1767 2416 y Fa(+)1770 2414 y
 tx@Dict begin PutEnd  end

1770 2414 a 1770 2258 a
 tx@Dict begin { 5.0 11.63893 7.96227 0.0 0.  Uput UUput } PutCoor
PutBegin  end
 1770 2258 a 1746 2275 a Fb(8)1767
2260 y Fa(+)1770 2258 y
 tx@Dict begin PutEnd  end
 1770 2258 a 1770 2145 a
 tx@Dict begin { 5.0 11.63893 7.96227 0.0 0.  Uput UUput } PutCoor
PutBegin  end
 1770
2145 a 1746 2162 a Fb(9)1767 2147 y Fa(+)1770 2145 y
 tx@Dict begin PutEnd  end

1770 2145 a 1770 2014 a
 tx@Dict begin { 5.0 16.63895 7.96227 0.0 0.  Uput UUput } PutCoor
PutBegin  end
 1770 2014 a 1736 2030 a Fb(10)1778
2015 y Fa(+)1770 2014 y
 tx@Dict begin PutEnd  end
 1770 2014 a 1770 1886 a
 tx@Dict begin { 5.0 16.63895 7.96227 0.0 0.  Uput UUput } PutCoor
PutBegin  end
 1770
1886 a 1736 1903 a Fb(11)1778 1888 y Fa(+)1770 1886 y
 tx@Dict begin PutEnd  end

1770 1886 a 1770 1436 a
 tx@Dict begin { 5.0 16.63895 7.96227 0.0 0.  Uput UUput } PutCoor
PutBegin  end
 1770 1436 a 1736 1453 a Fb(12)1778
1438 y Fa(+)1770 1436 y
 tx@Dict begin PutEnd  end
 1770 1436 a 1770 1273 a
 tx@Dict begin { 5.0 16.63895 7.96227 0.0 0.  Uput UUput } PutCoor
PutBegin  end
 1770
1273 a 1736 1290 a Fb(13)1778 1275 y Fa(+)1770 1273 y
 tx@Dict begin PutEnd  end

1770 1273 a 353 2875 a
 tx@Dict begin { 5.0 33.283 8.2 0.0 0.  Uput UUput } PutCoor PutBegin
 end
 353 2875 a 284 2892 a Fc(EXPT)353
2875 y
 tx@Dict begin PutEnd  end
 353 2875 a 920 2875 a
 tx@Dict begin { 5.0 31.15942 8.2 0.0 0.  Uput UUput } PutCoor PutBegin
 end
 920 2875 a 855 2892 a Fc(FULL)920
2875 y
 tx@Dict begin PutEnd  end
 920 2875 a 1468 2875 a
 tx@Dict begin { 5.0 59.8772 8.2 0.0 0.  Uput UUput } PutCoor PutBegin
 end
 1468 2875 a 1344 2892 a
Fc(REDUCED)1468 2875 y
 tx@Dict begin PutEnd  end
 1468 2875 a eop
%%Trailer
end
userdict /end-hook known{end-hook}if
%%EOF
