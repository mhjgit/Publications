%!PS-Adobe-2.0
%%Title: tinbe2.eps
%%Creator: gnuplot 4.0 patchlevel 0
%%CreationDate: Thu Jun  2 15:16:29 2005
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 410
%%Orientation: Portrait
%%Pages: (atend)
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color true def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -46 def
/dl {10.0 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/Rounded false def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/AL { stroke userlinewidth 2 div setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      dup 1 lt {pop 1} if 10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/LTw { PL [] 1 setgray } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/BoxColFill {
  gsave Rec
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor
  fill grestore } def
%
% PostScript Level 1 Pattern Fill routine
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill { gsave /PFa [ 9 2 roll ] def
    PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
    PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
    gsave 1 setgray fill grestore clip
    currentlinewidth 0.5 mul setlinewidth
    /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
    0 0 M PFa 5 get rotate PFs -2 div dup translate
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 M 0 PFs V } for
    0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 2 1 roll M PFs 0 V } for
    } if
    stroke grestore } def
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch {dup 3 get{dup dup 0 get findfont exch 1 get scalefont
     setfont 6 get stringwidth pop add} {pop} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R MFshow } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R MFshow } def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R MFshow } def
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
672 420 M
-63 0 V
4263 0 R
63 0 V
stroke
525 420 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0)]
] -46.7 MRshow
1.000 UL
LTb
672 685 M
-31 0 V
4231 0 R
31 0 V
672 950 M
-63 0 V
4263 0 R
63 0 V
stroke
525 950 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 100)]
] -46.7 MRshow
1.000 UL
LTb
672 1215 M
-31 0 V
4231 0 R
31 0 V
672 1480 M
-63 0 V
4263 0 R
63 0 V
stroke
525 1480 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 200)]
] -46.7 MRshow
1.000 UL
LTb
672 1745 M
-31 0 V
4231 0 R
31 0 V
672 2010 M
-63 0 V
4263 0 R
63 0 V
stroke
525 2010 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 300)]
] -46.7 MRshow
1.000 UL
LTb
672 2275 M
-31 0 V
4231 0 R
31 0 V
672 2540 M
-63 0 V
4263 0 R
63 0 V
stroke
525 2540 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 400)]
] -46.7 MRshow
1.000 UL
LTb
672 2805 M
-31 0 V
4231 0 R
31 0 V
672 3070 M
-63 0 V
4263 0 R
63 0 V
stroke
525 3070 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 500)]
] -46.7 MRshow
1.000 UL
LTb
672 3335 M
-31 0 V
4231 0 R
31 0 V
672 3600 M
-63 0 V
4263 0 R
63 0 V
stroke
525 3600 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 600)]
] -46.7 MRshow
1.000 UL
LTb
672 420 M
0 -31 V
0 3211 R
0 31 V
905 420 M
0 -63 V
0 3243 R
0 63 V
stroke
905 217 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 50)]
] -46.7 MCshow
1.000 UL
LTb
1139 420 M
0 -31 V
0 3211 R
0 31 V
1372 420 M
0 -31 V
0 3211 R
0 31 V
1605 420 M
0 -31 V
0 3211 R
0 31 V
1839 420 M
0 -31 V
0 3211 R
0 31 V
2072 420 M
0 -63 V
0 3243 R
0 63 V
stroke
2072 217 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 60)]
] -46.7 MCshow
1.000 UL
LTb
2305 420 M
0 -31 V
0 3211 R
0 31 V
2539 420 M
0 -31 V
0 3211 R
0 31 V
2772 420 M
0 -31 V
0 3211 R
0 31 V
3005 420 M
0 -31 V
0 3211 R
0 31 V
3239 420 M
0 -63 V
0 3243 R
0 63 V
stroke
3239 217 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 70)]
] -46.7 MCshow
1.000 UL
LTb
3472 420 M
0 -31 V
0 3211 R
0 31 V
3705 420 M
0 -31 V
0 3211 R
0 31 V
3939 420 M
0 -31 V
0 3211 R
0 31 V
4172 420 M
0 -31 V
0 3211 R
0 31 V
4405 420 M
0 -63 V
0 3243 R
0 63 V
stroke
4405 217 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 80)]
] -46.7 MCshow
1.000 UL
LTb
4639 420 M
0 -31 V
0 3211 R
0 31 V
1.000 UL
LTb
672 420 M
4200 0 V
0 3180 V
-4200 0 V
672 420 L
LTb
35 2010 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(helvetica-bold) 240.0 0.0 true true 0 (B\(E2\) \(e)]
[(helvetica-bold) 192.0 120.0 true true 0 (2)]
[(helvetica-bold) 240.0 0.0 true true 0 (fm)]
[(helvetica-bold) 192.0 120.0 true true 0 (4)]
[(helvetica-bold) 240.0 0.0 true true 0 (\))]
] -104.0 MCshow
grestore
LTb
2772 7 M
[ [(helvetica-bold) 240.0 0.0 true true 0 (Neutron number)]
] -80.0 MCshow
1.000 UP
1.000 UP
1.000 UL
LTb
LTb
4221 3467 M
[ [(Helvetica) 140.0 0.0 true true 0 (exp)]
] -46.7 MRshow
LTb
4305 3467 M
399 0 V
-399 31 R
0 -62 V
399 62 R
0 -62 V
1839 2254 M
0 1208 V
1808 2254 M
62 0 V
-62 1208 R
62 0 V
435 -646 R
0 296 V
-31 -296 R
62 0 V
-62 296 R
62 0 V
203 -678 R
0 1060 V
2508 2434 M
62 0 V
-62 1060 R
62 0 V
202 -922 R
0 127 V
-31 -127 R
62 0 V
-62 127 R
62 0 V
202 -148 R
0 169 V
-31 -169 R
62 0 V
-62 169 R
62 0 V
203 -201 R
0 85 V
-31 -85 R
62 0 V
-62 85 R
62 0 V
202 -191 R
0 85 V
-31 -85 R
62 0 V
-62 85 R
62 0 V
202 -361 R
0 85 V
-31 -85 R
62 0 V
-62 85 R
62 0 V
203 -509 R
0 64 V
-31 -64 R
62 0 V
-62 64 R
62 0 V
202 -647 R
0 127 V
-31 -127 R
62 0 V
-62 127 R
62 0 V
4405 611 M
0 106 V
4374 611 M
62 0 V
-62 106 R
62 0 V
1839 2858 CircleF
2305 2964 CircleF
2539 2964 CircleF
2772 2635 CircleF
3005 2635 CircleF
3239 2561 CircleF
3472 2455 CircleF
3705 2180 CircleF
3939 1745 CircleF
4172 1194 CircleF
4405 664 CircleF
4504 3467 CircleF
1.000 UP
3.000 UL
LT8
LTb
4221 3327 M
[ [(Helvetica) 140.0 0.0 true true 0 (t=0)]
] -46.7 MRshow
LT8
4305 3327 M
399 0 V
1139 536 M
233 110 V
233 79 V
234 56 V
233 29 V
233 10 V
234 15 V
233 4 V
233 29 V
234 10 V
233 -10 V
233 -32 V
234 -61 V
233 -92 V
4405 561 L
1139 536 CircleF
1372 646 CircleF
1605 725 CircleF
1839 781 CircleF
2072 810 CircleF
2305 820 CircleF
2539 835 CircleF
2772 839 CircleF
3005 868 CircleF
3239 878 CircleF
3472 868 CircleF
3705 836 CircleF
3939 775 CircleF
4172 683 CircleF
4405 561 CircleF
4504 3327 CircleF
1.000 UP
3.000 UL
LT7
LTb
4221 3187 M
[ [(Helvetica) 140.0 0.0 true true 0 (t=2)]
] -46.7 MRshow
LT7
4305 3187 M
399 0 V
1139 849 M
233 419 V
233 260 V
234 243 V
233 144 V
233 121 V
234 138 V
233 85 V
233 -5 V
234 -80 V
233 -164 V
233 -217 V
234 -292 V
233 -355 V
4405 764 L
1139 849 CircleF
1372 1268 CircleF
1605 1528 CircleF
1839 1771 CircleF
2072 1915 CircleF
2305 2036 CircleF
2539 2174 CircleF
2772 2259 CircleF
3005 2254 CircleF
3239 2174 CircleF
3472 2010 CircleF
3705 1793 CircleF
3939 1501 CircleF
4172 1146 CircleF
4405 764 CircleF
4504 3187 CircleF
1.000 UP
3.000 UL
LT1
LTb
4221 3047 M
[ [(Helvetica) 140.0 0.0 true true 0 (t=4 g9g7d5)]
] -46.7 MRshow
LT1
4305 3047 M
399 0 V
1139 839 M
233 450 V
233 313 V
234 307 V
233 218 V
233 201 V
234 180 V
233 80 V
233 -22 V
234 -95 V
233 -196 V
233 -254 V
234 -340 V
233 -424 V
4405 807 L
1139 839 CircleF
1372 1289 CircleF
1605 1602 CircleF
1839 1909 CircleF
2072 2127 CircleF
2305 2328 CircleF
2539 2508 CircleF
2772 2588 CircleF
3005 2566 CircleF
3239 2471 CircleF
3472 2275 CircleF
3705 2021 CircleF
3939 1681 CircleF
4172 1257 CircleF
4405 807 CircleF
4504 3047 CircleF
1.000 UP
3.000 UL
LT2
LTb
4221 2907 M
[ [(Helvetica) 140.0 0.0 true true 0 (t=4 gds)]
] -46.7 MRshow
LT2
4305 2907 M
399 0 V
1139 908 M
233 508 V
233 350 V
234 334 V
1139 908 CircleF
1372 1416 CircleF
1605 1766 CircleF
1839 2100 CircleF
4504 2907 CircleF
1.000 UP
3.000 UL
LT2
3705 2010 M
234 -355 V
233 -419 V
4405 796 L
3705 2010 CircleF
3939 1655 CircleF
4172 1236 CircleF
4405 796 CircleF
1.000 UL
LTb
672 420 M
4200 0 V
0 3180 V
-4200 0 V
672 420 L
1.000 UP
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: helvetica-bold Helvetica
%%Pages: 1
ld Helvetica
%%Pages: 1
