%!PS-Adobe-2.0
%%Creator: dvips(k) 5.78 Copyright 1998 Radical Eye Software (www.radicaleye.com)
%%Title: read.dvi
%%Pages: 1
%%PageOrder: Ascend
%%BoundingBox: 0 0 596 842
%%EndComments
%DVIPSCommandLine: /local/TEX/bin.linux/dvips -o potp32.ps read.dvi
%DVIPSParameters: dpi=300
%DVIPSSource:  TeX output 2002.03.26:0845
%%BeginProcSet: tex.pro
%!
/TeXDict 300 dict def TeXDict begin /N{def}def /B{bind def}N /S{exch}N
/X{S N}B /TR{translate}N /isls false N /vsize 11 72 mul N /hsize 8.5 72
mul N /landplus90{false}def /@rigin{isls{[0 landplus90{1 -1}{-1 1}
ifelse 0 0 0]concat}if 72 Resolution div 72 VResolution div neg scale
isls{landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div
hsize mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul
TR[matrix currentmatrix{dup dup round sub abs 0.00001 lt{round}if}
forall round exch round exch]setmatrix}N /@landscape{/isls true N}B
/@manualfeed{statusdict /manualfeed true put}B /@copies{/#copies X}B
/FMat[1 0 0 -1 0 0]N /FBB[0 0 0 0]N /nn 0 N /IE 0 N /ctr 0 N /df-tail{
/nn 8 dict N nn begin /FontType 3 N /FontMatrix fntrx N /FontBBox FBB N
string /base X array /BitMaps X /BuildChar{CharBuilder}N /Encoding IE N
end dup{/foo setfont}2 array copy cvx N load 0 nn put /ctr 0 N[}B /df{
/sf 1 N /fntrx FMat N df-tail}B /dfs{div /sf X /fntrx[sf 0 0 sf neg 0 0]
N df-tail}B /E{pop nn dup definefont setfont}B /ch-width{ch-data dup
length 5 sub get}B /ch-height{ch-data dup length 4 sub get}B /ch-xoff{
128 ch-data dup length 3 sub get sub}B /ch-yoff{ch-data dup length 2 sub
get 127 sub}B /ch-dx{ch-data dup length 1 sub get}B /ch-image{ch-data
dup type /stringtype ne{ctr get /ctr ctr 1 add N}if}B /id 0 N /rw 0 N
/rc 0 N /gp 0 N /cp 0 N /G 0 N /sf 0 N /CharBuilder{save 3 1 roll S dup
/base get 2 index get S /BitMaps get S get /ch-data X pop /ctr 0 N ch-dx
0 ch-xoff ch-yoff ch-height sub ch-xoff ch-width add ch-yoff
setcachedevice ch-width ch-height true[1 0 0 -1 -.1 ch-xoff sub ch-yoff
.1 sub]{ch-image}imagemask restore}B /D{/cc X dup type /stringtype ne{]}
if nn /base get cc ctr put nn /BitMaps get S ctr S sf 1 ne{dup dup
length 1 sub dup 2 index S get sf div put}if put /ctr ctr 1 add N}B /I{
cc 1 add D}B /bop{userdict /bop-hook known{bop-hook}if /SI save N @rigin
0 0 moveto /V matrix currentmatrix dup 1 get dup mul exch 0 get dup mul
add .99 lt{/QV}{/RV}ifelse load def pop pop}N /eop{SI restore userdict
/eop-hook known{eop-hook}if showpage}N /@start{userdict /start-hook
known{start-hook}if pop /VResolution X /Resolution X 1000 div /DVImag X
/IE 256 array N 2 string 0 1 255{IE S dup 360 add 36 4 index cvrs cvn
put}for pop 65781.76 div /vsize X 65781.76 div /hsize X}N /p{show}N
/RMat[1 0 0 -1 0 0]N /BDot 260 string N /rulex 0 N /ruley 0 N /v{/ruley
X /rulex X V}B /V{}B /RV statusdict begin /product where{pop false[
(Display)(NeXT)(LaserWriter 16/600)]{dup length product length le{dup
length product exch 0 exch getinterval eq{pop true exit}if}{pop}ifelse}
forall}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale rulex ruley false
RMat{BDot}imagemask grestore}}{{gsave TR -.1 .1 TR rulex ruley scale 1 1
false RMat{BDot}imagemask grestore}}ifelse B /QV{gsave newpath transform
round exch round exch itransform moveto rulex 0 rlineto 0 ruley neg
rlineto rulex neg 0 rlineto fill grestore}B /a{moveto}B /delta 0 N /tail
{dup /delta X 0 rmoveto}B /M{S p delta add tail}B /b{S p tail}B /c{-4 M}
B /d{-3 M}B /e{-2 M}B /f{-1 M}B /g{0 M}B /h{1 M}B /i{2 M}B /j{3 M}B /k{
4 M}B /w{0 rmoveto}B /l{p -4 w}B /m{p -3 w}B /n{p -2 w}B /o{p -1 w}B /q{
p 1 w}B /r{p 2 w}B /s{p 3 w}B /t{p 4 w}B /x{0 S rmoveto}B /y{3 2 roll p
a}B /bos{/SS save N}B /eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: special.pro
%!
TeXDict begin /SDict 200 dict N SDict begin /@SpecialDefaults{/hs 612 N
/vs 792 N /ho 0 N /vo 0 N /hsc 1 N /vsc 1 N /ang 0 N /CLIP 0 N /rwiSeen
false N /rhiSeen false N /letter{}N /note{}N /a4{}N /legal{}N}B
/@scaleunit 100 N /@hscale{@scaleunit div /hsc X}B /@vscale{@scaleunit
div /vsc X}B /@hsize{/hs X /CLIP 1 N}B /@vsize{/vs X /CLIP 1 N}B /@clip{
/CLIP 2 N}B /@hoffset{/ho X}B /@voffset{/vo X}B /@angle{/ang X}B /@rwi{
10 div /rwi X /rwiSeen true N}B /@rhi{10 div /rhi X /rhiSeen true N}B
/@llx{/llx X}B /@lly{/lly X}B /@urx{/urx X}B /@ury{/ury X}B /magscale
true def end /@MacSetUp{userdict /md known{userdict /md get type
/dicttype eq{userdict begin md length 10 add md maxlength ge{/md md dup
length 20 add dict copy def}if end md begin /letter{}N /note{}N /legal{}
N /od{txpose 1 0 mtx defaultmatrix dtransform S atan/pa X newpath
clippath mark{transform{itransform moveto}}{transform{itransform lineto}
}{6 -2 roll transform 6 -2 roll transform 6 -2 roll transform{
itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll curveto}}{{
closepath}}pathforall newpath counttomark array astore /gc xdf pop ct 39
0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}if}N
/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1 -1
scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3 get
ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip yflip
not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub neg 0
TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{noflips{TR
pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop 90 rotate 1
-1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg
TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr 1 get neg
sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr 2 get ppr
0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4 -1 roll add
2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S TR}if}N /cp
{pop pop showpage pm restore}N end}if}if}N /normalscale{Resolution 72
div VResolution 72 div neg scale magscale{DVImag dup scale}if 0 setgray}
N /psfts{S 65781.76 div N}N /startTexFig{/psf$SavedState save N userdict
maxlength dict begin /magscale true def normalscale currentpoint TR
/psf$ury psfts /psf$urx psfts /psf$lly psfts /psf$llx psfts /psf$y psfts
/psf$x psfts currentpoint /psf$cy X /psf$cx X /psf$sx psf$x psf$urx
psf$llx sub div N /psf$sy psf$y psf$ury psf$lly sub div N psf$sx psf$sy
scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub TR
/showpage{}N /erasepage{}N /copypage{}N /p 3 def @MacSetUp}N /doclip{
psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll newpath 4 copy 4 2
roll moveto 6 -1 roll S lineto S lineto S lineto closepath clip newpath
moveto}N /endTexFig{end psf$SavedState restore}N /@beginspecial{SDict
begin /SpecialSave save N gsave normalscale currentpoint TR
@SpecialDefaults count /ocount X /dcount countdictstack N}N /@setspecial
{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto
closepath clip}if ho vo TR hsc vsc scale ang rotate rwiSeen{rwi urx llx
sub div rhiSeen{rhi ury lly sub div}{dup}ifelse scale llx neg lly neg TR
}{rhiSeen{rhi ury lly sub div dup scale llx neg lly neg TR}if}ifelse
CLIP 2 eq{newpath llx lly moveto urx lly lineto urx ury lineto llx ury
lineto closepath clip}if /showpage{}N /erasepage{}N /copypage{}N newpath
}N /@endspecial{count ocount sub{pop}repeat countdictstack dcount sub{
end}repeat grestore SpecialSave restore end}N /@defspecial{SDict begin}
N /@fedspecial{end}B /li{lineto}B /rl{rlineto}B /rc{rcurveto}B /np{
/SaveX currentpoint /SaveY X N 1 setlinecap newpath}N /st{stroke SaveX
SaveY moveto}N /fil{fill SaveX SaveY moveto}N /ellipse{/endangle X
/startangle X /yrad X /xrad X /savematrix matrix currentmatrix N TR xrad
yrad scale 0 0 1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
TeXDict begin @defspecial

 /gnudict 256 dict def gnudict begin /Color false def /Solid false
def /gnulinewidth 5.000 def /userlinewidth gnulinewidth def /vshift
-33 def /dl {10 mul} def /hpt_ 31.5 def /vpt_ 31.5 def /hpt hpt_ def
/vpt vpt_ def /M {moveto} bind def /L {lineto} bind def /R {rmoveto}
bind def /V {rlineto} bind def /vpt2 vpt 2 mul def /hpt2 hpt 2 mul
def /Lshow { currentpoint stroke M   0 vshift R show } def /Rshow {
currentpoint stroke M   dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M   dup stringwidth pop -2 div vshift
R show } def /UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def /DL { Color {setrgbcolor
Solid {pop []} if 0 setdash }  {pop pop pop Solid {pop []} if 0 setdash}
ifelse } def /BL { stroke gnulinewidth 2 mul setlinewidth } def /AL
{ stroke gnulinewidth 2 div setlinewidth } def /UL { gnulinewidth mul
/userlinewidth exch def } def /PL { stroke userlinewidth setlinewidth
} def /LTb { BL [] 0 0 0 DL } def /LTa { AL [1 dl 2 dl] 0 setdash 0
0 0 setrgbcolor } def /LT0 { PL [] 1 0 0 DL } def /LT1 { PL [4 dl 2
dl] 0 1 0 DL } def /LT2 { PL [2 dl 3 dl] 0 0 1 DL } def /LT3 { PL [1
dl 1.5 dl] 1 0 1 DL } def /LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL
} def /LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def /LT6 { PL [2 dl
2 dl 2 dl 4 dl] 0 0 0 DL } def /LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl
4 dl] 1 0.3 0 DL } def /LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl
4 dl] 0.5 0.5 0.5 DL } def /Pnt { stroke [] 0 setdash    gsave 1 setlinecap
M 0 0 V stroke grestore } def /Dia { stroke [] 0 setdash 2 copy vpt
add M   hpt neg vpt neg V hpt vpt neg V   hpt vpt V hpt neg vpt V closepath
stroke   Pnt } def /Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V  
currentpoint stroke M   hpt neg vpt neg R hpt2 0 V stroke   } def /Box
{ stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M   0 vpt2 neg
V hpt2 0 V 0 vpt2 V   hpt2 neg 0 V closepath stroke   Pnt } def /Crs
{ stroke [] 0 setdash exch hpt sub exch vpt add M   hpt2 vpt2 neg V
currentpoint stroke M   hpt2 neg 0 R hpt2 vpt2 V stroke } def /TriU
{ stroke [] 0 setdash 2 copy vpt 1.12 mul add M   hpt neg vpt -1.62
mul V   hpt 2 mul 0 V   hpt neg vpt 1.62 mul V closepath stroke   Pnt
 } def /Star { 2 copy Pls Crs } def /BoxF { stroke [] 0 setdash exch
hpt sub exch vpt add M   0 vpt2 neg V  hpt2 0 V  0 vpt2 V   hpt2 neg
0 V  closepath fill } def /TriUF { stroke [] 0 setdash vpt 1.12 mul
add M   hpt neg vpt -1.62 mul V   hpt 2 mul 0 V   hpt neg vpt 1.62
mul V closepath fill } def /TriD { stroke [] 0 setdash 2 copy vpt 1.12
mul sub M   hpt neg vpt 1.62 mul V   hpt 2 mul 0 V   hpt neg vpt -1.62
mul V closepath stroke   Pnt  } def /TriDF { stroke [] 0 setdash vpt
1.12 mul sub M   hpt neg vpt 1.62 mul V   hpt 2 mul 0 V   hpt neg vpt
-1.62 mul V closepath fill} def /DiaF { stroke [] 0 setdash vpt add
M   hpt neg vpt neg V hpt vpt neg V   hpt vpt V hpt neg vpt V closepath
fill } def /Pent { stroke [] 0 setdash 2 copy gsave   translate 0 hpt
M 4 {72 rotate 0 hpt L} repeat   closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave   translate 0 hpt M 4 {72 rotate
0 hpt L} repeat   closepath fill grestore } def /Circle { stroke []
0 setdash 2 copy   hpt 0 360 arc stroke Pnt } def /CircleF { stroke
[] 0 setdash hpt 0 360 arc fill } def /C0 { BL [] 0 setdash 2 copy
moveto vpt 90 450  arc } bind def /C1 { BL [] 0 setdash 2 copy    
   moveto        2 copy  vpt 0 90 arc closepath fill              
 vpt 0 360 arc closepath } bind def /C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill                vpt 0 360
arc closepath } bind def /C3 { BL [] 0 setdash 2 copy moveto      
 2 copy  vpt 0 180 arc closepath fill                vpt 0 360 arc
closepath } bind def /C4 { BL [] 0 setdash 2 copy moveto        2 copy
 vpt 180 270 arc closepath fill                vpt 0 360 arc closepath
} bind def /C5 { BL [] 0 setdash 2 copy moveto        2 copy  vpt 0
90 arc        2 copy moveto        2 copy  vpt 180 270 arc closepath
fill                vpt 0 360 arc } bind def /C6 { BL [] 0 setdash
2 copy moveto       2 copy  vpt 90 270 arc closepath fill         
     vpt 0 360 arc closepath } bind def /C7 { BL [] 0 setdash 2 copy
moveto       2 copy  vpt 0 270 arc closepath fill               vpt
0 360 arc closepath } bind def /C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill               vpt 0 360
arc closepath } bind def /C9 { BL [] 0 setdash 2 copy moveto      
2 copy  vpt 270 450 arc closepath fill               vpt 0 360 arc
closepath } bind def /C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt
270 360 arc closepath fill        2 copy moveto        2 copy vpt 90
180 arc closepath fill                vpt 0 360 arc closepath } bind
def /C11 { BL [] 0 setdash 2 copy moveto        2 copy  vpt 0 180 arc
closepath fill        2 copy moveto        2 copy  vpt 270 360 arc
closepath fill                vpt 0 360 arc closepath } bind def /C12
{ BL [] 0 setdash 2 copy moveto        2 copy  vpt 180 360 arc closepath
fill                vpt 0 360 arc closepath } bind def /C13 { BL []
0 setdash  2 copy moveto        2 copy  vpt 0 90 arc closepath fill
       2 copy moveto        2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def /C14 { BL [] 0 setdash
2 copy moveto        2 copy  vpt 90 360 arc closepath fill        
       vpt 0 360 arc } bind def /C15 { BL [] 0 setdash 2 copy vpt 0
360 arc closepath fill                vpt 0 360 arc closepath } bind
def /Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def /Square { dup Rec } bind
def /Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def /S0
{ BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def /S2
{ BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare
} bind def /S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt
Rec fill Bsquare } bind def /S4 { BL [] 0 setdash 2 copy exch vpt sub
exch vpt sub vpt Square fill Bsquare } bind def /S5 { BL [] 0 setdash
2 copy 2 copy vpt Square fill        exch vpt sub exch vpt sub vpt
Square fill Bsquare } bind def /S6 { BL [] 0 setdash 2 copy exch vpt
sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def /S7 { BL [] 0
setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill        2
copy vpt Square fill        Bsquare } bind def /S8 { BL [] 0 setdash
2 copy vpt sub vpt Square fill Bsquare } bind def /S9 { BL [] 0 setdash
2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def /S10 { BL [] 0
setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt
Square fill        Bsquare } bind def /S11 { BL [] 0 setdash 2 copy
vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def /S12 { BL [] 0 setdash 2 copy exch vpt sub
exch vpt sub vpt2 vpt Rec fill Bsquare } bind def /S13 { BL [] 0 setdash
2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill        2 copy vpt
Square fill Bsquare } bind def /S14 { BL [] 0 setdash 2 copy exch vpt
sub exch vpt sub vpt2 vpt Rec fill        2 copy exch vpt sub exch
vpt Square fill Bsquare } bind def /S15 { BL [] 0 setdash 2 copy Bsquare
fill Bsquare } bind def /D0 { gsave translate 45 rotate 0 0 S0 stroke
grestore } bind def /D1 { gsave translate 45 rotate 0 0 S1 stroke grestore
} bind def /D2 { gsave translate 45 rotate 0 0 S2 stroke grestore }
bind def /D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind
def /D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def /D6
{ gsave translate 45 rotate 0 0 S6 stroke grestore } bind def /D7 {
gsave translate 45 rotate 0 0 S7 stroke grestore } bind def /D8 { gsave
translate 45 rotate 0 0 S8 stroke grestore } bind def /D9 { gsave translate
45 rotate 0 0 S9 stroke grestore } bind def /D10 { gsave translate
45 rotate 0 0 S10 stroke grestore } bind def /D11 { gsave translate
45 rotate 0 0 S11 stroke grestore } bind def /D12 { gsave translate
45 rotate 0 0 S12 stroke grestore } bind def /D13 { gsave translate
45 rotate 0 0 S13 stroke grestore } bind def /D14 { gsave translate
45 rotate 0 0 S14 stroke grestore } bind def /D15 { gsave translate
45 rotate 0 0 S15 stroke grestore } bind def /DiaE { stroke [] 0 setdash
vpt add M   hpt neg vpt neg V hpt vpt neg V   hpt vpt V hpt neg vpt
V closepath stroke } def /BoxE { stroke [] 0 setdash exch hpt sub exch
vpt add M   0 vpt2 neg V hpt2 0 V 0 vpt2 V   hpt2 neg 0 V closepath
stroke } def /TriUE { stroke [] 0 setdash vpt 1.12 mul add M   hpt
neg vpt -1.62 mul V   hpt 2 mul 0 V   hpt neg vpt 1.62 mul V closepath
stroke } def /TriDE { stroke [] 0 setdash vpt 1.12 mul sub M   hpt
neg vpt 1.62 mul V   hpt 2 mul 0 V   hpt neg vpt -1.62 mul V closepath
stroke } def /PentE { stroke [] 0 setdash gsave   translate 0 hpt M
4 {72 rotate 0 hpt L} repeat   closepath stroke grestore } def /CircE
{ stroke [] 0 setdash   hpt 0 360 arc stroke } def /Opaque { gsave
closepath 1 setgray fill grestore 0 setgray closepath } def /DiaW {
stroke [] 0 setdash vpt add M   hpt neg vpt neg V hpt vpt neg V   hpt
vpt V hpt neg vpt V Opaque stroke } def /BoxW { stroke [] 0 setdash
exch hpt sub exch vpt add M   0 vpt2 neg V hpt2 0 V 0 vpt2 V   hpt2
neg 0 V Opaque stroke } def /TriUW { stroke [] 0 setdash vpt 1.12 mul
add M   hpt neg vpt -1.62 mul V   hpt 2 mul 0 V   hpt neg vpt 1.62
mul V Opaque stroke } def /TriDW { stroke [] 0 setdash vpt 1.12 mul
sub M   hpt neg vpt 1.62 mul V   hpt 2 mul 0 V   hpt neg vpt -1.62
mul V Opaque stroke } def /PentW { stroke [] 0 setdash gsave   translate
0 hpt M 4 {72 rotate 0 hpt L} repeat   Opaque stroke grestore } def
/CircW { stroke [] 0 setdash   hpt 0 360 arc Opaque stroke } def /BoxFill
{ gsave Rec 1 setgray fill grestore } def end
 
@fedspecial end TeXDict begin
39158280 55380996 1000 300 300 (read.dvi) @start
%DVIPSBitmapFont: Fa cmr7 7 1
/Fa 1 51 df<1F0060C06060F070F030603000700070006000C001C00180020004000810
101020207FE0FFE00C137E9211>50 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fb cmmi10 10 5
/Fb 5 115 df<01FFFFF8003C0078003800180038001000380010003800100070001000
700010007008100070080000E0100000E0100000E0300000FFF00001C0200001C0200001
C0200001C020000380404003800040038000800380008007000100070001000700030007
0006000E003E00FFFFFC001D1C7E9B1F>69 D<01FFE0003C000038000038000038000038
0000700000700000700000700000E00000E00000E00000E00001C00001C00001C00001C0
0003800203800203800203800407000407000C0700180700380E00F0FFFFF0171C7E9B1C
>76 D<01FFFF00003C03C0003800E0003800F00038007000380070007000F0007000F000
7000F0007000E000E001E000E003C000E0070000E01E0001FFF00001C0000001C0000001
C0000003800000038000000380000003800000070000000700000007000000070000000F
000000FFE000001C1C7E9B1B>80 D<000FC100303300400F008006018006030006030006
06000406000407000007000007800003F00001FF0000FFC0003FE00003E00000F0000070
0000300000302000302000306000606000606000C0600080F00300CC060083F800181E7E
9C19>83 D<3C3C4E424687470F8E1E8E0C0E000E001C001C001C001C0038003800380038
007000300010127E9113>114 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fc cmr10 10 24
/Fc 24 120 df<FFE0FFE00B0280890E>45 D<60F0F06004047C830C>I<03C00C301818
300C300C700E60066006E007E007E007E007E007E007E007E007E007E007E007E007E007
60066006700E300C300C18180C3007E0101D7E9B15>48 D<010007003F00C70007000700
070007000700070007000700070007000700070007000700070007000700070007000700
070007000700FFF80D1C7C9B15>I<07C01830201C400C400EF00FF80FF807F807700700
0F000E000E001C001C00380070006000C00180030006010C01180110023FFE7FFEFFFE10
1C7E9B15>I<07E01830201C201C781E780E781E381E001C001C00180030006007C00030
001C001C000E000F000F700FF80FF80FF80FF00E401C201C183007C0101D7E9B15>I<00
0C00000C00001C00003C00003C00005C0000DC00009C00011C00031C00021C00041C000C
1C00081C00101C00301C00201C00401C00C01C00FFFFC0001C00001C00001C00001C0000
1C00001C00001C0001FFC0121C7F9B15>I<300C3FF83FF03FC020002000200020002000
200023E02C303018301C200E000E000F000F000F600FF00FF00FF00F800E401E401C2038
187007C0101D7E9B15>I<00F0030C04040C0E181E301E300C700070006000E3E0E430E8
18F00CF00EE006E007E007E007E007E007600760077006300E300C18180C3003E0101D7E
9B15>I<03E00C301008200C200660066006700670067C0C3E183FB01FE007F007F818FC
307E601E600FC007C003C003C003C00360026004300C1C1007E0101D7E9B15>56
D<FF8000FF800F8000F8000F8000F8000BC00178000BC00178000BC001780009E0027800
09E002780008F004780008F004780008F004780008780878000878087800087808780008
3C107800083C107800083C107800081E207800081E207800081E207800080F407800080F
40780008078078000807807800080780780008030078001C03007800FF8307FF80211C7E
9B26>77 D<FFE00FF01F0003C01F0001800F0001000F000100078002000780020007C002
0003C0040003C0040003E00C0001E0080001E0080000F0100000F0100000F81000007820
0000782000003C4000003C4000003C4000001E8000001E8000001F8000000F0000000F00
000006000000060000000600001C1D7F9B1F>86 D<FEFEC0C0C0C0C0C0C0C0C0C0C0C0C0
C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0FEFE07297C9E0C>91
D<FEFE060606060606060606060606060606060606060606060606060606060606060606
06060606FEFE0729809E0C>93 D<07E00C301818300C700E6006E006FFFEE000E000E000
E00060007002300218040C1803E00F127F9112>101 D<00F8018C071E061E0E0C0E000E
000E000E000E000E00FFE00E000E000E000E000E000E000E000E000E000E000E000E000E
000E000E000E007FE00F1D809C0D>I<FC00001C00001C00001C00001C00001C00001C00
001C00001C00001C00001C00001C7C001C87001D03001E03801C03801C03801C03801C03
801C03801C03801C03801C03801C03801C03801C03801C03801C0380FF9FF0141D7F9C17
>104 D<18003C003C0018000000000000000000000000000000FC001C001C001C001C00
1C001C001C001C001C001C001C001C001C001C001C001C00FF80091D7F9C0C>I<FC7E07
E0001C838838001D019018001E01E01C001C01C01C001C01C01C001C01C01C001C01C01C
001C01C01C001C01C01C001C01C01C001C01C01C001C01C01C001C01C01C001C01C01C00
1C01C01C001C01C01C00FF8FF8FF8021127F9124>109 D<03F0000E1C00180600300300
700380600180E001C0E001C0E001C0E001C0E001C0E001C0600180700380300300180600
0E1C0003F00012127F9115>111 D<FCE01D381E781E781C301C001C001C001C001C001C
001C001C001C001C001C001C00FFC00D127F9110>114 D<04000400040004000C000C00
1C003C00FFE01C001C001C001C001C001C001C001C001C001C101C101C101C101C100C10
0E2003C00C1A7F9910>116 D<FC1F801C03801C03801C03801C03801C03801C03801C03
801C03801C03801C03801C03801C03801C03801C07800C07800E1B8003E3F014127F9117
>I<FF3FC7E03C0703C01C0701801C0701001C0B01000E0B82000E0B82000E1182000711
C4000711C4000720C40003A0E80003A0E80003C0680001C0700001C07000018030000080
20001B127F911E>119 D E
%EndDVIPSBitmapFont
end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 300dpi
TeXDict begin
%%PaperSize: a4

%%EndSetup
%%Page: 1 1
1 0 bop 262 1807 a @beginspecial @setspecial
 gnudict begin gsave 0 0 translate 0.100 0.100 scale 0 setgray newpath
1.000 UL LTb 450 300 M 63 0 V 2937 0 R -63 0 V 450 551 M 63 0 V 2937
0 R -63 0 V 450 803 M 63 0 V 2937 0 R -63 0 V 450 1054 M 63 0 V 2937
0 R -63 0 V 450 1306 M 63 0 V 2937 0 R -63 0 V 450 1557 M 63 0 V 2937
0 R -63 0 V 450 1809 M 63 0 V 2937 0 R -63 0 V 450 2060 M 63 0 V 2937
0 R -63 0 V 750 300 M 0 63 V 0 1697 R 0 -63 V 1350 300 M 0 63 V 0 1697
R 0 -63 V 1950 300 M 0 63 V 0 1697 R 0 -63 V 2550 300 M 0 63 V 0 1697
R 0 -63 V 3150 300 M 0 63 V 0 1697 R 0 -63 V 1.000 UL LTb 450 300 M
3000 0 V 0 1760 V -3000 0 V 450 300 L 1.000 UL LT0 3087 1947 M 263
0 V 450 1074 M 504 970 L 562 870 L 58 -90 V 59 -80 V 58 -70 V 59 -60
V 58 -52 V 59 -43 V 58 -36 V 59 -28 V 58 -23 V 58 -17 V 57 -12 V 58
-7 V 56 -4 V 57 -2 V 55 2 V 56 3 V 54 5 V 54 6 V 53 7 V 52 7 V 52 8
V 50 8 V 50 8 V 48 8 V 48 8 V 46 7 V 46 7 V 44 7 V 43 6 V 41 6 V 41
6 V 38 5 V 38 5 V 36 4 V 35 4 V 33 4 V 32 3 V 30 3 V 28 3 V 27 3 V
25 2 V 24 2 V 22 2 V 20 1 V 19 2 V 16 1 V 15 1 V 13 1 V 12 1 V 9 1
V 8 0 V 6 1 V 4 0 V 2 0 V 2 0 V 2 1 V 4 0 V 6 0 V 8 1 V 9 0 V 12 1
V 13 1 V 15 1 V 16 1 V 19 1 V 20 1 V 22 1 V 24 2 V 25 1 V 27 1 V 28
1 V 30 2 V 32 1 V 33 1 V 35 2 V 36 1 V 38 1 V 38 1 V 41 1 V 41 1 V
43 2 V 44 1 V 46 0 V 42 1 V 1.000 UL LT1 3087 1847 M 263 0 V 450 2009
M 54 -142 V 58 -141 V 58 -131 V 59 -122 V 58 -112 V 59 -102 V 58 -92
V 59 -84 V 58 -75 V 59 -67 V 58 -59 V 58 -51 V 57 -46 V 58 -39 V 56
-34 V 57 -29 V 55 -25 V 56 -21 V 54 -18 V 54 -15 V 53 -12 V 52 -11
V 52 -8 V 50 -7 V 50 -6 V 48 -5 V 48 -3 V 46 -3 V 46 -3 V 44 -2 V 43
-1 V 41 -1 V 41 -1 V 38 -1 V 38 -1 V 36 0 V 35 0 V 33 -1 V 32 0 V 30
0 V 28 0 V 27 0 V 25 0 V 24 0 V 22 0 V 20 0 V 19 0 V 16 0 V 15 0 V
13 0 V 12 0 V 9 0 V 8 0 V 6 0 V 4 0 V 2 0 V 2 0 V 2 0 V 4 0 V 6 0 V
8 0 V 9 0 V 12 0 V 13 0 V 15 0 V 16 0 V 19 1 V 20 0 V 22 0 V 24 0 V
25 0 V 27 0 V 28 0 V 30 0 V 32 0 V 33 0 V 35 0 V 36 1 V 38 0 V 38 0
V 41 0 V 41 0 V 43 0 V 44 0 V 46 0 V 42 0 V stroke grestore end showpage
 
@endspecial
987 1049 a Fc(3)p Fb(P)1035 1055 y Fa(2)1067 1049 y Fc(for)14
b(V18)f(without)h Fb(LS)i Fc(term)1311 1007 y(3)p Fb(P)1359
1013 y Fa(2)1391 1007 y Fc(for)d(V18)1022 1797 y Fb(r)i
Fc([fm])303 1316 y
 gsave currentpoint currentpoint translate 270 rotate neg exch neg
exch translate
 303 1316 a -79 w Fb(E)h Fc([MeV])303
1316 y
 currentpoint grestore moveto
 303 1316 a 1547 1737 a Fc(1.4)-304 b(1.2)-287
b(1)f(0.8)-304 b(0.6)366 962 y(600)366 1067 y(500)366
1172 y(400)366 1277 y(300)366 1382 y(200)366 1486 y(100)407
1591 y(0)352 1696 y(-100)p eop
%%Trailer
end
userdict /end-hook known{end-hook}if
%%EOF
