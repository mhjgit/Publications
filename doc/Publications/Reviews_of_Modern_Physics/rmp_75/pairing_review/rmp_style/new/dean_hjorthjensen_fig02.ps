%!PS-Adobe-2.0
%%Creator: dvipsk 5.86 p1.5d Copyright 1996-2001 ASCII Corp.(www-ptex@ascii.co.jp)
%%based on dvipsk 5.86 Copyright 1999 Radical Eye Software (www.radicaleye.com)
%%Title: read.dvi
%%Pages: 1
%%PageOrder: Ascend
%%BoundingBox: 0 0 596 842
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips -o pots10.ps read.dvi
%DVIPSParameters: dpi=600, compressed
%DVIPSSource:  TeX output 2002.04.07:2240
%%BeginProcSet: texc.pro
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/id 0 N/rw 0 N/rc 0 N/gp 0 N/cp 0 N/G 0 N/CharBuilder{save 3
1 roll S A/base get 2 index get S/BitMaps get S get/Cd X pop/ctr 0 N Cdx
0 Cx Cy Ch sub Cx Cw add Cy setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx
sub Cy .1 sub]/id Ci N/rw Cw 7 add 8 idiv string N/rc 0 N/gp 0 N/cp 0 N{
rc 0 ne{rc 1 sub/rc X rw}{G}ifelse}imagemask restore}B/G{{id gp get/gp
gp 1 add N A 18 mod S 18 idiv pl S get exec}loop}B/adv{cp add/cp X}B
/chg{rw cp id gp 4 index getinterval putinterval A gp add/gp X adv}B/nd{
/cp 0 N rw exit}B/lsh{rw cp 2 copy get A 0 eq{pop 1}{A 255 eq{pop 254}{
A A add 255 and S 1 and or}ifelse}ifelse put 1 adv}B/rsh{rw cp 2 copy
get A 0 eq{pop 128}{A 255 eq{pop 127}{A 2 idiv S 128 and or}ifelse}
ifelse put 1 adv}B/clr{rw cp 2 index string putinterval adv}B/set{rw cp
fillstr 0 4 index getinterval putinterval adv}B/fillstr 18 string 0 1 17
{2 copy 255 put pop}for N/pl[{adv 1 chg}{adv 1 chg nd}{1 add chg}{1 add
chg nd}{adv lsh}{adv lsh nd}{adv rsh}{adv rsh nd}{1 add adv}{/rc X nd}{
1 add set}{1 add clr}{adv 2 chg}{adv 2 chg nd}{pop nd}]A{bind pop}
forall N/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/dir 0 def/dyy{/dir 0 def}B/dyt{/dir 1 def}B/dty{/dir 2 def}B/dtt{/dir 3
def}B/p{dir 2 eq{-90 rotate show 90 rotate}{dir 3 eq{-90 rotate show 90
rotate}{show}ifelse}ifelse}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0
N/Ry 0 N/V{}B/RV/v{/Ry X/Rx X V}B statusdict begin/product where{pop
false[(Display)(NeXT)(LaserWriter 16/600)]{A length product length le{A
length product exch 0 exch getinterval eq{pop true exit}if}{pop}ifelse}
forall}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{
BDot}imagemask grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat
{BDot}imagemask grestore}}ifelse B/QV{gsave newpath transform round exch
round exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0
rlineto fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B
/M{S p delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}
B/g{0 M}B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p
-3 w}B/n{p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{
0 S rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: special.pro
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/copypage{}N/p 3 def @MacSetUp}N/doclip{
psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll newpath 4 copy 4 2
roll moveto 6 -1 roll S lineto S lineto S lineto closepath clip newpath
moveto}N/endTexFig{end psf$SavedState restore}N/@beginspecial{SDict
begin/SpecialSave save N gsave normalscale currentpoint TR
@SpecialDefaults count/ocount X/dcount countdictstack N}N/@setspecial{
CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto
closepath clip}if ho vo TR hsc vsc scale ang rotate rwiSeen{rwi urx llx
sub div rhiSeen{rhi ury lly sub div}{dup}ifelse scale llx neg lly neg TR
}{rhiSeen{rhi ury lly sub div dup scale llx neg lly neg TR}if}ifelse
CLIP 2 eq{newpath llx lly moveto urx lly lineto urx ury lineto llx ury
lineto closepath clip}if/showpage{}N/erasepage{}N/copypage{}N newpath}N
/@endspecial{count ocount sub{pop}repeat countdictstack dcount sub{end}
repeat grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
TeXDict begin @defspecial

 /gnudict 256 dict def gnudict begin /Color false def /Solid false
def /gnulinewidth 5.000 def /userlinewidth gnulinewidth def /vshift
-33 def /dl {10 mul} def /hpt_ 31.5 def /vpt_ 31.5 def /hpt hpt_ def
/vpt vpt_ def /M {moveto} bind def /L {lineto} bind def /R {rmoveto}
bind def /V {rlineto} bind def /vpt2 vpt 2 mul def /hpt2 hpt 2 mul
def /Lshow { currentpoint stroke M   0 vshift R show } def /Rshow {
currentpoint stroke M   dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M   dup stringwidth pop -2 div vshift
R show } def /UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def /DL { Color {setrgbcolor
Solid {pop []} if 0 setdash }  {pop pop pop Solid {pop []} if 0 setdash}
ifelse } def /BL { stroke gnulinewidth 2 mul setlinewidth } def /AL
{ stroke gnulinewidth 2 div setlinewidth } def /UL { gnulinewidth mul
/userlinewidth exch def } def /PL { stroke userlinewidth setlinewidth
} def /LTb { BL [] 0 0 0 DL } def /LTa { AL [1 dl 2 dl] 0 setdash 0
0 0 setrgbcolor } def /LT0 { PL [] 1 0 0 DL } def /LT1 { PL [4 dl 2
dl] 0 1 0 DL } def /LT2 { PL [2 dl 3 dl] 0 0 1 DL } def /LT3 { PL [1
dl 1.5 dl] 1 0 1 DL } def /LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL
} def /LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def /LT6 { PL [2 dl
2 dl 2 dl 4 dl] 0 0 0 DL } def /LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl
4 dl] 1 0.3 0 DL } def /LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl
4 dl] 0.5 0.5 0.5 DL } def /Pnt { stroke [] 0 setdash    gsave 1 setlinecap
M 0 0 V stroke grestore } def /Dia { stroke [] 0 setdash 2 copy vpt
add M   hpt neg vpt neg V hpt vpt neg V   hpt vpt V hpt neg vpt V closepath
stroke   Pnt } def /Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V  
currentpoint stroke M   hpt neg vpt neg R hpt2 0 V stroke   } def /Box
{ stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M   0 vpt2 neg
V hpt2 0 V 0 vpt2 V   hpt2 neg 0 V closepath stroke   Pnt } def /Crs
{ stroke [] 0 setdash exch hpt sub exch vpt add M   hpt2 vpt2 neg V
currentpoint stroke M   hpt2 neg 0 R hpt2 vpt2 V stroke } def /TriU
{ stroke [] 0 setdash 2 copy vpt 1.12 mul add M   hpt neg vpt -1.62
mul V   hpt 2 mul 0 V   hpt neg vpt 1.62 mul V closepath stroke   Pnt
 } def /Star { 2 copy Pls Crs } def /BoxF { stroke [] 0 setdash exch
hpt sub exch vpt add M   0 vpt2 neg V  hpt2 0 V  0 vpt2 V   hpt2 neg
0 V  closepath fill } def /TriUF { stroke [] 0 setdash vpt 1.12 mul
add M   hpt neg vpt -1.62 mul V   hpt 2 mul 0 V   hpt neg vpt 1.62
mul V closepath fill } def /TriD { stroke [] 0 setdash 2 copy vpt 1.12
mul sub M   hpt neg vpt 1.62 mul V   hpt 2 mul 0 V   hpt neg vpt -1.62
mul V closepath stroke   Pnt  } def /TriDF { stroke [] 0 setdash vpt
1.12 mul sub M   hpt neg vpt 1.62 mul V   hpt 2 mul 0 V   hpt neg vpt
-1.62 mul V closepath fill} def /DiaF { stroke [] 0 setdash vpt add
M   hpt neg vpt neg V hpt vpt neg V   hpt vpt V hpt neg vpt V closepath
fill } def /Pent { stroke [] 0 setdash 2 copy gsave   translate 0 hpt
M 4 {72 rotate 0 hpt L} repeat   closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave   translate 0 hpt M 4 {72 rotate
0 hpt L} repeat   closepath fill grestore } def /Circle { stroke []
0 setdash 2 copy   hpt 0 360 arc stroke Pnt } def /CircleF { stroke
[] 0 setdash hpt 0 360 arc fill } def /C0 { BL [] 0 setdash 2 copy
moveto vpt 90 450  arc } bind def /C1 { BL [] 0 setdash 2 copy    
   moveto        2 copy  vpt 0 90 arc closepath fill              
 vpt 0 360 arc closepath } bind def /C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill                vpt 0 360
arc closepath } bind def /C3 { BL [] 0 setdash 2 copy moveto      
 2 copy  vpt 0 180 arc closepath fill                vpt 0 360 arc
closepath } bind def /C4 { BL [] 0 setdash 2 copy moveto        2 copy
 vpt 180 270 arc closepath fill                vpt 0 360 arc closepath
} bind def /C5 { BL [] 0 setdash 2 copy moveto        2 copy  vpt 0
90 arc        2 copy moveto        2 copy  vpt 180 270 arc closepath
fill                vpt 0 360 arc } bind def /C6 { BL [] 0 setdash
2 copy moveto       2 copy  vpt 90 270 arc closepath fill         
     vpt 0 360 arc closepath } bind def /C7 { BL [] 0 setdash 2 copy
moveto       2 copy  vpt 0 270 arc closepath fill               vpt
0 360 arc closepath } bind def /C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill               vpt 0 360
arc closepath } bind def /C9 { BL [] 0 setdash 2 copy moveto      
2 copy  vpt 270 450 arc closepath fill               vpt 0 360 arc
closepath } bind def /C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt
270 360 arc closepath fill        2 copy moveto        2 copy vpt 90
180 arc closepath fill                vpt 0 360 arc closepath } bind
def /C11 { BL [] 0 setdash 2 copy moveto        2 copy  vpt 0 180 arc
closepath fill        2 copy moveto        2 copy  vpt 270 360 arc
closepath fill                vpt 0 360 arc closepath } bind def /C12
{ BL [] 0 setdash 2 copy moveto        2 copy  vpt 180 360 arc closepath
fill                vpt 0 360 arc closepath } bind def /C13 { BL []
0 setdash  2 copy moveto        2 copy  vpt 0 90 arc closepath fill
       2 copy moveto        2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def /C14 { BL [] 0 setdash
2 copy moveto        2 copy  vpt 90 360 arc closepath fill        
       vpt 0 360 arc } bind def /C15 { BL [] 0 setdash 2 copy vpt 0
360 arc closepath fill                vpt 0 360 arc closepath } bind
def /Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def /Square { dup Rec } bind
def /Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def /S0
{ BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def /S2
{ BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare
} bind def /S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt
Rec fill Bsquare } bind def /S4 { BL [] 0 setdash 2 copy exch vpt sub
exch vpt sub vpt Square fill Bsquare } bind def /S5 { BL [] 0 setdash
2 copy 2 copy vpt Square fill        exch vpt sub exch vpt sub vpt
Square fill Bsquare } bind def /S6 { BL [] 0 setdash 2 copy exch vpt
sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def /S7 { BL [] 0
setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill        2
copy vpt Square fill        Bsquare } bind def /S8 { BL [] 0 setdash
2 copy vpt sub vpt Square fill Bsquare } bind def /S9 { BL [] 0 setdash
2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def /S10 { BL [] 0
setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt
Square fill        Bsquare } bind def /S11 { BL [] 0 setdash 2 copy
vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def /S12 { BL [] 0 setdash 2 copy exch vpt sub
exch vpt sub vpt2 vpt Rec fill Bsquare } bind def /S13 { BL [] 0 setdash
2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill        2 copy vpt
Square fill Bsquare } bind def /S14 { BL [] 0 setdash 2 copy exch vpt
sub exch vpt sub vpt2 vpt Rec fill        2 copy exch vpt sub exch
vpt Square fill Bsquare } bind def /S15 { BL [] 0 setdash 2 copy Bsquare
fill Bsquare } bind def /D0 { gsave translate 45 rotate 0 0 S0 stroke
grestore } bind def /D1 { gsave translate 45 rotate 0 0 S1 stroke grestore
} bind def /D2 { gsave translate 45 rotate 0 0 S2 stroke grestore }
bind def /D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind
def /D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def /D6
{ gsave translate 45 rotate 0 0 S6 stroke grestore } bind def /D7 {
gsave translate 45 rotate 0 0 S7 stroke grestore } bind def /D8 { gsave
translate 45 rotate 0 0 S8 stroke grestore } bind def /D9 { gsave translate
45 rotate 0 0 S9 stroke grestore } bind def /D10 { gsave translate
45 rotate 0 0 S10 stroke grestore } bind def /D11 { gsave translate
45 rotate 0 0 S11 stroke grestore } bind def /D12 { gsave translate
45 rotate 0 0 S12 stroke grestore } bind def /D13 { gsave translate
45 rotate 0 0 S13 stroke grestore } bind def /D14 { gsave translate
45 rotate 0 0 S14 stroke grestore } bind def /D15 { gsave translate
45 rotate 0 0 S15 stroke grestore } bind def /DiaE { stroke [] 0 setdash
vpt add M   hpt neg vpt neg V hpt vpt neg V   hpt vpt V hpt neg vpt
V closepath stroke } def /BoxE { stroke [] 0 setdash exch hpt sub exch
vpt add M   0 vpt2 neg V hpt2 0 V 0 vpt2 V   hpt2 neg 0 V closepath
stroke } def /TriUE { stroke [] 0 setdash vpt 1.12 mul add M   hpt
neg vpt -1.62 mul V   hpt 2 mul 0 V   hpt neg vpt 1.62 mul V closepath
stroke } def /TriDE { stroke [] 0 setdash vpt 1.12 mul sub M   hpt
neg vpt 1.62 mul V   hpt 2 mul 0 V   hpt neg vpt -1.62 mul V closepath
stroke } def /PentE { stroke [] 0 setdash gsave   translate 0 hpt M
4 {72 rotate 0 hpt L} repeat   closepath stroke grestore } def /CircE
{ stroke [] 0 setdash   hpt 0 360 arc stroke } def /Opaque { gsave
closepath 1 setgray fill grestore 0 setgray closepath } def /DiaW {
stroke [] 0 setdash vpt add M   hpt neg vpt neg V hpt vpt neg V   hpt
vpt V hpt neg vpt V Opaque stroke } def /BoxW { stroke [] 0 setdash
exch hpt sub exch vpt add M   0 vpt2 neg V hpt2 0 V 0 vpt2 V   hpt2
neg 0 V Opaque stroke } def /TriUW { stroke [] 0 setdash vpt 1.12 mul
add M   hpt neg vpt -1.62 mul V   hpt 2 mul 0 V   hpt neg vpt 1.62
mul V Opaque stroke } def /TriDW { stroke [] 0 setdash vpt 1.12 mul
sub M   hpt neg vpt 1.62 mul V   hpt 2 mul 0 V   hpt neg vpt -1.62
mul V Opaque stroke } def /PentW { stroke [] 0 setdash gsave   translate
0 hpt M 4 {72 rotate 0 hpt L} repeat   Opaque stroke grestore } def
/CircW { stroke [] 0 setdash   hpt 0 360 arc Opaque stroke } def /BoxFill
{ gsave Rec 1 setgray fill grestore } def end
 
@fedspecial end TeXDict begin
39158280 55380996 1000 600 600 (read.dvi) @start
%DVIPSBitmapFont: Fa cmr10 10 19
/Fa 19 115 df<B512FCA516057F941C> 45 D<121C127FEAFF80A5EA7F00121C090979
8817> I<EB03F8EB1FFF90387E0FC09038F803E03901E000F0484813780007147C48487F
A248C77EA2481580A3007EEC0FC0A600FE15E0B3007E15C0A4007F141F6C1580A36C1500
6D5B000F143EA26C6C5B6C6C5B6C6C485A6C6C485A90387E0FC0D91FFFC7FCEB03F8233A
7DB72A> 48 D<EB01C013031307131F13FFB5FCA2131F1200B3B3A8497E007FB512F0A3
1C3879B72A> I<EB0FF0EB7FFE48B57E3903E03FE0390F000FF0000E6D7E486D7E486D7E
123000706D7E126012FCB4EC7F807FA56CC7FC121CC8FCEDFF00A34A5A5D14035D4A5A5D
140F4A5A4A5A92C7FC147C5C495A495A495A495A91C8FC011EEB01805B5B491303484814
00485A485A000EC75A000FB6FC5A5A485CB6FCA321387CB72A> I<EB07F8EB3FFF4913C0
3901F80FF03903C007F848486C7E380E0001000F80381FE0006D7FA56C5A6C5AC85A1401
A25D4A5AA24A5A5DEC0F80027EC7FCEB1FFCECFF809038000FE06E7EEC01FC816E7EED7F
80A216C0A2153F16E0A2121EEA7F80487EA416C049137F007F1580007EC7FC0070ECFF00
6C495A121E390F8003F83907F00FF00001B512C06C6C90C7FCEB0FF8233A7DB72A> I<15
38A2157815F8A2140114031407A2140F141F141B14331473146314C313011483EB030313
071306130C131C131813301370136013C01201EA038013005A120E120C5A123812305A12
E0B712F8A3C73803F800AB4A7E0103B512F8A325397EB82A> I<0006140CD80780133C90
38F003F890B5FC5D5D158092C7FC14FC38067FE090C9FCABEB07F8EB3FFE9038780F8039
07E007E090388003F0496C7E12066E7EC87EA28181A21680A4123E127F487EA490C71300
485C12E000605C12700030495A00385C6C1303001E495A6C6C485A3907E03F800001B5C7
FC38007FFCEB1FE0213A7CB72A> I<EC3FC0903801FFF0010713FC90380FE03E90383F80
0790387E001F49EB3F804848137F485AA2485A000FEC3F0049131E001F91C7FCA2485AA3
127F90C9FCEB01FC903807FF8039FF1E07E090383801F0496C7E01607F01E0137E497FA2
49148016C0151FA290C713E0A57EA56C7E16C0A2121FED3F807F000F15006C6C5B15FE6C
6C5B6C6C485A3900FE07F090383FFFC06D90C7FCEB03FC233A7DB72A> I<EB03F8EB1FFF
017F13C09038FC07F03901E001F848486C7E4848137C90C77E48141E000E141F001E80A3
121FA27F5D01E0131E6C6C133E01FC133C6D5B6C6C6C5AECC1E06CEBF3C06C01FFC7FC6C
5BEB3FFF6D13C081017F13F801F07F3903E07FFE3907801FFF48486C1380481303003E6D
13C0003CEB007F007C143F0078EC0FE000F814075A1503A21501A36C15C012781503007C
15806CEC07006C5C6C6C131ED807E0137C3903F803F0C6B55A013F1380D907FCC7FC233A
7DB72A> 56 D<B5933807FFF86E5DA20001F0FC002600DFC0ED1BF8A2D9CFE01533A3D9
C7F01563A3D9C3F815C3A2D9C1FCEC0183A3D9C0FEEC0303A2027F1406A36E6C130CA36E
6C1318A26E6C1330A36E6C1360A26E6C13C0A3913901FC0180A3913900FE0300A2ED7F06
A3ED3F8CA2ED1FD8A3ED0FF0A3486C6D5A487ED80FFC6D48497EB500C00203B512F8A2ED
018045397DB84C> 77 D<B500FC91387FFF80A30003018091380FFC006C90C8EA07E071
5A6C705A6E1403017F93C7FCA280013F1506A26E140E011F150C80010F5DA28001075DA2
6E147001031560A26D6C5CA2806D4A5AA2ED8003027F91C8FCA291383FC006A215E0021F
5BA2EDF01C020F1318A26E6C5AA215FC02035BA2EDFEE002015BA26E6C5AA36FC9FCA315
3EA2151CA3393B7EB83E> 86 D<EAFFF8A4EAF000B3B3B3B3A3EAFFF8A40D5378BD17>
91 D<EAFFF8A4EA0078B3B3B3B3A3EAFFF8A40D537FBD17> 93 D<EB07F8EB1FFF90387C
0FC03901F803E03903F001F0D807E013F8380FC0004848137CA248C7127E153E5A153F12
7E12FEA3B7FCA248C8FCA5127EA2127FA26C14037F001F14076C6C13060007140E6D131C
D801F013386C6C137090387E03E090381FFF80903803FC0020277EA525> 101
D<147E903803FF8090380FC1E0EB1F8790383F0FF0137EA213FCA23901F803C091C7FCAD
B512FCA3D801F8C7FCB3AB487E387FFFF8A31C3B7FBA19> I<2703F00FF0EB1FE000FFD9
3FFCEB7FF8913AF03F01E07E903BF1C01F83803F3D0FF3800FC7001F802603F70013CE01
FE14DC49D907F8EB0FC0A2495CA3495CB3A3486C496CEB1FE0B500C1B50083B5FCA34025
7EA445> 109 D<EB03FE90380FFF8090383E03E09038F800F84848137C48487F48487F48
48EB0F80001F15C090C712074815E0A2007EEC03F0A400FE15F8A9007E15F0A2007F1407
6C15E0A26C6CEB0FC0000F15806D131F6C6CEB3F006C6C137EC66C13F890387E03F09038
1FFFC0D903FEC7FC25277EA52A> 111 D<3807E01F00FFEB7FC09038E1E3E09038E387F0
380FE707EA03E613EE9038EC03E09038FC0080491300A45BB3A2487EB512F0A31C257EA4
21> 114 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fb cmmi10 10 3
/Fb 3 115 df<0103B812F05BA290260007F8C7123F4B1407F003E0020F150118005DA2
141FA25D19C0143FA24B1330A2027F1470190092C7126017E05C16014A495A160F49B6FC
A25F9138FC000F01031407A24A6DC8FCA201075C18034A130660010F160693C7FC4A150E
180C011F161C18184A1538A2013F5E18F04A4A5AA2017F15074D5A91C8123F49913803FF
80B9FCA295C7FC3C397DB83D> 69 D<92391FE00380DBFFFC130002036D5A91390FE01F
8F91393F0007DF027EEB01FE02F81300495A4948147E177C4948143C495AA2011F153891
C8FCA3491530A28094C7FC80806D7E14FEECFFE06D13FE6DEBFFC06D14F06D806D80021F
7F02037FEC003F03037F1500167F163F161FA3120C160FA2001C151F94C7FCA3003C153E
A25E003E5D127E007F4A5A6D495A6DEB0FC0D8F9F0495AD8F0FE01FEC8FC39E03FFFF801
0F13E0D8C00190C9FC313D7CBA33> 83 D<3903E001F83907F807FE390E3C1E07391C3E
381F3A183F703F800038EBE07F0030EBC0FF00705B00601500EC007E153CD8E07F90C7FC
EAC07EA2120013FE5BA312015BA312035BA312075BA3120F5BA3121F5B0007C9FC21267E
A425> 114 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fc cmr7 7 3
/Fc 3 57 df<EB3F803801FFF03803E0F83807803C48487E001E7F003E1480A2003C1307
007C14C0A400FC14E0AE007C14C0A36CEB0F80A36CEB1F006C131E6C6C5A3803E0F86CB4
5A38003F801B277EA521> 48 D<13381378EA01F8121F12FE12E01200B3AB487EB512F8
A215267BA521> I<137F3803FFE0380781F8380E007C48131E5A801278A3127C007E131E
EA3F80EBE03C6C6C5A380FFCF03807FFC06C5BC613E0487F38079FFC380F07FEEA1E0348
C67E48133FEC1F8048130FA21407A315001278140E6C5B6C5B380F80F03803FFE0C66CC7
FC19277DA521> 56 D E
%EndDVIPSBitmapFont
end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%PaperSize: A4

%%EndSetup
%%Page: 1 1
1 0 bop 523 3615 a @beginspecial @setspecial
 gnudict begin gsave 0 0 translate 0.100 0.100 scale 0 setgray newpath
1.000 UL LTb 450 300 M 63 0 V 2937 0 R -63 0 V 450 551 M 63 0 V 2937
0 R -63 0 V 450 803 M 63 0 V 2937 0 R -63 0 V 450 1054 M 63 0 V 2937
0 R -63 0 V 450 1306 M 63 0 V 2937 0 R -63 0 V 450 1557 M 63 0 V 2937
0 R -63 0 V 450 1809 M 63 0 V 2937 0 R -63 0 V 450 2060 M 63 0 V 2937
0 R -63 0 V 750 300 M 0 63 V 0 1697 R 0 -63 V 1350 300 M 0 63 V 0 1697
R 0 -63 V 1950 300 M 0 63 V 0 1697 R 0 -63 V 2550 300 M 0 63 V 0 1697
R 0 -63 V 3150 300 M 0 63 V 0 1697 R 0 -63 V 1.000 UL LTb 450 300 M
3000 0 V 0 1760 V -3000 0 V 450 300 L 1.000 UL LT0 3087 1947 M 263
0 V 450 2039 M 54 -187 V 58 -183 V 58 -167 V 59 -151 V 58 -135 V 59
-121 V 854 990 L 59 -92 V 58 -80 V 59 -67 V 58 -56 V 58 -46 V 57 -37
V 58 -29 V 56 -22 V 57 -17 V 55 -11 V 56 -6 V 54 -3 V 54 0 V 53 2 V
52 5 V 52 6 V 50 6 V 50 8 V 48 8 V 48 9 V 46 8 V 46 9 V 44 8 V 43 8
V 41 8 V 41 8 V 38 7 V 38 6 V 36 7 V 35 6 V 33 5 V 32 5 V 30 5 V 28
5 V 27 4 V 25 3 V 24 4 V 22 3 V 20 3 V 19 2 V 16 2 V 15 2 V 13 2 V
12 1 V 9 1 V 8 1 V 6 1 V 4 1 V 2 0 V 2 0 V 2 0 V 4 1 V 6 1 V 8 0 V
9 2 V 12 1 V 13 1 V 15 2 V 16 2 V 19 2 V 20 2 V 22 2 V 24 3 V 25 2
V 27 3 V 28 2 V 30 3 V 32 2 V 33 3 V 35 3 V 36 2 V 38 3 V 38 3 V 41
2 V 41 3 V 43 2 V 44 3 V 46 2 V 42 2 V stroke grestore end showpage
 
@endspecial
Fc 2641 1990 a(1) p Fb 2678 2020 a(S) p Fc 2729 2032
a(0) p Fa 2794 2020 a(for) 27 b(V) p Fc 2983 2032 a(18) p
Fb 2044 3594 a(r) p Fa 30 w([fm]) 606 2631 y
 gsave currentpoint currentpoint translate 270 rotate neg exch neg
exch translate
 606 2631
a Fb -157 w(E) p Fa 33 w([MeV]) 606 2631 y
 currentpoint grestore moveto
 606 2631 a
Fa 3095 3475 a(1.4) -607 b(1.2) -575 b(1) h(0.8) -607
b(0.6) 732 1925 y(500) 732 2134 y(400) 732 2344 y(300) 732
2553 y(200) 732 2763 y(100) 815 2972 y(0) 704 3182 y(-100) 704
3392 y(-200) p 90 rotate dyy eop
%%Trailer
end
userdict /end-hook known{end-hook}if
%%EOF
